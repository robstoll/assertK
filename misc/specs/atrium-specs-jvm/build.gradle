description = 'Provides specifications of Atrium (for the JVM platform) which can be reused by ' +
    'APIs and domain/core-implementations of Atrium, to verify that they fulfill the specification.'

dependencies {
    api prefixedProject('domain-api-jvm')
    api prefixedProject('core-api-jvm')
    api prefixedProject('domain-builders-jvm')
    // exclude this dependency in case you want to use another translation
    api prefixedProject('translations-en_GB-jvm')
    api prefixedProject('verbs-internal-jvm')
    api spekExtensions()
    api "io.mockk:mockk:$mockk_version"

    implementation prefixedProject('api-fluent-en_GB-jvm')

    // exclude this dependency in case you want to use another implementation
    runtimeOnly prefixedProject('domain-robstoll-jvm')
    runtimeOnly prefixedProject('core-robstoll-jvm')
    runtimeOnly prefixedProject('domain-robstoll-kotlin_1_3-common')

    //TODO 1.0.0 remove, only needed for returnValueOf test
    implementation prefixedProject('api-cc-en_GB-jvm')
}

dependencies {
    //spek2 requires stdlib-jdk8 and kotlin-reflect
    runtimeOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    runtimeOnly "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    api "org.spekframework.spek2:spek-dsl-jvm:$spek2_version", excludeKotlin
    runtimeOnly "org.spekframework.spek2:spek-runner-junit5:$spek2_version", excludeKotlin

    //TODO #116 remove once there aren't any spek1 specs anymore
    api "org.jetbrains.spek:spek-api:$spek_version", excludeKotlin
    api mockito(), excludeKotlin
    api niok(), excludeKotlin
}

compileKotlin.kotlinOptions.languageVersion = '1.3'
