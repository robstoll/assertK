<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="atrium-api-cc-infix-en_GB-jvm"><sessioninfo id="mbp.local-7927a2f9" start="1576435519244" dump="1576435525955"/><package name="ch/tutteli/atrium/domain/robstoll/lib/creating/throwable/thrown/creators"><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/throwable/thrown/creators/ThrowableThrownFailureHandler$Companion$createStackTraceHint$assertions$1" sourcefilename="ThrowableThrownFailureHandler.kt"><method name="invoke" desc="(Ljava/lang/String;)Lch/tutteli/atrium/assertions/ExplanatoryAssertion;" line="120"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/throwable/thrown/creators/ThrowableThrownAssertionCreator" sourcefilename="ThrowableThrownAssertionCreator.kt"><method name="executeActAssertNothingThrown" desc="(Lch/tutteli/atrium/domain/creating/throwable/thrown/ThrowableThrown$Builder;)V" line="25"><counter type="INSTRUCTION" missed="4" covered="60"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="executeActAndCreateAssertion" desc="(Lch/tutteli/atrium/domain/creating/throwable/thrown/ThrowableThrown$Builder;Lch/tutteli/atrium/reporting/translating/Translatable;Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function1;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="catchThrowableAndAdjust" desc="(Lch/tutteli/atrium/domain/creating/throwable/thrown/ThrowableThrown$Builder;)Ljava/lang/Throwable;" line="61"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createReportingPlantForThrowable" desc="(Lch/tutteli/atrium/domain/creating/throwable/thrown/ThrowableThrown$Builder;Ljava/lang/Throwable;)Lch/tutteli/atrium/creating/ReportingAssertionPlantNullable;" line="74"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/domain/creating/throwable/thrown/ThrowableThrown$AbsentThrowableMessageProvider;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="144"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="30"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/throwable/thrown/creators/ThrowableThrownFailureHandler$Companion" sourcefilename="ThrowableThrownFailureHandler.kt"><method name="propertiesOfThrowable" desc="(Ljava/lang/Throwable;ILch/tutteli/atrium/assertions/Assertion;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="59"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="propertiesOfThrowable$default" desc="(Lch/tutteli/atrium/domain/robstoll/lib/creating/throwable/thrown/creators/ThrowableThrownFailureHandler$Companion;Ljava/lang/Throwable;ILch/tutteli/atrium/assertions/Assertion;ILjava/lang/Object;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="57"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createExplanation" desc="(Ljava/lang/Throwable;)Lch/tutteli/atrium/assertions/ExplanatoryAssertion;" line="69"><counter type="INSTRUCTION" missed="5" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createHints" desc="(Ljava/lang/Throwable;ILjava/lang/String;)Lch/tutteli/atrium/assertions/Assertion;" line="81"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createMessageHint" desc="(Ljava/lang/Throwable;)Lch/tutteli/atrium/assertions/DescriptiveAssertion;" line="99"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createStackTraceHint" desc="(Ljava/lang/Throwable;ILjava/lang/String;)Lch/tutteli/atrium/assertions/Assertion;" line="112"><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createCauseHint" desc="(Ljava/lang/Throwable;I)Lch/tutteli/atrium/assertions/AssertionGroup;" line="138"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createChildHint" desc="(Ljava/lang/Throwable;Ljava/lang/Throwable;Lch/tutteli/atrium/reporting/translating/Translatable;I)Lch/tutteli/atrium/assertions/AssertionGroup;" line="157"><counter type="INSTRUCTION" missed="1" covered="40"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="263"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="0" covered="60"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/throwable/thrown/creators/ThrowableThrownAssertionCreator$createReportingPlantForThrowable$1" sourcefilename="ThrowableThrownAssertionCreator.kt"><method name="invoke" desc="()Ljava/lang/Throwable;" line="76"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/throwable/thrown/creators/CreatorsKt$_notThrown$1" sourcefilename="creators.kt"><method name="invoke" desc="(Ljava/lang/Throwable;)Lch/tutteli/atrium/core/Option;" line="59"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/throwable/thrown/creators/ThrowableThrownAssertionCreator$executeActAssertNothingThrown$explainingAssertion$1" sourcefilename="ThrowableThrownAssertionCreator.kt"><method name="invoke" desc="()Lch/tutteli/atrium/assertions/AssertionGroup;" line="36"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/throwable/thrown/creators/ThrowableThrownAssertionCreator$executeActAssertNothingThrown$1" sourcefilename="ThrowableThrownAssertionCreator.kt"><method name="invoke" desc="()Z" line="29"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/throwable/thrown/creators/CreatorsKt" sourcefilename="creators.kt"><method name="_isThrown" desc="(Lch/tutteli/atrium/domain/creating/throwable/thrown/ThrowableThrown$Builder;Lkotlin/reflect/KClass;)Lch/tutteli/atrium/domain/creating/changers/ChangedSubjectPostStep;" line="19"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createReportingAssertionContainerForThrowable" desc="(Lch/tutteli/atrium/domain/creating/throwable/thrown/ThrowableThrown$Builder;)Lch/tutteli/atrium/creating/ReportingAssertionContainer;" line="29"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="catchThrowableAndAdjust" desc="(Lch/tutteli/atrium/domain/creating/throwable/thrown/ThrowableThrown$Builder;)Ljava/lang/Throwable;" line="42"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_notThrown" desc="(Lch/tutteli/atrium/domain/creating/throwable/thrown/ThrowableThrown$Builder;)Lch/tutteli/atrium/domain/creating/changers/ChangedSubjectPostStep;" line="53"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/throwable/thrown/creators/ThrowableThrownFailureHandler" sourcefilename="ThrowableThrownFailureHandler.kt"><method name="createAssertion" desc="(Lch/tutteli/atrium/creating/Expect;Lch/tutteli/atrium/assertions/Assertion;Lch/tutteli/atrium/core/Option;)Lch/tutteli/atrium/assertions/Assertion;" line="28"><counter type="INSTRUCTION" missed="70" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="19"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="76" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/throwable/thrown/creators/CreateAdditionalHintsKt" sourcefilename="createAdditionalHints.kt"><method name="createAdditionalHints" desc="(Ljava/lang/Throwable;I)Ljava/util/List;" line="9"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/throwable/thrown/creators/CreatorsDeprecatedKt" sourcefilename="creatorsDeprecated.kt"><method name="_nothingThrown" desc="(Lch/tutteli/atrium/domain/creating/throwable/thrown/ThrowableThrown$Builder;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_toBe" desc="(Lch/tutteli/atrium/domain/creating/throwable/thrown/ThrowableThrown$Builder;Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function1;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="creators.kt"><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="5" ci="0" mb="0" cb="0"/><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="6" ci="0" mb="0" cb="0"/><line nr="23" mi="2" ci="0" mb="0" cb="0"/><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="33" mi="5" ci="0" mb="0" cb="0"/><line nr="34" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="4" ci="0" mb="0" cb="0"/><line nr="36" mi="4" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="5" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="25" ci="0" mb="2" cb="0"/><line nr="60" mi="6" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="117" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="createAdditionalHints.kt"><line nr="9" mi="0" ci="8" mb="0" cb="0"/><line nr="10" mi="0" ci="2" mb="0" cb="0"/><line nr="11" mi="0" ci="1" mb="0" cb="0"/><line nr="12" mi="0" ci="4" mb="0" cb="0"/><line nr="13" mi="0" ci="2" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="5" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ThrowableThrownFailureHandler.kt"><line nr="19" mi="6" ci="0" mb="0" cb="0"/><line nr="28" mi="8" ci="0" mb="0" cb="0"/><line nr="29" mi="6" ci="0" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="5" ci="0" mb="0" cb="0"/><line nr="33" mi="5" ci="0" mb="0" cb="0"/><line nr="34" mi="1" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="37" mi="5" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="13" ci="0" mb="2" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="5" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="11" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="5" ci="9" mb="1" cb="1"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="8" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="7" mb="0" cb="0"/><line nr="90" mi="0" ci="22" mb="0" cb="2"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="2"/><line nr="113" mi="0" ci="12" mb="0" cb="2"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="11" mb="0" cb="0"/><line nr="122" mi="0" ci="9" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="2"/><line nr="124" mi="0" ci="13" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="16" mb="0" cb="2"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="1" ci="12" mb="1" cb="1"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="82" covered="277"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="15" covered="61"/><counter type="COMPLEXITY" missed="5" covered="14"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="1" covered="2"/></sourcefile><sourcefile name="creatorsDeprecated.kt"><line nr="12" mi="0" ci="4" mb="0" cb="0"/><line nr="13" mi="0" ci="6" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ThrowableThrownAssertionCreator.kt"><line nr="20" mi="0" ci="6" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="2"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="17" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="10" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="7" mb="0" cb="0"/><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="8" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="8" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="155"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="34"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><counter type="INSTRUCTION" missed="203" covered="497"/><counter type="BRANCH" missed="6" covered="14"/><counter type="LINE" missed="43" covered="114"/><counter type="COMPLEXITY" missed="11" covered="26"/><counter type="METHOD" missed="7" covered="20"/><counter type="CLASS" missed="3" covered="8"/></package><package name="ch/tutteli/atrium/domain/robstoll/creating/charsequence/contains/creators"><class name="ch/tutteli/atrium/domain/robstoll/creating/charsequence/contains/creators/CharSequenceContainsAssertionsImpl" sourcefilename="CharSequenceContainsAssertionsImpl.kt"><method name="values" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$CheckerOption;Ljava/util/List;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="17"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valuesIgnoringCase" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$CheckerOption;Ljava/util/List;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="22"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultTranslationOf" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$CheckerOption;Ljava/util/List;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="27"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultTranslationOfIgnoringCase" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$CheckerOption;Ljava/util/List;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="32"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="regex" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$CheckerOption;Ljava/util/List;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="37"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="regexIgnoringCase" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$CheckerOption;Ljava/util/List;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="42"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="43"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="CharSequenceContainsAssertionsImpl.kt"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="4" ci="0" mb="0" cb="0"/><line nr="32" mi="4" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="43"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="20" covered="43"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></package><package name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/builders"><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/builders/NoOpCheckerOption$NotIntendedForUseChecker" sourcefilename="NoOpCheckerOption.kt"><method name="createAssertion" desc="(I)Lch/tutteli/atrium/assertions/Assertion;" line="19"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="23" covered="7"/><counter type="LINE" missed="3" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/builders/IterableContainsBuilder" sourcefilename="IterableContainsBuilder.kt"><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$SearchBehaviour;)V" line="7"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/builders/NoOpCheckerOption" sourcefilename="NoOpCheckerOption.kt"><method name="getCheckers" desc="()Ljava/util/List;" line="16"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContainsBuilder" desc="()Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="IterableContainsBuilder.kt"><line nr="7" mi="0" ci="1" mb="0" cb="0"/><line nr="9" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NoOpCheckerOption.kt"><line nr="12" mi="0" ci="5" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="3" ci="5" mb="0" cb="0"/><line nr="18" mi="0" ci="7" mb="0" cb="0"/><line nr="19" mi="5" ci="0" mb="0" cb="0"/><line nr="20" mi="13" ci="0" mb="0" cb="0"/><line nr="21" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="23"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="26" covered="35"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="3"/></package><package name="ch/tutteli/atrium/domain/robstoll/lib/creating/any/typetransformation/failurehandlers"><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/any/typetransformation/failurehandlers/ThrowableThrownFailureHandler" sourcefilename="ThrowableThrownFailureHandler.kt"><method name="createFailingAssertion" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/Assertion;" line="23"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;Lkotlin/reflect/KClass;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/any/typetransformation/failurehandlers/ThrowableThrownFailureHandler$createFailingAssertion$1" sourcefilename="ThrowableThrownFailureHandler.kt"><method name="invoke" desc="()Z" line="24"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/any/typetransformation/failurehandlers/ThrowableThrownFailureHandler$createFailingAssertion$2" sourcefilename="ThrowableThrownFailureHandler.kt"><method name="invoke" desc="()Lch/tutteli/atrium/assertions/AssertionGroup;" line="27"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/any/typetransformation/failurehandlers/ThrowableThrownFailureHandlerKt" sourcefilename="ThrowableThrownFailureHandler.kt"><method name="createAdditionalHints" desc="(Ljava/lang/Throwable;I)Ljava/util/List;" line="60"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/any/typetransformation/failurehandlers/ExplanatoryFailureHandlerBase" sourcefilename="ExplanatoryFailureHandlerBase.kt"><method name="createAndAddAssertionToPlant" desc="(Lch/tutteli/atrium/domain/creating/any/typetransformation/AnyTypeTransformation$ParameterObject;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collectAssertions" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Lkotlin/jvm/functions/Function1;)Ljava/util/List;" line="35"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/any/typetransformation/failurehandlers/ExplanatoryFailureHandlerWithHint" sourcefilename="ExplanatoryFailureHandlerWithHint.kt"><method name="createFailingAssertion" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/Assertion;" line="17"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;)V" line="11"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/any/typetransformation/failurehandlers/ThrowableThrownFailureHandler$Companion" sourcefilename="ThrowableThrownFailureHandler.kt"><method name="propertiesOfException" desc="(Ljava/lang/Throwable;I)Lch/tutteli/atrium/assertions/AssertionGroup;" line="38"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createChildHint" desc="(Ljava/lang/Throwable;Ljava/lang/Throwable;Lch/tutteli/atrium/reporting/translating/Translatable;I)Lch/tutteli/atrium/assertions/AssertionGroup;" line="49"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="11"/><counter type="LINE" missed="3" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/any/typetransformation/failurehandlers/ExplanatoryFailureHandler" sourcefilename="ExplanatoryFailureHandler.kt"><method name="createFailingAssertion" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/DescriptiveAssertion;" line="12"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ExplanatoryFailureHandler.kt"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="4" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExplanatoryFailureHandlerBase.kt"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="0"/><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="6" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="6" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ThrowableThrownFailureHandler.kt"><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><line nr="23" mi="0" ci="10" mb="0" cb="0"/><line nr="24" mi="0" ci="22" mb="1" cb="3"/><line nr="25" mi="0" ci="6" mb="0" cb="0"/><line nr="27" mi="0" ci="8" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="8" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="79"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="6" covered="8"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="1" covered="4"/></sourcefile><sourcefile name="ExplanatoryFailureHandlerWithHint.kt"><line nr="11" mi="0" ci="1" mb="0" cb="0"/><line nr="14" mi="0" ci="8" mb="0" cb="0"/><line nr="17" mi="0" ci="6" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="7" mb="0" cb="2"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="0" ci="8" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="23" covered="213"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="6" covered="38"/><counter type="COMPLEXITY" missed="3" covered="14"/><counter type="METHOD" missed="2" covered="12"/><counter type="CLASS" missed="1" covered="7"/></package><package name="ch/tutteli/atrium/domain/robstoll/creating/charsequence/contains/checkers"><class name="ch/tutteli/atrium/domain/robstoll/creating/charsequence/contains/checkers/CheckerFactoryImpl" sourcefilename="CheckerFactoryImpl.kt"><method name="newAtLeastChecker" desc="(ILjava/lang/String;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$Checker;" line="17"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newAtMostChecker" desc="(ILjava/lang/String;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$Checker;" line="23"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newExactlyChecker" desc="(ILjava/lang/String;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$Checker;" line="29"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newNotChecker" desc="()Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$Checker;" line="31"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="CheckerFactoryImpl.kt"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="8" mb="0" cb="0"/><line nr="23" mi="0" ci="8" mb="0" cb="0"/><line nr="29" mi="0" ci="8" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></package><package name="ch/tutteli/atrium/domain/robstoll/lib/creating/charsequence/contains/checkers"><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/charsequence/contains/checkers/AtLeastChecker$createAssertion$1" sourcefilename="AtLeastChecker.kt"><method name="invoke" desc="()Z" line="23"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/charsequence/contains/checkers/AtMostChecker" sourcefilename="AtMostChecker.kt"><method name="createAssertion" desc="(I)Lch/tutteli/atrium/assertions/Assertion;" line="23"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/String;Lkotlin/jvm/functions/Function1;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/charsequence/contains/checkers/AtMostChecker$createAssertion$1" sourcefilename="AtMostChecker.kt"><method name="invoke" desc="()Z" line="23"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/charsequence/contains/checkers/Checker" sourcefilename="Checker.kt"><method name="&lt;init&gt;" desc="(ILjava/lang/String;Lkotlin/jvm/functions/Function1;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/charsequence/contains/checkers/NotChecker" sourcefilename="NotChecker.kt"><method name="createAssertion" desc="(I)Lch/tutteli/atrium/assertions/Assertion;" line="14"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/charsequence/contains/checkers/NotChecker$createAssertion$1" sourcefilename="NotChecker.kt"><method name="invoke" desc="()Z" line="14"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/charsequence/contains/checkers/ExactlyChecker$createAssertion$1" sourcefilename="ExactlyChecker.kt"><method name="invoke" desc="()Z" line="23"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/charsequence/contains/checkers/ExactlyChecker" sourcefilename="ExactlyChecker.kt"><method name="createAssertion" desc="(I)Lch/tutteli/atrium/assertions/Assertion;" line="23"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/String;Lkotlin/jvm/functions/Function1;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/charsequence/contains/checkers/AtLeastChecker" sourcefilename="AtLeastChecker.kt"><method name="createAssertion" desc="(I)Lch/tutteli/atrium/assertions/Assertion;" line="23"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/String;Lkotlin/jvm/functions/Function1;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="NotChecker.kt"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="23" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ExactlyChecker.kt"><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="23" mi="0" ci="22" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="AtLeastChecker.kt"><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="23" mi="0" ci="22" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="AtMostChecker.kt"><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="23" mi="0" ci="22" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Checker.kt"><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="140"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="17"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="9"/></package><package name="ch/tutteli/atrium/domain/robstoll/creating/iterable/contains/searchbehaviours"><class name="ch/tutteli/atrium/domain/robstoll/creating/iterable/contains/searchbehaviours/SearchBehaviourFactoryImpl" sourcefilename="SearchBehaviourFactoryImpl.kt"><method name="inAnyOrder" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;)Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;" line="12"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inAnyOrderOnly" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;)Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;" line="16"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inOrder" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;)Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;" line="20"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inOrderOnly" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;)Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;" line="24"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inOrderOnlyGrouped" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;)Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;" line="28"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inOrderOnlyGroupedWithin" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;)Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;" line="33"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="SearchBehaviourFactoryImpl.kt"><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></package><package name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/map/get/builders/impl"><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/map/get/builders/impl/MapGetNullableOptionImpl" sourcefilename="MapGetNullableOptionImpl.kt"><method name="assertIt" desc="(Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="15"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPlant" desc="()Lch/tutteli/atrium/creating/AssertionPlant;" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKey" desc="()Ljava/lang/Object;" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/Object;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/map/get/builders/impl/MapGetOptionImpl" sourcefilename="MapGetOptionImpl.kt"><method name="assertIt" desc="(Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="14"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPlant" desc="()Lch/tutteli/atrium/creating/AssertionPlant;" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKey" desc="()Ljava/lang/Object;" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/Object;)V" line="7"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="MapGetNullableOptionImpl.kt"><line nr="8" mi="0" ci="9" mb="0" cb="0"/><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="19" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MapGetOptionImpl.kt"><line nr="7" mi="0" ci="9" mb="0" cb="0"/><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="19" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="80"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="2"/></package><package name="ch/tutteli/atrium/domain/robstoll/creating/iterable/contains/creators"><class name="ch/tutteli/atrium/domain/robstoll/creating/iterable/contains/creators/IterableContainsAssertionsDeprecatedImpl" sourcefilename="IterableContainsAssertionsDeprecatedImpl.kt"><method name="entriesInAnyOrderWithAssert" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$CheckerOption;Ljava/util/List;)Lch/tutteli/atrium/assertions/Assertion;" line="22"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="entriesInAnyOrderOnlyWithAssert" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Ljava/util/List;)Lch/tutteli/atrium/assertions/Assertion;" line="27"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="entriesInOrderOnlyWithAssert" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Ljava/util/List;)Lch/tutteli/atrium/assertions/Assertion;" line="32"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="entriesInOrderOnlyGroupedWithAssert" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Ljava/util/List;)Lch/tutteli/atrium/assertions/Assertion;" line="37"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/creating/iterable/contains/creators/IterableContainsAssertionsImpl" sourcefilename="IterableContainsAssertionsImpl.kt"><method name="valuesInAnyOrder" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$CheckerOption;Ljava/util/List;)Lch/tutteli/atrium/assertions/Assertion;" line="19"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="entriesInAnyOrder" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$CheckerOption;Ljava/util/List;)Lch/tutteli/atrium/assertions/Assertion;" line="24"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valuesInAnyOrderOnly" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Ljava/util/List;)Lch/tutteli/atrium/assertions/Assertion;" line="29"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="entriesInAnyOrderOnly" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Ljava/util/List;)Lch/tutteli/atrium/assertions/Assertion;" line="34"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valuesInOrderOnly" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Ljava/util/List;)Lch/tutteli/atrium/assertions/Assertion;" line="39"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="entriesInOrderOnly" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Ljava/util/List;)Lch/tutteli/atrium/assertions/Assertion;" line="44"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valuesInOrderOnlyGrouped" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Ljava/util/List;)Lch/tutteli/atrium/assertions/Assertion;" line="49"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="entriesInOrderOnlyGrouped" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Ljava/util/List;)Lch/tutteli/atrium/assertions/Assertion;" line="54"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="40" covered="43"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="4" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="IterableContainsAssertionsImpl.kt"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="4" ci="0" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="4" ci="0" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="40" covered="43"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="4" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IterableContainsAssertionsDeprecatedImpl.kt"><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="40" covered="86"/><counter type="LINE" missed="4" covered="10"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="4" covered="10"/><counter type="CLASS" missed="0" covered="2"/></package><package name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/list/get/builders/impl"><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/list/get/builders/impl/ListGetOptionImpl" sourcefilename="ListGetOptionImpl.kt"><method name="assertIt" desc="(Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="14"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPlant" desc="()Lch/tutteli/atrium/creating/AssertionPlant;" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndex" desc="()I" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/creating/AssertionPlant;I)V" line="7"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/list/get/builders/impl/ListGetNullableOptionImpl" sourcefilename="ListGetNullableOptionImpl.kt"><method name="assertIt" desc="(Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="15"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPlant" desc="()Lch/tutteli/atrium/creating/AssertionPlant;" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndex" desc="()I" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/creating/AssertionPlant;I)V" line="8"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ListGetOptionImpl.kt"><line nr="7" mi="0" ci="9" mb="0" cb="0"/><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="19" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ListGetNullableOptionImpl.kt"><line nr="8" mi="0" ci="9" mb="0" cb="0"/><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="19" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="80"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="2"/></package><package name="ch/tutteli/atrium/translations"><class name="ch/tutteli/atrium/translations/DescriptionIterableAssertionKt" sourcefilename="DescriptionIterableAssertion.kt"/><class name="ch/tutteli/atrium/translations/DescriptionFloatingPointAssertion" sourcefilename="DescriptionFloatingPointAssertion.kt"><method name="&lt;clinit&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()Ljava/lang/String;" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;)V" line="10"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getId" desc="()Ljava/lang/String;" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefault" desc="()Ljava/lang/String;" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/translations/DescriptionListAssertion" sourcefilename="DescriptionListAssertion.kt"><method name="&lt;clinit&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefault" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="41"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/translations/DescriptionAnyAssertion" sourcefilename="DescriptionAnyAssertion.kt"><method name="&lt;clinit&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefault" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="76"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/translations/DescriptionIterableAssertion" sourcefilename="DescriptionIterableAssertion.kt"><method name="&lt;clinit&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="291"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefault" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="305"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/translations/DescriptionCollectionAssertion" sourcefilename="DescriptionCollectionAssertion.kt"><method name="&lt;clinit&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefault" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="41"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/translations/DescriptionBigDecimalAssertion" sourcefilename="DescriptionBigDecimalAssertion.kt"><method name="&lt;clinit&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/lang/String;" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefault" desc="()Ljava/lang/String;" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="74"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/translations/DescriptionTypeTransformationAssertion" sourcefilename="DescriptionTypeTransformationAssertion.kt"><method name="&lt;clinit&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/lang/String;" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="13"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefault" desc="()Ljava/lang/String;" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="41"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/translations/DescriptionCharSequenceAssertion" sourcefilename="DescriptionCharSequenceAssertion.kt"><method name="&lt;clinit&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="192"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefault" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="206"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/translations/DescriptionBasic" sourcefilename="DescriptionBasic.kt"><method name="&lt;clinit&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="115"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/lang/String;" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefault" desc="()Ljava/lang/String;" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="129"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/translations/DescriptionPathAssertion" sourcefilename="DescriptionPathAssertion.kt"><method name="&lt;clinit&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="324" covered="0"/><counter type="LINE" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()Ljava/lang/String;" line="5"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;)V" line="5"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getId" desc="()Ljava/lang/String;" line="5"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefault" desc="()Ljava/lang/String;" line="5"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="341" covered="0"/><counter type="LINE" missed="30" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/translations/DescriptionOptionalAssertion" sourcefilename="DescriptionOptionalAssertion.kt"><method name="&lt;clinit&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()Ljava/lang/String;" line="5"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;)V" line="5"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getId" desc="()Ljava/lang/String;" line="5"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefault" desc="()Ljava/lang/String;" line="5"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/translations/ErrorMessages" sourcefilename="ErrorMessages.kt"><method name="&lt;clinit&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;)V" line="9"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getId" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefault" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="88" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/translations/DescriptionComparableAssertion" sourcefilename="DescriptionComparableAssertion.kt"><method name="&lt;clinit&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefault" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="63"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/translations/DescriptionMapAssertion" sourcefilename="DescriptionMapAssertion.kt"><method name="&lt;clinit&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="82"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefault" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="96"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/translations/DescriptionDateTimeLikeAssertion" sourcefilename="DescriptionDateTimeLikeAssertion.kt"><method name="&lt;clinit&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()Ljava/lang/String;" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;)V" line="10"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getId" desc="()Ljava/lang/String;" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefault" desc="()Ljava/lang/String;" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/translations/DescriptionThrowableAssertion" sourcefilename="DescriptionThrowableAssertion.kt"><method name="&lt;clinit&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="104"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefault" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="118"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DescriptionThrowableAssertion.kt"><line nr="9" mi="3" ci="14" mb="0" cb="0"/><line nr="14" mi="0" ci="11" mb="0" cb="0"/><line nr="15" mi="0" ci="11" mb="0" cb="0"/><line nr="16" mi="0" ci="11" mb="0" cb="0"/><line nr="17" mi="0" ci="11" mb="0" cb="0"/><line nr="18" mi="0" ci="11" mb="0" cb="0"/><line nr="19" mi="0" ci="11" mb="0" cb="0"/><line nr="20" mi="0" ci="11" mb="0" cb="0"/><line nr="21" mi="0" ci="11" mb="0" cb="0"/><line nr="22" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="118"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DescriptionListAssertion.kt"><line nr="9" mi="3" ci="14" mb="0" cb="0"/><line nr="10" mi="0" ci="11" mb="0" cb="0"/><line nr="11" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="41"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DescriptionTypeTransformationAssertion.kt"><line nr="13" mi="3" ci="14" mb="0" cb="0"/><line nr="18" mi="0" ci="11" mb="0" cb="0"/><line nr="19" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="41"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DescriptionPathAssertion.kt"><line nr="5" mi="17" ci="0" mb="0" cb="0"/><line nr="6" mi="11" ci="0" mb="0" cb="0"/><line nr="7" mi="11" ci="0" mb="0" cb="0"/><line nr="8" mi="11" ci="0" mb="0" cb="0"/><line nr="9" mi="11" ci="0" mb="0" cb="0"/><line nr="10" mi="11" ci="0" mb="0" cb="0"/><line nr="11" mi="11" ci="0" mb="0" cb="0"/><line nr="12" mi="11" ci="0" mb="0" cb="0"/><line nr="13" mi="11" ci="0" mb="0" cb="0"/><line nr="14" mi="11" ci="0" mb="0" cb="0"/><line nr="15" mi="11" ci="0" mb="0" cb="0"/><line nr="16" mi="11" ci="0" mb="0" cb="0"/><line nr="17" mi="11" ci="0" mb="0" cb="0"/><line nr="18" mi="11" ci="0" mb="0" cb="0"/><line nr="19" mi="11" ci="0" mb="0" cb="0"/><line nr="20" mi="11" ci="0" mb="0" cb="0"/><line nr="21" mi="11" ci="0" mb="0" cb="0"/><line nr="22" mi="11" ci="0" mb="0" cb="0"/><line nr="23" mi="11" ci="0" mb="0" cb="0"/><line nr="24" mi="11" ci="0" mb="0" cb="0"/><line nr="25" mi="11" ci="0" mb="0" cb="0"/><line nr="26" mi="11" ci="0" mb="0" cb="0"/><line nr="27" mi="11" ci="0" mb="0" cb="0"/><line nr="28" mi="11" ci="0" mb="0" cb="0"/><line nr="29" mi="11" ci="0" mb="0" cb="0"/><line nr="30" mi="11" ci="0" mb="0" cb="0"/><line nr="31" mi="11" ci="0" mb="0" cb="0"/><line nr="32" mi="11" ci="0" mb="0" cb="0"/><line nr="33" mi="11" ci="0" mb="0" cb="0"/><line nr="34" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="341" covered="0"/><counter type="LINE" missed="30" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DescriptionIterableAssertion.kt"><line nr="9" mi="3" ci="14" mb="0" cb="0"/><line nr="10" mi="0" ci="11" mb="0" cb="0"/><line nr="11" mi="0" ci="11" mb="0" cb="0"/><line nr="12" mi="0" ci="11" mb="0" cb="0"/><line nr="13" mi="0" ci="11" mb="0" cb="0"/><line nr="14" mi="0" ci="11" mb="0" cb="0"/><line nr="15" mi="0" ci="11" mb="0" cb="0"/><line nr="16" mi="0" ci="11" mb="0" cb="0"/><line nr="17" mi="0" ci="11" mb="0" cb="0"/><line nr="18" mi="0" ci="11" mb="0" cb="0"/><line nr="19" mi="0" ci="11" mb="0" cb="0"/><line nr="20" mi="0" ci="11" mb="0" cb="0"/><line nr="21" mi="0" ci="11" mb="0" cb="0"/><line nr="22" mi="0" ci="11" mb="0" cb="0"/><line nr="23" mi="0" ci="11" mb="0" cb="0"/><line nr="24" mi="0" ci="11" mb="0" cb="0"/><line nr="25" mi="0" ci="11" mb="0" cb="0"/><line nr="26" mi="0" ci="11" mb="0" cb="0"/><line nr="27" mi="0" ci="11" mb="0" cb="0"/><line nr="28" mi="0" ci="11" mb="0" cb="0"/><line nr="29" mi="0" ci="11" mb="0" cb="0"/><line nr="30" mi="0" ci="11" mb="0" cb="0"/><line nr="31" mi="0" ci="11" mb="0" cb="0"/><line nr="32" mi="0" ci="11" mb="0" cb="0"/><line nr="33" mi="0" ci="11" mb="0" cb="0"/><line nr="34" mi="0" ci="11" mb="0" cb="0"/><line nr="35" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="305"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DescriptionCollectionAssertion.kt"><line nr="9" mi="3" ci="14" mb="0" cb="0"/><line nr="10" mi="0" ci="11" mb="0" cb="0"/><line nr="11" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="41"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ErrorMessages.kt"><line nr="9" mi="17" ci="0" mb="0" cb="0"/><line nr="10" mi="11" ci="0" mb="0" cb="0"/><line nr="11" mi="11" ci="0" mb="0" cb="0"/><line nr="12" mi="11" ci="0" mb="0" cb="0"/><line nr="13" mi="11" ci="0" mb="0" cb="0"/><line nr="14" mi="11" ci="0" mb="0" cb="0"/><line nr="15" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="88" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DescriptionFloatingPointAssertion.kt"><line nr="10" mi="17" ci="0" mb="0" cb="0"/><line nr="11" mi="11" ci="0" mb="0" cb="0"/><line nr="12" mi="11" ci="0" mb="0" cb="0"/><line nr="13" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DescriptionAnyAssertion.kt"><line nr="9" mi="3" ci="14" mb="0" cb="0"/><line nr="14" mi="0" ci="12" mb="0" cb="0"/><line nr="19" mi="0" ci="12" mb="0" cb="0"/><line nr="20" mi="0" ci="11" mb="0" cb="0"/><line nr="21" mi="0" ci="11" mb="0" cb="0"/><line nr="22" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="76"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DescriptionOptionalAssertion.kt"><line nr="5" mi="17" ci="0" mb="0" cb="0"/><line nr="6" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DescriptionMapAssertion.kt"><line nr="9" mi="3" ci="14" mb="0" cb="0"/><line nr="10" mi="0" ci="11" mb="0" cb="0"/><line nr="11" mi="0" ci="11" mb="0" cb="0"/><line nr="12" mi="0" ci="11" mb="0" cb="0"/><line nr="13" mi="0" ci="11" mb="0" cb="0"/><line nr="14" mi="0" ci="11" mb="0" cb="0"/><line nr="15" mi="0" ci="11" mb="0" cb="0"/><line nr="16" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="96"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DescriptionCharSequenceAssertion.kt"><line nr="9" mi="3" ci="14" mb="0" cb="0"/><line nr="10" mi="0" ci="11" mb="0" cb="0"/><line nr="11" mi="0" ci="11" mb="0" cb="0"/><line nr="12" mi="0" ci="11" mb="0" cb="0"/><line nr="13" mi="0" ci="11" mb="0" cb="0"/><line nr="14" mi="0" ci="11" mb="0" cb="0"/><line nr="15" mi="0" ci="11" mb="0" cb="0"/><line nr="16" mi="0" ci="11" mb="0" cb="0"/><line nr="17" mi="0" ci="11" mb="0" cb="0"/><line nr="18" mi="0" ci="11" mb="0" cb="0"/><line nr="19" mi="0" ci="11" mb="0" cb="0"/><line nr="20" mi="0" ci="11" mb="0" cb="0"/><line nr="21" mi="0" ci="11" mb="0" cb="0"/><line nr="22" mi="0" ci="11" mb="0" cb="0"/><line nr="23" mi="0" ci="11" mb="0" cb="0"/><line nr="24" mi="0" ci="11" mb="0" cb="0"/><line nr="25" mi="0" ci="11" mb="0" cb="0"/><line nr="26" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="206"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DescriptionComparableAssertion.kt"><line nr="9" mi="3" ci="14" mb="0" cb="0"/><line nr="10" mi="0" ci="11" mb="0" cb="0"/><line nr="11" mi="0" ci="11" mb="0" cb="0"/><line nr="12" mi="0" ci="11" mb="0" cb="0"/><line nr="13" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="63"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DescriptionBasic.kt"><line nr="10" mi="3" ci="14" mb="0" cb="0"/><line nr="11" mi="0" ci="11" mb="0" cb="0"/><line nr="12" mi="0" ci="11" mb="0" cb="0"/><line nr="13" mi="0" ci="11" mb="0" cb="0"/><line nr="14" mi="0" ci="11" mb="0" cb="0"/><line nr="15" mi="0" ci="11" mb="0" cb="0"/><line nr="16" mi="0" ci="11" mb="0" cb="0"/><line nr="17" mi="0" ci="11" mb="0" cb="0"/><line nr="18" mi="0" ci="11" mb="0" cb="0"/><line nr="19" mi="0" ci="11" mb="0" cb="0"/><line nr="20" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="129"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DescriptionDateTimeLikeAssertion.kt"><line nr="10" mi="17" ci="0" mb="0" cb="0"/><line nr="11" mi="11" ci="0" mb="0" cb="0"/><line nr="12" mi="11" ci="0" mb="0" cb="0"/><line nr="13" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DescriptionBigDecimalAssertion.kt"><line nr="10" mi="3" ci="14" mb="0" cb="0"/><line nr="11" mi="0" ci="11" mb="0" cb="0"/><line nr="12" mi="0" ci="11" mb="0" cb="0"/><line nr="13" mi="0" ci="11" mb="0" cb="0"/><line nr="14" mi="0" ci="11" mb="0" cb="0"/><line nr="15" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="74"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="605" covered="1190"/><counter type="LINE" missed="47" covered="100"/><counter type="COMPLEXITY" missed="36" covered="44"/><counter type="METHOD" missed="36" covered="44"/><counter type="CLASS" missed="5" covered="11"/></package><package name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/iterable/contains/builders"><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/iterable/contains/builders/ButAtMostCheckerOption" sourcefilename="ButAtMostCheckerOption.kt"/><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/iterable/contains/builders/ExactlyCheckerOption" sourcefilename="ExactlyCheckerOption.kt"/><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/iterable/contains/builders/NotCheckerOption" sourcefilename="NotCheckerOption.kt"/><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/iterable/contains/builders/NotOrAtMostCheckerOption" sourcefilename="NotOrAtMostCheckerOption.kt"/><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/iterable/contains/builders/AtLeastCheckerOption" sourcefilename="AtLeastCheckerOption.kt"/><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/iterable/contains/builders/AtMostCheckerOption" sourcefilename="AtMostCheckerOption.kt"/><sourcefile name="AtMostCheckerOption.kt"/><sourcefile name="AtLeastCheckerOption.kt"/><sourcefile name="NotOrAtMostCheckerOption.kt"/><sourcefile name="ExactlyCheckerOption.kt"/><sourcefile name="NotCheckerOption.kt"/><sourcefile name="ButAtMostCheckerOption.kt"/></package><package name="ch/tutteli/atrium/domain/robstoll/lib/creating/feature/extract/creators"><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/feature/extract/creators/BaseFeatureExtractorCreator$extractAndAssertIt$1" sourcefilename="FeatureExtractorCreatorImpl.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="85"><counter type="INSTRUCTION" missed="4" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/feature/extract/creators/BaseFeatureExtractorCreator$extract$representationProvider$1" sourcefilename="FeatureExtractorCreatorImpl.kt"><method name="invoke" desc="()Lch/tutteli/atrium/reporting/RawString;" line="41"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/feature/extract/creators/BaseFeatureExtractorCreator$extract$plant$1" sourcefilename="FeatureExtractorCreatorImpl.kt"><method name="invoke" desc="()Ljava/lang/Void;" line="45"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/feature/extract/creators/BaseFeatureExtractorCreator" sourcefilename="FeatureExtractorCreatorImpl.kt"><method name="extract" desc="()Lch/tutteli/atrium/creating/BaseAssertionPlant;" line="28"><counter type="INSTRUCTION" missed="0" covered="81"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="featureExtractionOnce" desc="()Lkotlin/jvm/functions/Function0;" line="69"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractAndAssertIt" desc="(Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="79"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="safeToExtract" desc="()Z" line="101"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFeatureRepresentation" desc="()Lch/tutteli/atrium/reporting/translating/Translatable;" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameterObject" desc="()Lch/tutteli/atrium/domain/creating/feature/extract/FeatureExtractor$ParameterObject;" line="21"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Lch/tutteli/atrium/domain/creating/feature/extract/FeatureExtractor$ParameterObject;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="179"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="41"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/feature/extract/creators/FeatureExtractorCreatorImpl" sourcefilename="FeatureExtractorCreatorImpl.kt"><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Lch/tutteli/atrium/domain/creating/feature/extract/FeatureExtractor$ParameterObject;)V" line="106"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/feature/extract/creators/FeatureExtractorCreatorNullableImpl" sourcefilename="FeatureExtractorCreatorImpl.kt"><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Lch/tutteli/atrium/domain/creating/feature/extract/FeatureExtractor$ParameterObject;)V" line="119"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/feature/extract/creators/BaseFeatureExtractorCreator$featureExtractionOnce$1" sourcefilename="FeatureExtractorCreatorImpl.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="70"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/feature/extract/creators/BaseFeatureExtractorCreator$featureExtractionOnce$1$subject$2" sourcefilename="FeatureExtractorCreatorImpl.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="72"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="FeatureExtractorCreatorImpl.kt"><line nr="19" mi="0" ci="15" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="2"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="6" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="13" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="5" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="11" mb="0" cb="0"/><line nr="72" mi="0" ci="13" mb="0" cb="0"/><line nr="74" mi="0" ci="9" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="11" mb="0" cb="0"/><line nr="85" mi="4" ci="9" mb="1" cb="3"/><line nr="86" mi="0" ci="7" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="8" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="14" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="11" mb="0" cb="0"/><line nr="114" mi="0" ci="12" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="11" mb="0" cb="0"/><line nr="127" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="303"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="58"/><counter type="COMPLEXITY" missed="2" covered="15"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="1" covered="7"/></sourcefile><counter type="INSTRUCTION" missed="9" covered="303"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="58"/><counter type="COMPLEXITY" missed="2" covered="15"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="1" covered="7"/></package><package name="ch/tutteli/atrium/domain/robstoll/lib/creating/basic/contains/creators"><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/basic/contains/creators/ContainsAssertionCreator" sourcefilename="ContainsAssertionCreator.kt"><method name="createAssertionGroup" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/util/List;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="37"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="featureFactory" desc="(ILch/tutteli/atrium/reporting/translating/Translatable;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="75"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSearchBehaviour" desc="()Lch/tutteli/atrium/domain/creating/basic/contains/Contains$SearchBehaviour;" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/domain/creating/basic/contains/Contains$SearchBehaviour;Ljava/util/List;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="100"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/basic/contains/creators/ContainsAssertionCreator$createAssertionGroup$$inlined$map$lambda$1" sourcefilename="ContainsAssertionCreator.kt"><method name="invoke" desc="()Lch/tutteli/atrium/assertions/AssertionGroup;" line="40"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/basic/contains/creators/ContainsObjectsAssertionCreator" sourcefilename="ContainsObjectsAssertionCreator.kt"><method name="searchAndCreateAssertion" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="39"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/domain/creating/basic/contains/Contains$SearchBehaviour;Ljava/util/List;)V" line="29"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ContainsAssertionCreator.kt"><line nr="23" mi="0" ci="9" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="0" ci="10" mb="0" cb="0"/><line nr="40" mi="0" ci="14" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="15" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="7" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="114"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ContainsObjectsAssertionCreator.kt"><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="8" mb="0" cb="0"/><line nr="42" mi="0" ci="7" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="7" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="166"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="3"/></package><package name="ch/tutteli/atrium/domain/robstoll/creating/iterable/contains/checkers"><class name="ch/tutteli/atrium/domain/robstoll/creating/iterable/contains/checkers/CheckerFactoryImpl" sourcefilename="CheckerFactoryImpl.kt"><method name="newAtLeastChecker" desc="(ILjava/lang/String;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Checker;" line="17"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newAtMostChecker" desc="(ILjava/lang/String;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Checker;" line="23"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newExactlyChecker" desc="(ILjava/lang/String;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Checker;" line="29"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newNotChecker" desc="()Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Checker;" line="31"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="CheckerFactoryImpl.kt"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="8" mb="0" cb="0"/><line nr="23" mi="0" ci="8" mb="0" cb="0"/><line nr="29" mi="0" ci="8" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></package><package name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/list/get/builders"><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/list/get/builders/ListGetNullableOption$Companion" sourcefilename="ListGetNullableOption.kt"><method name="create" desc="(Lch/tutteli/atrium/creating/AssertionPlant;I)Lch/tutteli/atrium/api/cc/infix/en_GB/creating/list/get/builders/ListGetNullableOption;" line="44"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/list/get/builders/ListGetOption$Companion" sourcefilename="ListGetOption.kt"><method name="create" desc="(Lch/tutteli/atrium/creating/AssertionPlant;I)Lch/tutteli/atrium/api/cc/infix/en_GB/creating/list/get/builders/ListGetOption;" line="40"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/list/get/builders/ListGetNullableOption" sourcefilename="ListGetNullableOption.kt"/><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/list/get/builders/ListGetOption" sourcefilename="ListGetOption.kt"/><sourcefile name="ListGetNullableOption.kt"><line nr="42" mi="0" ci="7" mb="0" cb="0"/><line nr="44" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ListGetOption.kt"><line nr="38" mi="0" ci="7" mb="0" cb="0"/><line nr="40" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="2"/></package><package name="ch/tutteli/atrium/domain/robstoll/creating/collectors"><class name="ch/tutteli/atrium/domain/robstoll/creating/collectors/AssertionCollectorDeprecatedImpl" sourcefilename="AssertionCollectorDeprecatedImpl.kt"><method name="collect" desc="(Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="19"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collectOrExplain" desc="(ZLch/tutteli/atrium/reporting/translating/Translatable;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="27"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collect" desc="(Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="13"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="collect" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="13"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="collect" desc="(Lch/tutteli/atrium/creating/Expect;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="13"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="collectOrExplain" desc="(ZLch/tutteli/atrium/reporting/translating/Translatable;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="13"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="collectOrExplain" desc="(ZLch/tutteli/atrium/reporting/translating/Translatable;Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="13"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="collectNullable" desc="(Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="13"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="collectNullable" desc="(Lch/tutteli/atrium/creating/AssertionPlantNullable;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="13"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="collectNullableOrExplain" desc="(ZLch/tutteli/atrium/reporting/translating/Translatable;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="13"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="collectNullableOrExplain" desc="(ZLch/tutteli/atrium/reporting/translating/Translatable;Lch/tutteli/atrium/creating/AssertionPlantNullable;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="13"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="119" covered="36"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="9" covered="3"/><counter type="METHOD" missed="9" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/creating/collectors/ThrowingAssertionCollectorForExplanationImpl" sourcefilename="assertionCollectorsForExplanation.kt"><method name="collect" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Lch/tutteli/atrium/creating/MaybeSubject;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/List;" line="38"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collect" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Lch/tutteli/atrium/creating/MaybeSubject;Lkotlin/jvm/functions/Function1;)Ljava/util/List;" line="29"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collectNullable" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Lch/tutteli/atrium/creating/MaybeSubject;Lkotlin/jvm/functions/Function1;)Ljava/util/List;" line="29"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="34"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/creating/collectors/AssertionCollectorImpl" sourcefilename="AssertionCollectorImpl.kt"><method name="collect" desc="(Lch/tutteli/atrium/core/Option;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="14"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collectForComposition" desc="(Lch/tutteli/atrium/core/Option;Lkotlin/jvm/functions/Function1;)Ljava/util/List;" line="19"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collect" desc="(Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="9"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="collect" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="9"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="collect" desc="(Lch/tutteli/atrium/creating/Expect;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="9"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collectNullable" desc="(Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="9"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="collectNullable" desc="(Lch/tutteli/atrium/creating/AssertionPlantNullable;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="9"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="collectNullableOrExplain" desc="(ZLch/tutteli/atrium/reporting/translating/Translatable;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="9"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="collectNullableOrExplain" desc="(ZLch/tutteli/atrium/reporting/translating/Translatable;Lch/tutteli/atrium/creating/AssertionPlantNullable;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="9"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="collectOrExplain" desc="(ZLch/tutteli/atrium/reporting/translating/Translatable;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="9"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="collectOrExplain" desc="(ZLch/tutteli/atrium/reporting/translating/Translatable;Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="9"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="118" covered="24"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="9" covered="3"/><counter type="METHOD" missed="9" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/creating/collectors/NonThrowingAssertionCollectorForExplanationImpl" sourcefilename="assertionCollectorsForExplanation.kt"><method name="collect" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Lch/tutteli/atrium/creating/MaybeSubject;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/List;" line="24"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collect" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Lch/tutteli/atrium/creating/MaybeSubject;Lkotlin/jvm/functions/Function1;)Ljava/util/List;" line="15"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collectNullable" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Lch/tutteli/atrium/creating/MaybeSubject;Lkotlin/jvm/functions/Function1;)Ljava/util/List;" line="15"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="34"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AssertionCollectorDeprecatedImpl.kt"><line nr="13" mi="53" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="119" covered="36"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="9" covered="3"/><counter type="METHOD" missed="9" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AssertionCollectorImpl.kt"><line nr="9" mi="48" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="19" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="118" covered="24"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="9" covered="3"/><counter type="METHOD" missed="9" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="assertionCollectorsForExplanation.kt"><line nr="15" mi="6" ci="9" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="6" ci="9" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="68"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="261" covered="128"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="20" covered="12"/><counter type="METHOD" missed="20" covered="12"/><counter type="CLASS" missed="0" covered="4"/></package><package name="ch/tutteli/atrium/domain/robstoll/creating/any/typetransformation/creators"><class name="ch/tutteli/atrium/domain/robstoll/creating/any/typetransformation/creators/AnyTypeTransformationAssertionsImpl" sourcefilename="AnyTypeTransformationAssertionsImpl.kt"><method name="isNotNull" desc="(Lch/tutteli/atrium/creating/AssertionPlantNullable;Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function1;)V" line="27"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isA" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function1;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="downCast" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Lkotlin/reflect/KClass;Lch/tutteli/atrium/creating/BaseAssertionPlant;Lkotlin/jvm/functions/Function1;Lch/tutteli/atrium/domain/creating/any/typetransformation/AnyTypeTransformation$FailureHandler;)V" line="45"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="transform" desc="(Lch/tutteli/atrium/domain/creating/any/typetransformation/AnyTypeTransformation$ParameterObject;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lch/tutteli/atrium/domain/creating/any/typetransformation/AnyTypeTransformation$FailureHandler;)V" line="54"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="54" covered="17"/><counter type="LINE" missed="6" covered="3"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AnyTypeTransformationAssertionsImpl.kt"><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="4" ci="0" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="6" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="5" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="54" covered="17"/><counter type="LINE" missed="6" covered="3"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="54" covered="17"/><counter type="LINE" missed="6" covered="3"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></package><package name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/charsequence/contains/builders/impl"><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/charsequence/contains/builders/impl/AtMostCheckerOptionImpl$1" sourcefilename="AtMostCheckerOptionImpl.kt"><method name="invoke" desc="(I)Ljava/lang/String;" line="30"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/charsequence/contains/builders/impl/AtMostCheckerOptionImpl$2" sourcefilename="AtMostCheckerOptionImpl.kt"><method name="invoke" desc="(I)Ljava/lang/String;" line="31"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/charsequence/contains/builders/impl/AtMostCheckerOptionImpl$3" sourcefilename="AtMostCheckerOptionImpl.kt"><method name="invoke" desc="(I)Ljava/lang/String;" line="32"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/charsequence/contains/builders/impl/NotOrAtMostCheckerOptionImpl$1" sourcefilename="NotOrAtMostCheckerOptionImpl.kt"><method name="invoke" desc="(I)Ljava/lang/String;" line="28"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/charsequence/contains/builders/impl/ExactlyCheckerOptionImpl$1" sourcefilename="ExactlyCheckerOptionImpl.kt"><method name="invoke" desc="(I)Ljava/lang/String;" line="28"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/charsequence/contains/builders/impl/NotCheckerOptionImpl" sourcefilename="NotCheckerOptionImpl.kt"><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$Builder;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/charsequence/contains/builders/impl/ButAtMostCheckerOptionImpl" sourcefilename="ButAtMostCheckerOptionImpl.kt"><method name="&lt;init&gt;" desc="(ILch/tutteli/atrium/api/cc/infix/en_GB/creating/charsequence/contains/builders/AtLeastCheckerOption;Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$Builder;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/charsequence/contains/builders/impl/AtLeastCheckerOptionImpl$1" sourcefilename="AtLeastCheckerOptionImpl.kt"><method name="invoke" desc="(I)Ljava/lang/String;" line="28"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/charsequence/contains/builders/impl/ButAtMostCheckerOptionImpl$5" sourcefilename="ButAtMostCheckerOptionImpl.kt"><method name="invoke" desc="(I)Ljava/lang/String;" line="38"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/charsequence/contains/builders/impl/ButAtMostCheckerOptionImpl$1" sourcefilename="ButAtMostCheckerOptionImpl.kt"><method name="invoke" desc="(II)Ljava/lang/String;" line="34"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/charsequence/contains/builders/impl/ButAtMostCheckerOptionImpl$2" sourcefilename="ButAtMostCheckerOptionImpl.kt"><method name="invoke" desc="(I)Ljava/lang/String;" line="35"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/charsequence/contains/builders/impl/ButAtMostCheckerOptionImpl$3" sourcefilename="ButAtMostCheckerOptionImpl.kt"><method name="invoke" desc="(I)Ljava/lang/String;" line="36"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/charsequence/contains/builders/impl/ButAtMostCheckerOptionImpl$4" sourcefilename="ButAtMostCheckerOptionImpl.kt"><method name="invoke" desc="(I)Ljava/lang/String;" line="37"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/charsequence/contains/builders/impl/NotOrAtMostCheckerOptionImpl" sourcefilename="NotOrAtMostCheckerOptionImpl.kt"><method name="&lt;init&gt;" desc="(ILch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$Builder;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/charsequence/contains/builders/impl/ExactlyCheckerOptionImpl" sourcefilename="ExactlyCheckerOptionImpl.kt"><method name="&lt;init&gt;" desc="(ILch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$Builder;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/charsequence/contains/builders/impl/NameContainsNotFunKt" sourcefilename="nameContainsNotFun.kt"><method name="nameContainsNotValuesFun" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/charsequence/contains/builders/impl/AtLeastCheckerOptionImpl" sourcefilename="AtLeastCheckerOptionImpl.kt"><method name="&lt;init&gt;" desc="(ILch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$Builder;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/charsequence/contains/builders/impl/AtMostCheckerOptionImpl" sourcefilename="AtMostCheckerOptionImpl.kt"><method name="&lt;init&gt;" desc="(ILch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$Builder;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ButAtMostCheckerOptionImpl.kt"><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="35" mb="0" cb="0"/><line nr="35" mi="18" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="23" mb="0" cb="0"/><line nr="37" mi="0" ci="23" mb="0" cb="0"/><line nr="38" mi="0" ci="23" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="123"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="1" covered="5"/></sourcefile><sourcefile name="AtLeastCheckerOptionImpl.kt"><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="23" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="NotCheckerOptionImpl.kt"><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="nameContainsNotFun.kt"><line nr="9" mi="0" ci="2" mb="0" cb="0"/><line nr="10" mi="0" ci="14" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExactlyCheckerOptionImpl.kt"><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="23" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="AtMostCheckerOptionImpl.kt"><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="23" mb="0" cb="0"/><line nr="31" mi="0" ci="23" mb="0" cb="0"/><line nr="32" mi="0" ci="23" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="NotOrAtMostCheckerOptionImpl.kt"><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="23" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="18" covered="320"/><counter type="LINE" missed="0" covered="41"/><counter type="COMPLEXITY" missed="1" covered="17"/><counter type="METHOD" missed="1" covered="17"/><counter type="CLASS" missed="1" covered="17"/></package><package name="ch/tutteli/atrium/core/robstoll/lib/reporting/translating"><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/translating/PropertiesPerLocaleTranslationSupplier" sourcefilename="PropertiesPerLocaleTranslationSupplier.kt"><method name="get" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Lch/tutteli/atrium/reporting/translating/Locale;)Ljava/lang/String;" line="21"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/translating/CoroutineBasedLocaleOrderDecider$determineOrder$1" sourcefilename="CoroutineBasedLocaleOrderDecider.kt"><method name="doResume" desc="(Ljava/lang/Object;Ljava/lang/Throwable;)Ljava/lang/Object;" line="27"><counter type="INSTRUCTION" missed="302" covered="0"/><counter type="BRANCH" missed="32" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="302" covered="0"/><counter type="BRANCH" missed="32" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/translating/PropertiesPerLocaleTranslationSupplier$get$translations$1" sourcefilename="PropertiesPerLocaleTranslationSupplier.kt"><method name="invoke" desc="(Ljava/lang/String;)Ljava/lang/String;" line="22"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/translating/ResourceBundleBasedTranslator" sourcefilename="ResourceBundleBasedTranslator.kt"><method name="translateWithoutArgs" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;)Ljava/lang/String;" line="39"><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/reporting/translating/Locale;Ljava/util/List;)V" line="33"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="70" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/translating/PropertiesPerEntityAndLocaleTranslationSupplier" sourcefilename="PropertiesPerEntityAndLocaleTranslationSupplier.kt"><method name="get" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Lch/tutteli/atrium/reporting/translating/Locale;)Ljava/lang/String;" line="23"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/translating/CoroutineBasedLocaleOrderDecider$fallbackDueToCountry$1" sourcefilename="CoroutineBasedLocaleOrderDecider.kt"/><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/translating/TranslationSupplierBasedTranslator" sourcefilename="TranslationSupplierBasedTranslator.kt"><method name="translateWithoutArgs" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;)Ljava/lang/String;" line="34"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/reporting/translating/TranslationSupplier;Lch/tutteli/atrium/reporting/translating/LocaleOrderDecider;Lch/tutteli/atrium/reporting/translating/Locale;Ljava/util/List;)V" line="26"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/translating/PropertiesPerEntityAndLocaleTranslationSupplier$get$translations$1" sourcefilename="PropertiesPerEntityAndLocaleTranslationSupplier.kt"><method name="invoke" desc="(Ljava/lang/String;)Ljava/lang/String;" line="27"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/translating/CoroutineBasedLocaleOrderDecider" sourcefilename="CoroutineBasedLocaleOrderDecider.kt"><method name="determineOrder" desc="(Lch/tutteli/atrium/reporting/translating/Locale;Ljava/util/List;)Lkotlin/sequences/Sequence;" line="27"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="normalCase$default" desc="(Lch/tutteli/atrium/core/robstoll/lib/reporting/translating/CoroutineBasedLocaleOrderDecider;Lkotlin/coroutines/experimental/SequenceBuilder;Lch/tutteli/atrium/reporting/translating/Locale;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/experimental/Continuation;ILjava/lang/Object;)Ljava/lang/Object;" line="52"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/translating/CoroutineBasedLocaleOrderDecider$normalCase$1" sourcefilename="CoroutineBasedLocaleOrderDecider.kt"/><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/translating/CoroutineBasedLocaleOrderDecider$fallbackDueToVariant$1" sourcefilename="CoroutineBasedLocaleOrderDecider.kt"/><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/translating/PropertiesBasedTranslationSupplier" sourcefilename="PropertiesBasedTranslationSupplier.kt"><method name="getOrLoadProperties" desc="(Ljava/lang/Object;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;" line="40"><counter type="INSTRUCTION" missed="146" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFileNameFor" desc="(Ljava/lang/String;Lch/tutteli/atrium/reporting/translating/Locale;)Ljava/lang/String;" line="73"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="212" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/translating/ResourceBundleBasedTranslator$Companion" sourcefilename="ResourceBundleBasedTranslator.kt"><method name="create" desc="(Lch/tutteli/atrium/reporting/translating/Locale;[Lch/tutteli/atrium/reporting/translating/Locale;)Lch/tutteli/atrium/core/robstoll/lib/reporting/translating/ResourceBundleBasedTranslator;" line="64"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/translating/TranslationSupplierBasedTranslator$translateWithoutArgs$1" sourcefilename="TranslationSupplierBasedTranslator.kt"><method name="invoke" desc="(Lch/tutteli/atrium/reporting/translating/Locale;)Ljava/lang/String;" line="35"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/translating/CoroutineBasedLocaleOrderDecider$fallbackDueToScript$1" sourcefilename="CoroutineBasedLocaleOrderDecider.kt"/><sourcefile name="PropertiesPerLocaleTranslationSupplier.kt"><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="18" ci="0" mb="0" cb="0"/><line nr="22" mi="9" ci="0" mb="0" cb="0"/><line nr="23" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="CoroutineBasedLocaleOrderDecider.kt"><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="140" ci="0" mb="16" cb="0"/><line nr="28" mi="9" ci="0" mb="0" cb="0"/><line nr="29" mi="12" ci="0" mb="4" cb="0"/><line nr="30" mi="65" ci="0" mb="8" cb="0"/><line nr="31" mi="73" ci="0" mb="4" cb="0"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="7" ci="0" mb="0" cb="0"/><line nr="52" mi="6" ci="0" mb="0" cb="0"/><line nr="53" mi="6" ci="0" mb="0" cb="0"/><line nr="54" mi="6" ci="0" mb="0" cb="0"/><line nr="55" mi="13" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="355" covered="0"/><counter type="BRANCH" missed="32" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="PropertiesPerEntityAndLocaleTranslationSupplier.kt"><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="4" ci="0" mb="0" cb="0"/><line nr="24" mi="8" ci="0" mb="0" cb="0"/><line nr="25" mi="6" ci="0" mb="0" cb="0"/><line nr="26" mi="10" ci="0" mb="0" cb="0"/><line nr="27" mi="12" ci="0" mb="0" cb="0"/><line nr="29" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="ResourceBundleBasedTranslator.kt"><line nr="33" mi="1" ci="0" mb="0" cb="0"/><line nr="36" mi="4" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="9" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="16" ci="0" mb="0" cb="0"/><line nr="43" mi="16" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="5" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="83" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="TranslationSupplierBasedTranslator.kt"><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="31" mi="10" ci="0" mb="0" cb="0"/><line nr="34" mi="7" ci="0" mb="0" cb="0"/><line nr="35" mi="16" ci="0" mb="0" cb="0"/><line nr="36" mi="10" ci="0" mb="4" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="65" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="PropertiesBasedTranslationSupplier.kt"><line nr="18" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="6" ci="0" mb="0" cb="0"/><line nr="40" mi="29" ci="0" mb="4" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="6" ci="0" mb="0" cb="0"/><line nr="44" mi="19" ci="0" mb="2" cb="0"/><line nr="45" mi="12" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="2" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="48" mi="23" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="9" ci="0" mb="0" cb="0"/><line nr="52" mi="20" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="10" ci="0" mb="0" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="2" cb="0"/><line nr="78" mi="7" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="2" cb="0"/><line nr="81" mi="7" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="2" cb="0"/><line nr="84" mi="7" ci="0" mb="0" cb="0"/><line nr="86" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="212" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="818" covered="0"/><counter type="BRANCH" missed="50" covered="0"/><counter type="LINE" missed="66" covered="0"/><counter type="COMPLEXITY" missed="46" covered="0"/><counter type="METHOD" missed="19" covered="0"/><counter type="CLASS" missed="11" covered="0"/></package><package name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/charsequence/contains/builders"><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/charsequence/contains/builders/ExactlyCheckerOption" sourcefilename="ExactlyCheckerOption.kt"/><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/charsequence/contains/builders/NotCheckerOption" sourcefilename="NotCheckerOption.kt"/><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/charsequence/contains/builders/AtLeastCheckerOption" sourcefilename="AtLeastCheckerOption.kt"/><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/charsequence/contains/builders/AtMostCheckerOption" sourcefilename="AtMostCheckerOption.kt"/><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/charsequence/contains/builders/ButAtMostCheckerOption" sourcefilename="ButAtMostCheckerOption.kt"/><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/charsequence/contains/builders/NotOrAtMostCheckerOption" sourcefilename="NotOrAtMostCheckerOption.kt"/><sourcefile name="ExactlyCheckerOption.kt"/><sourcefile name="ButAtMostCheckerOption.kt"/><sourcefile name="AtLeastCheckerOption.kt"/><sourcefile name="NotCheckerOption.kt"/><sourcefile name="AtMostCheckerOption.kt"/><sourcefile name="NotOrAtMostCheckerOption.kt"/></package><package name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/map/get/builders"><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/map/get/builders/MapGetOption" sourcefilename="MapGetOption.kt"/><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/map/get/builders/MapGetNullableOption" sourcefilename="MapGetNullableOption.kt"/><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/map/get/builders/MapGetNullableOption$Companion" sourcefilename="MapGetNullableOption.kt"><method name="create" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/Object;)Lch/tutteli/atrium/api/cc/infix/en_GB/creating/map/get/builders/MapGetNullableOption;" line="45"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/map/get/builders/MapGetOption$Companion" sourcefilename="MapGetOption.kt"><method name="create" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/Object;)Lch/tutteli/atrium/api/cc/infix/en_GB/creating/map/get/builders/MapGetOption;" line="44"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="MapGetNullableOption.kt"><line nr="43" mi="0" ci="7" mb="0" cb="0"/><line nr="45" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MapGetOption.kt"><line nr="39" mi="0" ci="7" mb="0" cb="0"/><line nr="44" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="2"/></package><package name="ch/tutteli/atrium/domain/robstoll/lib/creating/throwable/thrown/builders"><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/throwable/thrown/builders/ThrowableThrownBuilder" sourcefilename="ThrowableThrownBuilder.kt"><method name="getAssertionVerb" desc="()Lch/tutteli/atrium/reporting/translating/Translatable;" line="33"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAct" desc="()Lkotlin/jvm/functions/Function0;" line="34"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReporter" desc="()Lch/tutteli/atrium/reporting/Reporter;" line="35"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Lkotlin/jvm/functions/Function0;Lch/tutteli/atrium/reporting/Reporter;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ThrowableThrownBuilder.kt"><line nr="32" mi="0" ci="12" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></package><package name="ch/tutteli/atrium/domain/robstoll/lib/creating/charsequence/contains/creators"><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/charsequence/contains/creators/CharSequenceContainsAssertionCreator$makeSubjectMultipleTimesConsumable$1" sourcefilename="CharSequenceContainsAssertionCreator.kt"><method name="invoke" desc="(Ljava/lang/CharSequence;)Ljava/lang/String;" line="46"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/charsequence/contains/creators/CharSequenceContainsAssertionCreator" sourcefilename="CharSequenceContainsAssertionCreator.kt"><method name="getDescriptionContains" desc="()Lch/tutteli/atrium/reporting/translating/Translatable;" line="39"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescriptionNumberOfOccurrences" desc="()Lch/tutteli/atrium/reporting/translating/Translatable;" line="40"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAssertionGroupType" desc="()Lch/tutteli/atrium/assertions/AssertionGroupType;" line="42"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeSubjectMultipleTimesConsumable" desc="(Lch/tutteli/atrium/creating/SubjectProvider;)Lch/tutteli/atrium/creating/SubjectProvider;" line="46"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="search" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/lang/Object;)I" line="50"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decorateAssertion" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Lch/tutteli/atrium/assertions/Assertion;)Ljava/util/List;" line="55"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGroupDescription" desc="()Lch/tutteli/atrium/reporting/translating/Translatable;" line="36"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$SearchBehaviour;Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$Searcher;Ljava/util/List;Lch/tutteli/atrium/reporting/translating/Translatable;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="86"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/charsequence/contains/creators/CreatorsKt" sourcefilename="creators.kt"><method name="_containsValues" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$CheckerOption;Ljava/util/List;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="18"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_containsValuesIgnoringCase" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$CheckerOption;Ljava/util/List;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="24"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkOnlyAllowedTypeNotEmptyStringAndCreateAssertionGroup" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$CheckerOption;Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$Searcher;Ljava/util/List;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="31"><counter type="INSTRUCTION" missed="12" covered="122"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_containsDefaultTranslationOf" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$CheckerOption;Ljava/util/List;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="53"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_containsDefaultTranslationOfIgnoringCase" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$CheckerOption;Ljava/util/List;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="58"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_containsRegex" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$CheckerOption;Ljava/util/List;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="63"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_containsRegexIgnoringCase" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$CheckerOption;Ljava/util/List;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="68"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createAssertionGroup" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$CheckerOption;Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$Searcher;Ljava/util/List;Lch/tutteli/atrium/reporting/translating/Translatable;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="81"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="56" covered="203"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="3" covered="26"/><counter type="COMPLEXITY" missed="4" covered="12"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="CharSequenceContainsAssertionCreator.kt"><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="10" mb="0" cb="0"/><line nr="39" mi="0" ci="7" mb="0" cb="0"/><line nr="40" mi="0" ci="8" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="12" mb="0" cb="0"/><line nr="50" mi="0" ci="15" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="92"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="creators.kt"><line nr="18" mi="0" ci="8" mb="0" cb="0"/><line nr="24" mi="0" ci="8" mb="0" cb="0"/><line nr="31" mi="11" ci="17" mb="2" cb="2"/><line nr="32" mi="1" ci="0" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="29" mb="0" cb="8"/><line nr="36" mi="0" ci="14" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="22" mb="0" cb="2"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="23" mb="0" cb="2"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="7" mb="0" cb="0"/><line nr="53" mi="16" ci="0" mb="0" cb="0"/><line nr="58" mi="16" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="10" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="56" covered="203"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="3" covered="26"/><counter type="COMPLEXITY" missed="4" covered="12"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="56" covered="295"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="3" covered="35"/><counter type="COMPLEXITY" missed="4" covered="21"/><counter type="METHOD" missed="2" covered="15"/><counter type="CLASS" missed="0" covered="3"/></package><package name="ch/tutteli/atrium/domain/robstoll/lib/creating/changers"><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/changers/ExtractFeatureKt$_extractFeature$3$assertionContainer$1" sourcefilename="extractFeature.kt"><method name="invoke" desc="()Lch/tutteli/atrium/core/Some;" line="55"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/changers/ExtractFeatureKt$_extractFeature$$inlined$fold$lambda$1" sourcefilename="extractFeature.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="56"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/changers/ChangeSubjectKt" sourcefilename="changeSubject.kt"><method name="_changeSubjectUnreported" desc="(Lch/tutteli/atrium/creating/Expect;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/Expect;" line="15"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_changeSubject" desc="(Lch/tutteli/atrium/creating/Expect;Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;Lch/tutteli/atrium/domain/creating/changers/SubjectChanger$FailureHandler;Lch/tutteli/atrium/core/Option;)Lch/tutteli/atrium/creating/Expect;" line="30"><counter type="INSTRUCTION" missed="93" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="111" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/changers/ExtractFeatureKt" sourcefilename="extractFeature.kt"><method name="_extractFeature" desc="(Lch/tutteli/atrium/creating/Expect;Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;Lch/tutteli/atrium/core/Option;Ljava/lang/Object;)Lch/tutteli/atrium/creating/Expect;" line="22"><counter type="INSTRUCTION" missed="62" covered="65"/><counter type="LINE" missed="18" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="62" covered="65"/><counter type="LINE" missed="18" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/changers/ChangeSubjectKt$_changeSubject$descriptiveAssertion$1" sourcefilename="changeSubject.kt"><method name="invoke" desc="()Z" line="41"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="extractFeature.kt"><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="7" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="2" ci="0" mb="0" cb="0"/><line nr="27" mi="2" ci="0" mb="0" cb="0"/><line nr="28" mi="2" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="30" mi="4" ci="0" mb="0" cb="0"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="36" mi="9" ci="0" mb="0" cb="0"/><line nr="38" mi="4" ci="0" mb="0" cb="0"/><line nr="41" mi="4" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="44" mi="5" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="11" mb="0" cb="0"/><line nr="56" mi="0" ci="18" mb="0" cb="2"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="2" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="62" covered="80"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="18" covered="14"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="changeSubject.kt"><line nr="15" mi="2" ci="0" mb="0" cb="0"/><line nr="16" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="7" ci="0" mb="0" cb="0"/><line nr="19" mi="1" ci="0" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="33" mi="7" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="12" ci="0" mb="0" cb="0"/><line nr="40" mi="6" ci="0" mb="0" cb="0"/><line nr="41" mi="9" ci="0" mb="0" cb="0"/><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="2" cb="0"/><line nr="46" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="6" ci="0" mb="0" cb="0"/><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="114" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="176" covered="80"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="40" covered="14"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="2" covered="3"/></package><package name="ch/tutteli/atrium/domain/robstoll/lib/creating/filesystem"><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/filesystem/SymbolicLinkResolvingKt" sourcefilename="symbolicLinkResolving.kt"><method name="explainForResolvedLink" desc="(Ljava/nio/file/Path;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="15"><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAllLevelResolvedSymlinkHints" desc="(Ljava/nio/file/Path;Ljava/util/Deque;)Ljava/nio/file/Path;" line="38"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAllLevelResolvedSymlinkHints" desc="(Ljava/nio/file/Path;Ljava/util/Deque;Ljava/util/Stack;)Ljava/nio/file/Path;" line="47"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addOneStepResolvedSymlinkHint" desc="(Ljava/nio/file/Path;Ljava/util/Deque;)Ljava/nio/file/Path;" line="76"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hintForLinkLoop" desc="(Ljava/util/List;I)Lch/tutteli/atrium/assertions/Assertion;" line="94"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="216" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="42" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/filesystem/Success" sourcefilename="IoResult.kt"><method name="getValue" desc="()Ljava/lang/Object;" line="20"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/nio/file/Path;Ljava/lang/Object;)V" line="20"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/filesystem/Failure" sourcefilename="IoResult.kt"><method name="getException" desc="()Ljava/io/IOException;" line="21"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/nio/file/Path;Ljava/io/IOException;)V" line="21"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/filesystem/IoResult" sourcefilename="IoResult.kt"><method name="getPath" desc="()Ljava/nio/file/Path;" line="19"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/nio/file/Path;)V" line="19"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/nio/file/Path;Lkotlin/jvm/internal/DefaultConstructorMarker;)V" line="19"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/filesystem/IoResultKt" sourcefilename="IoResult.kt"><method name="runCatchingIo" desc="(Ljava/nio/file/Path;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/domain/robstoll/lib/creating/filesystem/IoResult;" line="13"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="symbolicLinkResolving.kt"><line nr="15" mi="4" ci="0" mb="0" cb="0"/><line nr="16" mi="5" ci="0" mb="0" cb="0"/><line nr="17" mi="5" ci="0" mb="0" cb="0"/><line nr="18" mi="13" ci="0" mb="4" cb="0"/><line nr="19" mi="2" ci="0" mb="0" cb="0"/><line nr="21" mi="11" ci="0" mb="2" cb="0"/><line nr="22" mi="4" ci="0" mb="0" cb="0"/><line nr="24" mi="4" ci="0" mb="0" cb="0"/><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="26" mi="2" ci="0" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="4" ci="0" mb="0" cb="0"/><line nr="39" mi="10" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="11" ci="0" mb="2" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="2" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="56" mi="7" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="7" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="2" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="5" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="6" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="13" ci="0" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="17" ci="0" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="6" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="216" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="42" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IoResult.kt"><line nr="13" mi="2" ci="0" mb="0" cb="0"/><line nr="14" mi="10" ci="0" mb="0" cb="0"/><line nr="15" mi="1" ci="0" mb="0" cb="0"/><line nr="16" mi="7" ci="0" mb="0" cb="0"/><line nr="17" mi="1" ci="0" mb="0" cb="0"/><line nr="19" mi="13" ci="0" mb="0" cb="0"/><line nr="20" mi="11" ci="0" mb="0" cb="0"/><line nr="21" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="73" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="4" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="289" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="50" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="5" covered="0"/></package><package name="ch/tutteli/atrium/core/robstoll"><class name="ch/tutteli/atrium/core/robstoll/CoreFactoryImpl" sourcefilename="CoreFactoryImpl.kt"><method name="newOnlyFailureReporter" desc="(Lch/tutteli/atrium/reporting/AssertionFormatterFacade;)Lch/tutteli/atrium/reporting/Reporter;" line="11"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newPropertiesBasedTranslationSupplier" desc="()Lch/tutteli/atrium/reporting/translating/TranslationSupplier;" line="14"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newReportingPlantNullable" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Lkotlin/jvm/functions/Function0;Lch/tutteli/atrium/checking/AssertionChecker;Ljava/lang/Object;)Lch/tutteli/atrium/creating/ReportingAssertionPlantNullable;" line="9"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newReportingPlantNullable" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Lkotlin/jvm/functions/Function0;Lch/tutteli/atrium/reporting/Reporter;Ljava/lang/Object;)Lch/tutteli/atrium/creating/ReportingAssertionPlantNullable;" line="9"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="33" covered="22"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/CoreFactoryCommonImpl$registerTextAssertionFormatterCapabilities$3" sourcefilename="CoreFactoryCommonImpl.kt"><method name="invoke" desc="(Lch/tutteli/atrium/reporting/AssertionFormatterController;)Lch/tutteli/atrium/core/robstoll/lib/reporting/TextExplanatoryAssertionGroupFormatter;" line="197"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/CoreFactoryCommonImpl$registerTextAssertionFormatterCapabilities$4" sourcefilename="CoreFactoryCommonImpl.kt"><method name="invoke" desc="(Lch/tutteli/atrium/reporting/AssertionFormatterController;)Lch/tutteli/atrium/core/robstoll/lib/reporting/TextIndentAssertionGroupFormatter;" line="201"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/CoreFactoryCommonImpl$registerTextAssertionFormatterCapabilities$1" sourcefilename="CoreFactoryCommonImpl.kt"><method name="invoke" desc="(Lch/tutteli/atrium/reporting/AssertionFormatterController;)Lch/tutteli/atrium/core/robstoll/lib/reporting/TextListAssertionGroupFormatter;" line="191"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/CoreFactoryCommonImpl$registerTextAssertionFormatterCapabilities$2" sourcefilename="CoreFactoryCommonImpl.kt"><method name="invoke" desc="(Lch/tutteli/atrium/reporting/AssertionFormatterController;)Lch/tutteli/atrium/core/robstoll/lib/reporting/TextFeatureAssertionGroupFormatter;" line="194"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/CoreFactoryCommonImpl$registerTextAssertionFormatterCapabilities$5" sourcefilename="CoreFactoryCommonImpl.kt"><method name="invoke" desc="(Lch/tutteli/atrium/reporting/AssertionFormatterController;)Lch/tutteli/atrium/core/robstoll/lib/reporting/TextSummaryAssertionGroupFormatter;" line="204"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/CoreFactoryCommonImpl$registerTextAssertionFormatterCapabilities$6" sourcefilename="CoreFactoryCommonImpl.kt"><method name="invoke" desc="(Lch/tutteli/atrium/reporting/AssertionFormatterController;)Lch/tutteli/atrium/core/robstoll/lib/reporting/TextFallbackAssertionFormatter;" line="207"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/CoreFactoryCommonImpl" sourcefilename="CoreFactoryCommonImpl.kt"><method name="newReportingAssertionContainer" desc="(Lch/tutteli/atrium/creating/ReportingAssertionContainer$AssertionCheckerDecorator;)Lch/tutteli/atrium/creating/ReportingAssertionContainer;" line="29"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newReportingPlant" desc="(Lch/tutteli/atrium/creating/AssertionPlantWithCommonFields$CommonFields;)Lch/tutteli/atrium/creating/ReportingAssertionPlant;" line="38"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newReportingPlantNullable" desc="(Lch/tutteli/atrium/creating/AssertionPlantWithCommonFields$CommonFields;)Lch/tutteli/atrium/creating/ReportingAssertionPlantNullable;" line="47"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newCheckingPlant" desc="(Lkotlin/jvm/functions/Function0;)Lch/tutteli/atrium/creating/CheckingAssertionPlant;" line="58"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newCollectingAssertionContainer" desc="(Lch/tutteli/atrium/core/Option;)Lch/tutteli/atrium/creating/CollectingAssertionContainer;" line="63"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newCollectingPlant" desc="(Lkotlin/jvm/functions/Function0;)Lch/tutteli/atrium/creating/CollectingAssertionPlant;" line="74"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newCollectingPlantNullable" desc="(Lkotlin/jvm/functions/Function0;)Lch/tutteli/atrium/creating/CollectingAssertionPlantNullable;" line="85"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newThrowingAssertionChecker" desc="(Lch/tutteli/atrium/reporting/Reporter;)Lch/tutteli/atrium/checking/AssertionChecker;" line="90"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newFeatureAssertionChecker" desc="(Lch/tutteli/atrium/creating/AssertionHolder;)Lch/tutteli/atrium/checking/AssertionChecker;" line="94"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newDelegatingAssertionChecker" desc="(Lch/tutteli/atrium/creating/AssertionHolder;)Lch/tutteli/atrium/checking/AssertionChecker;" line="98"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newDelegatingAssertionChecker" desc="(Lch/tutteli/atrium/creating/BaseAssertionPlant;)Lch/tutteli/atrium/checking/AssertionChecker;" line="103"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newMethodCallFormatter" desc="()Lch/tutteli/atrium/reporting/MethodCallFormatter;" line="105"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newTranslator" desc="(Lch/tutteli/atrium/reporting/translating/TranslationSupplier;Lch/tutteli/atrium/reporting/translating/LocaleOrderDecider;Lch/tutteli/atrium/reporting/translating/Locale;Ljava/util/List;)Lch/tutteli/atrium/reporting/translating/Translator;" line="112"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newLocaleOrderDecider" desc="()Lch/tutteli/atrium/reporting/translating/LocaleOrderDecider;" line="116"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newDetailedObjectFormatter" desc="(Lch/tutteli/atrium/reporting/translating/Translator;)Lch/tutteli/atrium/reporting/ObjectFormatter;" line="119"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newAssertionFormatterController" desc="()Lch/tutteli/atrium/reporting/AssertionFormatterController;" line="122"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newAssertionFormatterFacade" desc="(Lch/tutteli/atrium/reporting/AssertionFormatterController;)Lch/tutteli/atrium/reporting/AssertionFormatterFacade;" line="126"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newTextSameLineAssertionPairFormatter" desc="(Lch/tutteli/atrium/reporting/ObjectFormatter;Lch/tutteli/atrium/reporting/translating/Translator;)Lch/tutteli/atrium/reporting/AssertionPairFormatter;" line="130"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newTextNextLineAssertionPairFormatter" desc="(Lch/tutteli/atrium/reporting/ObjectFormatter;Lch/tutteli/atrium/reporting/translating/Translator;)Lch/tutteli/atrium/reporting/AssertionPairFormatter;" line="134"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newTextFallbackAssertionFormatter" desc="(Ljava/util/Map;Lch/tutteli/atrium/reporting/AssertionFormatterController;Lch/tutteli/atrium/reporting/ObjectFormatter;Lch/tutteli/atrium/reporting/translating/Translator;)Lch/tutteli/atrium/reporting/AssertionFormatter;" line="140"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newTextFeatureAssertionGroupFormatter" desc="(Ljava/util/Map;Lch/tutteli/atrium/reporting/AssertionFormatterController;Lch/tutteli/atrium/reporting/ObjectFormatter;Lch/tutteli/atrium/reporting/translating/Translator;)Lch/tutteli/atrium/reporting/AssertionFormatter;" line="151"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newTextListAssertionGroupFormatter" desc="(Ljava/util/Map;Lch/tutteli/atrium/reporting/AssertionFormatterController;Lch/tutteli/atrium/reporting/ObjectFormatter;Lch/tutteli/atrium/reporting/translating/Translator;)Lch/tutteli/atrium/reporting/AssertionFormatter;" line="161"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newTextSummaryAssertionGroupFormatter" desc="(Ljava/util/Map;Lch/tutteli/atrium/reporting/AssertionFormatterController;Lch/tutteli/atrium/reporting/ObjectFormatter;Lch/tutteli/atrium/reporting/translating/Translator;)Lch/tutteli/atrium/reporting/AssertionFormatter;" line="172"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newTextExplanatoryAssertionGroupFormatter" desc="(Ljava/util/Map;Lch/tutteli/atrium/reporting/AssertionFormatterController;)Lch/tutteli/atrium/reporting/AssertionFormatter;" line="181"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="registerTextAssertionFormatterCapabilities" desc="(Ljava/util/Map;Lch/tutteli/atrium/reporting/AssertionFormatterFacade;Lch/tutteli/atrium/reporting/AssertionPairFormatter;Lch/tutteli/atrium/reporting/ObjectFormatter;Lch/tutteli/atrium/reporting/translating/Translator;)V" line="190"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newOnlyFailureReporter" desc="(Lch/tutteli/atrium/reporting/AssertionFormatterFacade;Lch/tutteli/atrium/reporting/AtriumErrorAdjuster;)Lch/tutteli/atrium/reporting/Reporter;" line="214"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newNoOpAtriumErrorAdjuster" desc="()Lch/tutteli/atrium/reporting/AtriumErrorAdjuster;" line="216"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newRemoveRunnerAtriumErrorAdjuster" desc="()Lch/tutteli/atrium/reporting/AtriumErrorAdjuster;" line="218"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newRemoveAtriumFromAtriumErrorAdjuster" desc="()Lch/tutteli/atrium/reporting/AtriumErrorAdjuster;" line="221"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMultiAtriumErrorAdjuster" desc="(Lch/tutteli/atrium/reporting/AtriumErrorAdjuster;Lch/tutteli/atrium/reporting/AtriumErrorAdjuster;Ljava/util/List;)Lch/tutteli/atrium/reporting/AtriumErrorAdjuster;" line="227"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newReportingAssertionContainer" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Lch/tutteli/atrium/core/Option;Lch/tutteli/atrium/checking/AssertionChecker;)Lch/tutteli/atrium/creating/ReportingAssertionContainer;" line="25"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newReportingPlant" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Lkotlin/jvm/functions/Function0;Lch/tutteli/atrium/checking/AssertionChecker;)Lch/tutteli/atrium/creating/ReportingAssertionPlant;" line="25"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newReportingPlant" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Lkotlin/jvm/functions/Function0;Lch/tutteli/atrium/reporting/Reporter;)Lch/tutteli/atrium/creating/ReportingAssertionPlant;" line="25"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newDelegatingReportingAssertionContainer" desc="(Lch/tutteli/atrium/creating/AssertionHolder;Lch/tutteli/atrium/core/Option;)Lch/tutteli/atrium/creating/Expect;" line="25"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newReportingPlantAndAddAssertionsCreatedBy" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Lkotlin/jvm/functions/Function0;Lch/tutteli/atrium/reporting/Reporter;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="25"><counter type="INSTRUCTION" missed="7" covered="12"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="205" covered="261"/><counter type="LINE" missed="30" covered="26"/><counter type="COMPLEXITY" missed="13" covered="23"/><counter type="METHOD" missed="13" covered="23"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="CoreFactoryImpl.kt"><line nr="9" mi="7" ci="10" mb="0" cb="0"/><line nr="11" mi="6" ci="0" mb="0" cb="0"/><line nr="14" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="22"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CoreFactoryCommonImpl.kt"><line nr="25" mi="18" ci="15" mb="0" cb="0"/><line nr="29" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="114" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="5" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="6" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="6" mb="0" cb="0"/><line nr="130" mi="0" ci="7" mb="0" cb="0"/><line nr="134" mi="7" ci="0" mb="0" cb="0"/><line nr="140" mi="4" ci="0" mb="0" cb="0"/><line nr="141" mi="1" ci="0" mb="0" cb="0"/><line nr="142" mi="1" ci="0" mb="0" cb="0"/><line nr="143" mi="4" ci="0" mb="0" cb="0"/><line nr="144" mi="1" ci="0" mb="0" cb="0"/><line nr="145" mi="1" ci="0" mb="0" cb="0"/><line nr="151" mi="4" ci="0" mb="0" cb="0"/><line nr="152" mi="1" ci="0" mb="0" cb="0"/><line nr="153" mi="1" ci="0" mb="0" cb="0"/><line nr="154" mi="4" ci="0" mb="0" cb="0"/><line nr="155" mi="1" ci="0" mb="0" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><line nr="162" mi="1" ci="0" mb="0" cb="0"/><line nr="163" mi="1" ci="0" mb="0" cb="0"/><line nr="164" mi="4" ci="0" mb="0" cb="0"/><line nr="165" mi="1" ci="0" mb="0" cb="0"/><line nr="172" mi="4" ci="0" mb="0" cb="0"/><line nr="173" mi="1" ci="0" mb="0" cb="0"/><line nr="174" mi="1" ci="0" mb="0" cb="0"/><line nr="175" mi="4" ci="0" mb="0" cb="0"/><line nr="176" mi="1" ci="0" mb="0" cb="0"/><line nr="181" mi="7" ci="0" mb="0" cb="0"/><line nr="190" mi="0" ci="8" mb="0" cb="0"/><line nr="191" mi="0" ci="9" mb="0" cb="0"/><line nr="193" mi="0" ci="8" mb="0" cb="0"/><line nr="194" mi="0" ci="9" mb="0" cb="0"/><line nr="196" mi="0" ci="7" mb="0" cb="0"/><line nr="197" mi="0" ci="7" mb="0" cb="0"/><line nr="199" mi="0" ci="7" mb="0" cb="0"/><line nr="201" mi="0" ci="7" mb="0" cb="0"/><line nr="203" mi="0" ci="8" mb="0" cb="0"/><line nr="204" mi="0" ci="9" mb="0" cb="0"/><line nr="206" mi="0" ci="9" mb="0" cb="0"/><line nr="207" mi="0" ci="11" mb="0" cb="0"/><line nr="209" mi="0" ci="1" mb="0" cb="0"/><line nr="214" mi="0" ci="7" mb="0" cb="0"/><line nr="216" mi="0" ci="3" mb="0" cb="0"/><line nr="218" mi="5" ci="0" mb="0" cb="0"/><line nr="221" mi="5" ci="0" mb="0" cb="0"/><line nr="227" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="205" covered="331"/><counter type="LINE" missed="30" covered="32"/><counter type="COMPLEXITY" missed="13" covered="29"/><counter type="METHOD" missed="13" covered="29"/><counter type="CLASS" missed="0" covered="7"/></sourcefile><counter type="INSTRUCTION" missed="238" covered="353"/><counter type="LINE" missed="32" covered="33"/><counter type="COMPLEXITY" missed="16" covered="31"/><counter type="METHOD" missed="16" covered="31"/><counter type="CLASS" missed="0" covered="8"/></package><package name="ch/tutteli/atrium/domain/robstoll/lib/creating/charsequence/contains/searchers"><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/charsequence/contains/searchers/IndexSearcher" sourcefilename="IndexSearcher.kt"><method name="search" desc="(Ljava/lang/CharSequence;Ljava/lang/Object;)I" line="11"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/charsequence/contains/searchers/IgnoringCaseRegexSearcher" sourcefilename="IgnoringCaseRegexSearcher.kt"><method name="search" desc="(Ljava/lang/CharSequence;Ljava/lang/String;)I" line="14"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/charsequence/contains/searchers/IgnoringCaseIndexSearcher" sourcefilename="IgnoringCaseIndexSearcher.kt"><method name="search" desc="(Ljava/lang/CharSequence;Ljava/lang/Object;)I" line="14"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/charsequence/contains/searchers/RegexSearcher" sourcefilename="RegexSearcher.kt"><method name="search" desc="(Ljava/lang/CharSequence;Lkotlin/text/Regex;)I" line="13"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="IgnoringCaseIndexSearcher.kt"><line nr="10" mi="0" ci="2" mb="0" cb="0"/><line nr="11" mi="0" ci="6" mb="0" cb="0"/><line nr="14" mi="0" ci="37" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IndexSearcher.kt"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="8" mb="0" cb="0"/><line nr="13" mi="0" ci="2" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="2"/><line nr="15" mi="0" ci="10" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IgnoringCaseRegexSearcher.kt"><line nr="10" mi="0" ci="2" mb="0" cb="0"/><line nr="11" mi="0" ci="6" mb="0" cb="0"/><line nr="14" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RegexSearcher.kt"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="2" mb="0" cb="0"/><line nr="14" mi="0" ci="7" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="2"/><line nr="16" mi="0" ci="9" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="146"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="4"/></package><package name="ch/tutteli/atrium/domain/robstoll/lib/creating/any/typetransformation/creators"><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/any/typetransformation/creators/DeprecatedCreatorsKt" sourcefilename="deprecatedCreators.kt"><method name="_isNotNull" desc="(Lch/tutteli/atrium/creating/AssertionPlantNullable;Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function1;)V" line="22"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_isA" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function1;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_downCast" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Lkotlin/reflect/KClass;Lch/tutteli/atrium/creating/BaseAssertionPlant;Lkotlin/jvm/functions/Function1;Lch/tutteli/atrium/domain/creating/any/typetransformation/AnyTypeTransformation$FailureHandler;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_typeTransformation" desc="(Lch/tutteli/atrium/domain/creating/any/typetransformation/AnyTypeTransformation$ParameterObject;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lch/tutteli/atrium/domain/creating/any/typetransformation/AnyTypeTransformation$FailureHandler;)V" line="56"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="42" covered="46"/><counter type="LINE" missed="5" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/any/typetransformation/creators/TypeTransformationAssertionCreator$create$$inlined$fold$lambda$1" sourcefilename="TypeTransformationAssertionCreator.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="24"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/any/typetransformation/creators/TypeTransformationAssertionCreator" sourcefilename="TypeTransformationAssertionCreator.kt"><method name="create" desc="(Lch/tutteli/atrium/domain/creating/any/typetransformation/AnyTypeTransformation$ParameterObject;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lch/tutteli/atrium/domain/creating/any/typetransformation/AnyTypeTransformation$FailureHandler;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="92"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="95"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/any/typetransformation/creators/DownCastAssertionCreator$downCast$1" sourcefilename="DownCastAssertionCreator.kt"><method name="invoke" desc="(Ljava/lang/Object;)Z" line="62"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/any/typetransformation/creators/DownCastAssertionCreator$downCast$2" sourcefilename="DownCastAssertionCreator.kt"><method name="invoke" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="63"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/any/typetransformation/creators/DownCastAssertionCreator" sourcefilename="DownCastAssertionCreator.kt"><method name="downCast" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Lkotlin/reflect/KClass;Lch/tutteli/atrium/creating/BaseAssertionPlant;Lkotlin/jvm/functions/Function1;Lch/tutteli/atrium/domain/creating/any/typetransformation/AnyTypeTransformation$FailureHandler;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="deprecatedCreators.kt"><line nr="22" mi="11" ci="0" mb="0" cb="0"/><line nr="23" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="0" ci="11" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="42" covered="46"/><counter type="LINE" missed="5" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TypeTransformationAssertionCreator.kt"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="14" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="23" mb="0" cb="6"/><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="21" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="102"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="DownCastAssertionCreator.kt"><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="10" mb="0" cb="0"/><line nr="63" mi="0" ci="10" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><counter type="INSTRUCTION" missed="42" covered="221"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="5" covered="33"/><counter type="COMPLEXITY" missed="2" covered="12"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="0" covered="6"/></package><package name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/iterable/contains/builders/impl"><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/iterable/contains/builders/impl/NotOrAtMostCheckerOptionImpl" sourcefilename="NotOrAtMostCheckerOptionImpl.kt"><method name="&lt;init&gt;" desc="(ILch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/iterable/contains/builders/impl/NotCheckerOptionImpl" sourcefilename="NotCheckerOptionImpl.kt"><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/iterable/contains/builders/impl/AtLeastCheckerOptionImpl" sourcefilename="AtLeastCheckerOptionImpl.kt"><method name="&lt;init&gt;" desc="(ILch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/iterable/contains/builders/impl/ButAtMostCheckerOptionImpl$3" sourcefilename="ButAtMostCheckerOptionImpl.kt"><method name="invoke" desc="(I)Ljava/lang/String;" line="36"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/iterable/contains/builders/impl/ButAtMostCheckerOptionImpl$2" sourcefilename="ButAtMostCheckerOptionImpl.kt"><method name="invoke" desc="(I)Ljava/lang/String;" line="35"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/iterable/contains/builders/impl/ButAtMostCheckerOptionImpl$5" sourcefilename="ButAtMostCheckerOptionImpl.kt"><method name="invoke" desc="(I)Ljava/lang/String;" line="38"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/iterable/contains/builders/impl/ButAtMostCheckerOptionImpl$4" sourcefilename="ButAtMostCheckerOptionImpl.kt"><method name="invoke" desc="(I)Ljava/lang/String;" line="37"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/iterable/contains/builders/impl/ButAtMostCheckerOptionImpl$1" sourcefilename="ButAtMostCheckerOptionImpl.kt"><method name="invoke" desc="(II)Ljava/lang/String;" line="34"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/iterable/contains/builders/impl/AtMostCheckerOptionImpl" sourcefilename="AtMostCheckerOptionImpl.kt"><method name="&lt;init&gt;" desc="(ILch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/iterable/contains/builders/impl/NameContainsNotFunKt" sourcefilename="nameContainsNotFun.kt"><method name="nameContainsNotValuesFun" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/iterable/contains/builders/impl/ButAtMostCheckerOptionImpl" sourcefilename="ButAtMostCheckerOptionImpl.kt"><method name="&lt;init&gt;" desc="(ILch/tutteli/atrium/api/cc/infix/en_GB/creating/iterable/contains/builders/AtLeastCheckerOption;Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/iterable/contains/builders/impl/AtMostCheckerOptionImpl$3" sourcefilename="AtMostCheckerOptionImpl.kt"><method name="invoke" desc="(I)Ljava/lang/String;" line="32"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/iterable/contains/builders/impl/ExactlyCheckerOptionImpl" sourcefilename="ExactlyCheckerOptionImpl.kt"><method name="&lt;init&gt;" desc="(ILch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/iterable/contains/builders/impl/AtMostCheckerOptionImpl$2" sourcefilename="AtMostCheckerOptionImpl.kt"><method name="invoke" desc="(I)Ljava/lang/String;" line="31"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/iterable/contains/builders/impl/AtMostCheckerOptionImpl$1" sourcefilename="AtMostCheckerOptionImpl.kt"><method name="invoke" desc="(I)Ljava/lang/String;" line="30"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/iterable/contains/builders/impl/NotOrAtMostCheckerOptionImpl$1" sourcefilename="NotOrAtMostCheckerOptionImpl.kt"><method name="invoke" desc="(I)Ljava/lang/String;" line="28"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/iterable/contains/builders/impl/ExactlyCheckerOptionImpl$1" sourcefilename="ExactlyCheckerOptionImpl.kt"><method name="invoke" desc="(I)Ljava/lang/String;" line="28"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/creating/iterable/contains/builders/impl/AtLeastCheckerOptionImpl$1" sourcefilename="AtLeastCheckerOptionImpl.kt"><method name="invoke" desc="(I)Ljava/lang/String;" line="28"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AtLeastCheckerOptionImpl.kt"><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="23" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="NotOrAtMostCheckerOptionImpl.kt"><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="23" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ButAtMostCheckerOptionImpl.kt"><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="35" mb="0" cb="0"/><line nr="35" mi="18" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="23" mb="0" cb="0"/><line nr="37" mi="0" ci="23" mb="0" cb="0"/><line nr="38" mi="0" ci="23" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="123"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="1" covered="5"/></sourcefile><sourcefile name="NotCheckerOptionImpl.kt"><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExactlyCheckerOptionImpl.kt"><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="23" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="AtMostCheckerOptionImpl.kt"><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="23" mb="0" cb="0"/><line nr="31" mi="0" ci="23" mb="0" cb="0"/><line nr="32" mi="0" ci="23" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="nameContainsNotFun.kt"><line nr="9" mi="0" ci="2" mb="0" cb="0"/><line nr="10" mi="0" ci="14" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="18" covered="320"/><counter type="LINE" missed="0" covered="41"/><counter type="COMPLEXITY" missed="1" covered="17"/><counter type="METHOD" missed="1" covered="17"/><counter type="CLASS" missed="1" covered="17"/></package><package name="ch/tutteli/atrium/domain/robstoll/assertions/composers"><class name="ch/tutteli/atrium/domain/robstoll/assertions/composers/AssertionComposerImpl" sourcefilename="AssertionComposerImpl.kt"><method name="createDescriptiveWithFailureHint" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;)Lch/tutteli/atrium/assertions/Assertion;" line="19"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="AssertionComposerImpl.kt"><line nr="11" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><package name="ch/tutteli/atrium/domain/robstoll/lib/creating/throwable/thrown/providers"><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/throwable/thrown/providers/AbsentThrowableMessageProvider" sourcefilename="AbsentThrowableMessageProvider.kt"><method name="getMessage" desc="()Lch/tutteli/atrium/reporting/RawString;" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/throwable/thrown/providers/ProvidersKt" sourcefilename="providers.kt"><method name="_translatableBased" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;)Lch/tutteli/atrium/domain/creating/throwable/thrown/ThrowableThrown$AbsentThrowableMessageProvider;" line="9"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="providers.kt"><line nr="9" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbsentThrowableMessageProvider.kt"><line nr="13" mi="0" ci="2" mb="0" cb="0"/><line nr="14" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="2"/></package><package name="ch/tutteli/atrium/domain/robstoll/creating/charsequence/contains/searchbehaviours"><class name="ch/tutteli/atrium/domain/robstoll/creating/charsequence/contains/searchbehaviours/SearchBehaviourFactoryImpl" sourcefilename="SearchBehaviourFactoryImpl.kt"><method name="ignoringCase" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$Builder;)Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$Builder;" line="14"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="SearchBehaviourFactoryImpl.kt"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></package><package name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/checkers"><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/checkers/ExactlyChecker" sourcefilename="ExactlyChecker.kt"><method name="createAssertion" desc="(I)Lch/tutteli/atrium/assertions/Assertion;" line="23"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/String;Lkotlin/jvm/functions/Function1;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/checkers/AtLeastChecker$createAssertion$1" sourcefilename="AtLeastChecker.kt"><method name="invoke" desc="()Z" line="22"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/checkers/NotChecker$createAssertion$1" sourcefilename="NotChecker.kt"><method name="invoke" desc="()Z" line="14"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/checkers/AtMostChecker$createAssertion$1" sourcefilename="AtMostChecker.kt"><method name="invoke" desc="()Z" line="23"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/checkers/AtLeastChecker" sourcefilename="AtLeastChecker.kt"><method name="createAssertion" desc="(I)Lch/tutteli/atrium/assertions/Assertion;" line="22"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/String;Lkotlin/jvm/functions/Function1;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/checkers/NotChecker" sourcefilename="NotChecker.kt"><method name="createAssertion" desc="(I)Lch/tutteli/atrium/assertions/Assertion;" line="14"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/checkers/Checker" sourcefilename="Checker.kt"><method name="&lt;init&gt;" desc="(ILjava/lang/String;Lkotlin/jvm/functions/Function1;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/checkers/ExactlyChecker$createAssertion$1" sourcefilename="ExactlyChecker.kt"><method name="invoke" desc="()Z" line="23"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/checkers/AtMostChecker" sourcefilename="AtMostChecker.kt"><method name="createAssertion" desc="(I)Lch/tutteli/atrium/assertions/Assertion;" line="23"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/String;Lkotlin/jvm/functions/Function1;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AtLeastChecker.kt"><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="5" mb="0" cb="0"/><line nr="22" mi="0" ci="22" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Checker.kt"><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExactlyChecker.kt"><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="23" mi="0" ci="22" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="NotChecker.kt"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="23" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="AtMostChecker.kt"><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="23" mi="0" ci="22" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="140"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="17"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="9"/></package><package name="ch/tutteli/atrium/domain/robstoll/lib/creating/charsequence/contains/searchbehaviours"><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/charsequence/contains/searchbehaviours/NoOpSearchBehaviourImpl" sourcefilename="NoOpSearchBehaviourImpl.kt"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decorateDescription" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;)Lch/tutteli/atrium/reporting/translating/Translatable;" line="11"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/charsequence/contains/searchbehaviours/SearchBehavioursKt" sourcefilename="searchBehaviours.kt"><method name="_containsIgnoringCase" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$Builder;)Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$Builder;" line="10"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/charsequence/contains/searchbehaviours/NotSearchBehaviourImpl" sourcefilename="NotSearchBehaviourImpl.kt"><method name="decorateDescription" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;)Lch/tutteli/atrium/reporting/translating/Translatable;" line="18"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/charsequence/contains/searchbehaviours/IgnoringCaseSearchBehaviourImpl" sourcefilename="IgnoringCaseSearchBehaviourImpl.kt"><method name="decorateDescription" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;)Lch/tutteli/atrium/reporting/translating/Translatable;" line="19"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/searchbehaviours/NoOpSearchBehaviour;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="IgnoringCaseSearchBehaviourImpl.kt"><line nr="14" mi="0" ci="6" mb="0" cb="0"/><line nr="19" mi="0" ci="5" mb="0" cb="0"/><line nr="20" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="searchBehaviours.kt"><line nr="10" mi="0" ci="4" mb="0" cb="0"/><line nr="11" mi="0" ci="2" mb="0" cb="0"/><line nr="12" mi="0" ci="7" mb="0" cb="0"/><line nr="13" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NotSearchBehaviourImpl.kt"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NoOpSearchBehaviourImpl.kt"><line nr="11" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="4"/></package><package name="ch/tutteli/atrium/domain/robstoll/creating"><class name="ch/tutteli/atrium/domain/robstoll/creating/FloatingPointAssertionsImpl" sourcefilename="FloatingPointAssertionsImpl.kt"><method name="toBeWithErrorTolerance" desc="(Lch/tutteli/atrium/creating/SubjectProvider;FF)Lch/tutteli/atrium/assertions/Assertion;" line="15"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBeWithErrorTolerance" desc="(Lch/tutteli/atrium/creating/SubjectProvider;DD)Lch/tutteli/atrium/assertions/Assertion;" line="21"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBeWithErrorTolerance" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/math/BigDecimal;Ljava/math/BigDecimal;)Lch/tutteli/atrium/assertions/Assertion;" line="27"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/creating/ZonedDateTimeAssertionsImpl" sourcefilename="ZonedDateTimeAssertionsImpl.kt"><method name="year" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="11"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="month" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="13"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dayOfWeek" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="15"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/creating/LocalDateTimeAssertionsImpl" sourcefilename="LocalDateTimeAssertionsImpl.kt"><method name="year" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="11"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="month" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="13"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dayOfWeek" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="15"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/creating/FeatureAssertionsImpl" sourcefilename="FeatureAssertionsImpl.kt"><method name="property" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function0;Lch/tutteli/atrium/reporting/translating/Translatable;)Lch/tutteli/atrium/creating/AssertionPlant;" line="15"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="property" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lch/tutteli/atrium/reporting/translating/Translatable;)Lch/tutteli/atrium/creating/AssertionPlant;" line="17"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="property" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function0;Lch/tutteli/atrium/reporting/translating/Translatable;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="20"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="property" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lch/tutteli/atrium/reporting/translating/Translatable;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="22"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="returnValueOf0" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function0;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlant;" line="26"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf0" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlant;" line="28"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="returnValueOf0" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function0;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="31"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf0" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="33"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf1" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlant;" line="37"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf1" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlant;" line="39"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="returnValueOf1" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="42"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf1" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="44"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="returnValueOf2" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlant;" line="48"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf2" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlant;" line="50"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="returnValueOf2" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="53"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf2" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="55"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="returnValueOf3" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function3;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlant;" line="59"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf3" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function3;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlant;" line="61"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="returnValueOf3" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function3;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="64"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf3" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function3;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="66"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="returnValueOf4" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function4;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlant;" line="70"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf4" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function4;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlant;" line="72"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="returnValueOf4" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function4;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="75"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf4" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function4;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="77"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="returnValueOf5" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function5;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlant;" line="81"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf5" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function5;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlant;" line="83"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="returnValueOf5" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function5;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="86"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf5" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function5;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="88"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="246" covered="265"/><counter type="LINE" missed="12" covered="17"/><counter type="COMPLEXITY" missed="12" covered="17"/><counter type="METHOD" missed="12" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/creating/BigDecimalAssertionsImpl" sourcefilename="BigDecimalAssertionsImpl.kt"><method name="isNumericallyEqualTo" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/math/BigDecimal;)Lch/tutteli/atrium/assertions/DescriptiveAssertion;" line="15"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNotNumericallyEqualTo" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/math/BigDecimal;)Lch/tutteli/atrium/assertions/DescriptiveAssertion;" line="18"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEqualIncludingScale" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/math/BigDecimal;Ljava/lang/String;)Lch/tutteli/atrium/assertions/Assertion;" line="24"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNotEqualIncludingScale" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/math/BigDecimal;)Lch/tutteli/atrium/assertions/Assertion;" line="27"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/creating/PairAssertionsImpl" sourcefilename="PairAssertionsImpl.kt"><method name="first" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="15"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="second" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="16"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="first" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="22"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="second" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="27"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullableFirst" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="32"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullableSecond" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="37"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="32" covered="23"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/creating/OptionalAssertionsImpl" sourcefilename="OptionalAssertionsImpl.kt"><method name="isEmpty" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/assertions/Assertion;" line="10"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/creating/AnyAssertionsImpl" sourcefilename="AnyAssertionsImpl.kt"><method name="toBe" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/DescriptiveAssertion;" line="12"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notToBe" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/DescriptiveAssertion;" line="13"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSame" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/DescriptiveAssertion;" line="14"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNotSame" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/DescriptiveAssertion;" line="15"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBeNull" desc="(Lch/tutteli/atrium/creating/SubjectProvider;)Lch/tutteli/atrium/assertions/DescriptiveAssertion;" line="17"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBeNullable" desc="(Lch/tutteli/atrium/creating/Expect;Lkotlin/reflect/KClass;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/Assertion;" line="23"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBeNullIfNullGivenElse" desc="(Lch/tutteli/atrium/creating/Expect;Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="29"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isA" desc="(Lch/tutteli/atrium/creating/Expect;Lkotlin/reflect/KClass;)Lch/tutteli/atrium/domain/creating/changers/ChangedSubjectPostStep;" line="32"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notToBeNull" desc="(Lch/tutteli/atrium/creating/Expect;Lkotlin/reflect/KClass;)Lch/tutteli/atrium/domain/creating/changers/ChangedSubjectPostStep;" line="10"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="43" covered="40"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="4" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/creating/LocalDateAssertionsImpl" sourcefilename="LocalDateAssertionsImpl.kt"><method name="year" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="11"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="month" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="13"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dayOfWeek" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="15"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/creating/ListAssertionsImpl" sourcefilename="ListAssertionsImpl.kt"><method name="get" desc="(Lch/tutteli/atrium/creating/Expect;I)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="13"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="3"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/creating/PathAssertionsImpl" sourcefilename="PathAssertionsImpl.kt"><method name="startsWith" desc="(Lch/tutteli/atrium/creating/Expect;Ljava/nio/file/Path;)Lch/tutteli/atrium/assertions/Assertion;" line="17"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startsNotWith" desc="(Lch/tutteli/atrium/creating/Expect;Ljava/nio/file/Path;)Lch/tutteli/atrium/assertions/Assertion;" line="19"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endsWith" desc="(Lch/tutteli/atrium/creating/Expect;Ljava/nio/file/Path;)Lch/tutteli/atrium/assertions/Assertion;" line="22"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endsNotWith" desc="(Lch/tutteli/atrium/creating/Expect;Ljava/nio/file/Path;)Lch/tutteli/atrium/assertions/DescriptiveAssertion;" line="24"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exists" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/assertions/Assertion;" line="26"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="existsNot" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/assertions/Assertion;" line="28"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fileName" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="30"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extension" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="31"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fileNameWithoutExtension" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="33"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parent" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="35"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isReadable" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/assertions/Assertion;" line="37"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isWritable" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/assertions/Assertion;" line="38"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isRegularFile" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/assertions/Assertion;" line="39"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDirectory" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/assertions/Assertion;" line="40"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="103" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/creating/IterableAssertionsDeprecatedImpl" sourcefilename="IterableAssertionsDeprecatedImpl.kt"><method name="all" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="14"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/creating/MapAssertionsDeprecatedImpl" sourcefilename="MapAssertionsDeprecatedImpl.kt"><method name="contains" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/util/List;)Lch/tutteli/atrium/assertions/Assertion;" line="13"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsKeyWithValueAssertions" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/util/List;)Lch/tutteli/atrium/assertions/Assertion;" line="18"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExisting" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="20"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExisting" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="26"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExistingNullable" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="29"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExistingNullable" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="35"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasSize" desc="(Lch/tutteli/atrium/creating/AssertionPlant;I)Lch/tutteli/atrium/assertions/Assertion;" line="38"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="keys" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="43"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="values" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="48"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="86"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/creating/CollectionAssertionsImpl" sourcefilename="CollectionAssertionsImpl.kt"><method name="isEmpty" desc="(Lch/tutteli/atrium/creating/SubjectProvider;)Lch/tutteli/atrium/assertions/Assertion;" line="12"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNotEmpty" desc="(Lch/tutteli/atrium/creating/SubjectProvider;)Lch/tutteli/atrium/assertions/Assertion;" line="14"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="16"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="15"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/creating/IterableAssertionsImpl" sourcefilename="IterableAssertionsImpl.kt"><method name="containsBuilder" desc="(Lch/tutteli/atrium/creating/SubjectProvider;)Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;" line="19"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsNotBuilder" desc="(Lch/tutteli/atrium/creating/SubjectProvider;)Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;" line="22"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="all" desc="(Lch/tutteli/atrium/creating/Expect;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="27"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasNext" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/assertions/Assertion;" line="29"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasNotNext" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/assertions/Assertion;" line="31"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="min" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="34"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="max" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="37"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="31" covered="15"/><counter type="LINE" missed="5" covered="3"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/creating/ListAssertionsDeprecatedImpl" sourcefilename="ListAssertionsDeprecatedImpl.kt"><method name="get" desc="(Lch/tutteli/atrium/creating/AssertionPlant;I)Lch/tutteli/atrium/creating/AssertionPlant;" line="12"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Lch/tutteli/atrium/creating/AssertionPlant;ILkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="18"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNullable" desc="(Lch/tutteli/atrium/creating/AssertionPlant;ILkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="24"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNullable" desc="(Lch/tutteli/atrium/creating/AssertionPlant;I)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="27"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/creating/MapAssertionsImpl" sourcefilename="MapAssertionsImpl.kt"><method name="contains" desc="(Lch/tutteli/atrium/creating/Expect;Lkotlin/reflect/KClass;Ljava/util/List;)Lch/tutteli/atrium/assertions/Assertion;" line="16"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsKeyWithValueAssertions" desc="(Lch/tutteli/atrium/creating/Expect;Lkotlin/reflect/KClass;Ljava/util/List;)Lch/tutteli/atrium/assertions/Assertion;" line="22"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsKey" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/Assertion;" line="25"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsNotKey" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/Assertion;" line="28"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="(Lch/tutteli/atrium/creating/SubjectProvider;)Lch/tutteli/atrium/assertions/Assertion;" line="30"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNotEmpty" desc="(Lch/tutteli/atrium/creating/SubjectProvider;)Lch/tutteli/atrium/assertions/Assertion;" line="32"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExisting" desc="(Lch/tutteli/atrium/creating/Expect;Ljava/lang/Object;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="37"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="39"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="41" covered="29"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="4" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/creating/AnyAssertionsDeprecatedImpl" sourcefilename="AnyAssertionsDeprecatedImpl.kt"><method name="isNullable" desc="(Lch/tutteli/atrium/creating/AssertionPlantNullable;Lkotlin/reflect/KClass;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/Assertion;" line="21"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNotNull" desc="(Lch/tutteli/atrium/creating/AssertionPlantNullable;Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="27"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNotNullBut" desc="(Lch/tutteli/atrium/creating/AssertionPlantNullable;Lkotlin/reflect/KClass;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/Assertion;" line="33"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNullIfNullGivenElse" desc="(Lch/tutteli/atrium/creating/AssertionPlantNullable;Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="39"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notToBeNull" desc="(Lch/tutteli/atrium/creating/Expect;Lkotlin/reflect/KClass;)Lch/tutteli/atrium/domain/creating/changers/ChangedSubjectPostStep;" line="15"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="53"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/creating/MapEntryAssertionsDeprecatedImpl" sourcefilename="MapEntryAssertionsDeprecatedImpl.kt"><method name="isKeyValue" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/Object;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/Assertion;" line="15"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="key" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="20"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="25"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullableKey" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="30"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullableValue" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="35"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="37"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/creating/CollectionAssertionsDeprecatedImpl" sourcefilename="CollectionAssertionsDeprecatedImpl.kt"><method name="hasSize" desc="(Lch/tutteli/atrium/creating/AssertionPlant;I)Lch/tutteli/atrium/assertions/Assertion;" line="12"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="15"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/creating/ComparableAssertionsImpl" sourcefilename="ComparableAssertionsImpl.kt"><method name="isLessThan" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/DescriptiveAssertion;" line="14"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLessOrEquals" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/DescriptiveAssertion;" line="17"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isGreaterThan" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/DescriptiveAssertion;" line="20"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isGreaterOrEquals" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/DescriptiveAssertion;" line="25"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/creating/MapEntryAssertionsImpl" sourcefilename="MapEntryAssertionsImpl.kt"><method name="isKeyValue" desc="(Lch/tutteli/atrium/creating/Expect;Ljava/lang/Object;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/Assertion;" line="13"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isKeyValue" desc="(Lch/tutteli/atrium/creating/Expect;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/reflect/KClass;Lkotlin/reflect/KClass;)Lch/tutteli/atrium/assertions/Assertion;" line="21"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="key" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="23"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="value" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="24"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="42" covered="3"/><counter type="LINE" missed="4" covered="1"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="4" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/creating/NewFeatureAssertionsImpl" sourcefilename="NewFeatureAssertionsImpl.kt"><method name="genericFeature" desc="(Lch/tutteli/atrium/creating/Expect;Lch/tutteli/atrium/domain/creating/MetaFeature;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="11"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/creating/CharSequenceAssertionsImpl" sourcefilename="CharSequenceAssertionsImpl.kt"><method name="containsBuilder" desc="(Lch/tutteli/atrium/creating/SubjectProvider;)Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$Builder;" line="12"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsNotBuilder" desc="(Lch/tutteli/atrium/creating/SubjectProvider;)Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$Builder;" line="15"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startsWith" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/lang/CharSequence;)Lch/tutteli/atrium/assertions/Assertion;" line="19"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startsNotWith" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/lang/CharSequence;)Lch/tutteli/atrium/assertions/Assertion;" line="22"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endsWith" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/lang/CharSequence;)Lch/tutteli/atrium/assertions/Assertion;" line="25"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endsNotWith" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/lang/CharSequence;)Lch/tutteli/atrium/assertions/Assertion;" line="28"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="(Lch/tutteli/atrium/creating/SubjectProvider;)Lch/tutteli/atrium/assertions/Assertion;" line="30"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNotEmpty" desc="(Lch/tutteli/atrium/creating/SubjectProvider;)Lch/tutteli/atrium/assertions/Assertion;" line="32"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNotBlank" desc="(Lch/tutteli/atrium/creating/SubjectProvider;)Lch/tutteli/atrium/assertions/Assertion;" line="34"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matches" desc="(Lch/tutteli/atrium/creating/Expect;Lkotlin/text/Regex;)Lch/tutteli/atrium/assertions/Assertion;" line="36"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mismatches" desc="(Lch/tutteli/atrium/creating/Expect;Lkotlin/text/Regex;)Lch/tutteli/atrium/assertions/Assertion;" line="38"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="73"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="2" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/creating/ThrowableAssertionsImpl" sourcefilename="ThrowableAssertionsImpl.kt"><method name="thrownBuilder" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Lkotlin/jvm/functions/Function0;Lch/tutteli/atrium/reporting/Reporter;)Lch/tutteli/atrium/domain/creating/throwable/thrown/ThrowableThrown$Builder;" line="15"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="thrownBuilder" desc="(Ljava/lang/String;Lkotlin/jvm/functions/Function0;Lch/tutteli/atrium/reporting/Reporter;)Lch/tutteli/atrium/domain/creating/throwable/thrown/ThrowableThrown$Builder;" line="9"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="FeatureAssertionsImpl.kt"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="5" mb="0" cb="0"/><line nr="17" mi="0" ci="6" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="22" mi="6" ci="0" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="6" ci="0" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="7" ci="0" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="7" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="0" cb="0"/><line nr="50" mi="8" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="55" mi="8" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="8" mb="0" cb="0"/><line nr="61" mi="9" ci="0" mb="0" cb="0"/><line nr="64" mi="0" ci="8" mb="0" cb="0"/><line nr="66" mi="9" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="9" mb="0" cb="0"/><line nr="72" mi="10" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="9" mb="0" cb="0"/><line nr="77" mi="10" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="10" mb="0" cb="0"/><line nr="83" mi="11" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="10" mb="0" cb="0"/><line nr="88" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="246" covered="265"/><counter type="LINE" missed="12" covered="17"/><counter type="COMPLEXITY" missed="12" covered="17"/><counter type="METHOD" missed="12" covered="17"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CharSequenceAssertionsImpl.kt"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="4" ci="0" mb="0" cb="0"/><line nr="38" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="73"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="2" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IterableAssertionsImpl.kt"><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="4" ci="0" mb="0" cb="0"/><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="31" covered="15"/><counter type="LINE" missed="5" covered="3"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ThrowableAssertionsImpl.kt"><line nr="9" mi="6" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OptionalAssertionsImpl.kt"><line nr="8" mi="3" ci="0" mb="0" cb="0"/><line nr="10" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AnyAssertionsDeprecatedImpl.kt"><line nr="15" mi="5" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="53"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NewFeatureAssertionsImpl.kt"><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PathAssertionsImpl.kt"><line nr="15" mi="3" ci="0" mb="0" cb="0"/><line nr="17" mi="4" ci="0" mb="0" cb="0"/><line nr="19" mi="4" ci="0" mb="0" cb="0"/><line nr="22" mi="4" ci="0" mb="0" cb="0"/><line nr="24" mi="4" ci="0" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="103" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="LocalDateTimeAssertionsImpl.kt"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="3" ci="0" mb="0" cb="0"/><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="15" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="FloatingPointAssertionsImpl.kt"><line nr="9" mi="3" ci="0" mb="0" cb="0"/><line nr="15" mi="5" ci="0" mb="0" cb="0"/><line nr="21" mi="5" ci="0" mb="0" cb="0"/><line nr="27" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PairAssertionsImpl.kt"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="4" ci="0" mb="0" cb="0"/><line nr="37" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="23"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ListAssertionsDeprecatedImpl.kt"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="5" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MapEntryAssertionsDeprecatedImpl.kt"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="5" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="4" ci="0" mb="0" cb="0"/><line nr="35" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="37"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MapEntryAssertionsImpl.kt"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="5" ci="0" mb="0" cb="0"/><line nr="21" mi="7" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="42" covered="3"/><counter type="LINE" missed="4" covered="1"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="4" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AnyAssertionsImpl.kt"><line nr="10" mi="5" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="4" mb="0" cb="0"/><line nr="13" mi="0" ci="4" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="4" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="5" ci="0" mb="0" cb="0"/><line nr="29" mi="5" ci="0" mb="0" cb="0"/><line nr="32" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="43" covered="40"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="4" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MapAssertionsDeprecatedImpl.kt"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="86"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IterableAssertionsDeprecatedImpl.kt"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BigDecimalAssertionsImpl.kt"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ComparableAssertionsImpl.kt"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LocalDateAssertionsImpl.kt"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="3" ci="0" mb="0" cb="0"/><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="15" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MapAssertionsImpl.kt"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="5" ci="0" mb="0" cb="0"/><line nr="22" mi="5" ci="0" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="4" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="41" covered="29"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="4" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ZonedDateTimeAssertionsImpl.kt"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="3" ci="0" mb="0" cb="0"/><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="15" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CollectionAssertionsImpl.kt"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="15"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CollectionAssertionsDeprecatedImpl.kt"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ListAssertionsImpl.kt"><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="3"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="722" covered="819"/><counter type="LINE" missed="71" covered="92"/><counter type="COMPLEXITY" missed="74" covered="92"/><counter type="METHOD" missed="74" covered="92"/><counter type="CLASS" missed="6" covered="19"/></package><package name="ch/tutteli/atrium/core/robstoll/lib/creating"><class name="ch/tutteli/atrium/core/robstoll/lib/creating/CheckingAssertionPlantImpl" sourcefilename="CheckingAssertionPlantImpl.kt"><method name="getSelf" desc="()Lch/tutteli/atrium/core/robstoll/lib/creating/CheckingAssertionPlantImpl;" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAssertionsCreatedBy" desc="(Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/CheckingAssertionPlant;" line="14"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allAssertionsHold" desc="()Z" line="19"><counter type="INSTRUCTION" missed="12" covered="35"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function0;)V" line="6"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createAndAddAssertion" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;)Lch/tutteli/atrium/creating/AssertionPlant;" line="6"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="59"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/creating/ReportingAssertionPlantNullableImpl" sourcefilename="ReportingAssertionPlantNullableImpl.kt"><method name="getSelf" desc="()Lch/tutteli/atrium/core/robstoll/lib/creating/ReportingAssertionPlantNullableImpl;" line="22"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/creating/AssertionPlantWithCommonFields$CommonFields;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/creating/MutableListBasedAssertionContainer$subject$2" sourcefilename="MutableListBasedAssertionContainer.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="23"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/creating/ReportingAssertionPlantImpl$addAssertionsCreatedBy$assertions$1" sourcefilename="ReportingAssertionPlantImpl.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="32"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/creating/ReportingAssertionPlantImpl" sourcefilename="ReportingAssertionPlantImpl.kt"><method name="getSelf" desc="()Lch/tutteli/atrium/core/robstoll/lib/creating/ReportingAssertionPlantImpl;" line="28"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAssertionsCreatedBy" desc="(Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="32"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/creating/AssertionPlantWithCommonFields$CommonFields;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createAndAddAssertion" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;)Lch/tutteli/atrium/creating/AssertionPlant;" line="23"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="38"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/creating/CollectingAssertionPlantImpl" sourcefilename="CollectingAssertionPlantImpl.kt"><method name="getSelf" desc="()Lch/tutteli/atrium/core/robstoll/lib/creating/CollectingAssertionPlantImpl;" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAssertionsCreatedBy" desc="(Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/CollectingAssertionPlant;" line="14"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function0;)V" line="6"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createAndAddAssertion" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;)Lch/tutteli/atrium/creating/AssertionPlant;" line="6"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="24"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/creating/MutableListBasedAssertionPlant" sourcefilename="MutableListBasedAssertionPlant.kt"><method name="addAssertion" desc="(Lch/tutteli/atrium/assertions/Assertion;)Lch/tutteli/atrium/creating/BaseAssertionPlant;" line="33"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAssertions" desc="()Ljava/util/List;" line="37"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clearAssertions" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubjectProvider" desc="()Lkotlin/jvm/functions/Function0;" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function0;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaybeSubject" desc="()Lch/tutteli/atrium/core/Option;" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/creating/MutableListBasedReportingAssertionPlant" sourcefilename="MutableListBasedReportingAssertionPlant.kt"><method name="addAssertion" desc="(Lch/tutteli/atrium/assertions/Assertion;)Lch/tutteli/atrium/creating/BaseAssertionPlant;" line="17"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkAssertions" desc="()Lch/tutteli/atrium/creating/BaseAssertionPlant;" line="23"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCommonFields" desc="()Lch/tutteli/atrium/creating/AssertionPlantWithCommonFields$CommonFields;" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/creating/AssertionPlantWithCommonFields$CommonFields;)V" line="11"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/creating/MutableListBasedAssertionPlant$subject$2" sourcefilename="MutableListBasedAssertionPlant.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="18"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/creating/ReportingAssertionContainerImpl" sourcefilename="ReportingAssertionContainerImpl.kt"><method name="getAssertionChecker" desc="()Lch/tutteli/atrium/checking/AssertionChecker;" line="16"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAssertionsCreatedBy" desc="(Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/Expect;" line="19"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAssertion" desc="(Lch/tutteli/atrium/assertions/Assertion;)Lch/tutteli/atrium/creating/Expect;" line="28"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkAndClearAssertions" desc="()Lch/tutteli/atrium/creating/Expect;" line="34"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/creating/ReportingAssertionContainer$AssertionCheckerDecorator;)V" line="11"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="55"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/creating/CollectingAssertionPlantNullableImpl" sourcefilename="CollectingAssertionPlantNullableImpl.kt"><method name="getSelf" desc="()Lch/tutteli/atrium/core/robstoll/lib/creating/CollectingAssertionPlantNullableImpl;" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function0;)V" line="6"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/creating/CollectingAssertionContainerImpl" sourcefilename="CollectingAssertionContainerImpl.kt"><method name="getAssertions" desc="()Ljava/util/List;" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAssertion" desc="(Lch/tutteli/atrium/assertions/Assertion;)Lch/tutteli/atrium/creating/CollectingAssertionContainer;" line="18"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAssertionsCreatedBy" desc="(Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/CollectingAssertionContainer;" line="24"><counter type="INSTRUCTION" missed="18" covered="58"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="10"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/core/Option;)V" line="11"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="78"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="15"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/creating/MutableListBasedAssertionContainer" sourcefilename="MutableListBasedAssertionContainer.kt"><method name="addAssertion" desc="(Lch/tutteli/atrium/assertions/Assertion;)Lch/tutteli/atrium/creating/Expect;" line="36"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCopyOfAssertions" desc="()Ljava/util/List;" line="43"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clearAssertions" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaybeSubject" desc="()Lch/tutteli/atrium/core/Option;" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/core/Option;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createAndAddAssertion" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/Expect;" line="14"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createAndAddAssertion" desc="(Ljava/lang/String;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/Expect;" line="14"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="52"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/creating/CollectingAssertionContainerImpl$addAssertionsCreatedBy$1" sourcefilename="CollectingAssertionContainerImpl.kt"><method name="invoke" desc="()Lch/tutteli/atrium/assertions/AssertionGroup;" line="37"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="CollectingAssertionPlantImpl.kt"><line nr="6" mi="6" ci="1" mb="0" cb="0"/><line nr="8" mi="0" ci="2" mb="0" cb="0"/><line nr="11" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="24"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MutableListBasedReportingAssertionPlant.kt"><line nr="11" mi="0" ci="1" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="7" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ReportingAssertionPlantNullableImpl.kt"><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MutableListBasedAssertionContainer.kt"><line nr="14" mi="12" ci="5" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="8" mb="0" cb="0"/><line nr="23" mi="6" ci="0" mb="0" cb="0"/><line nr="25" mi="5" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="33" mi="0" ci="13" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="36" covered="52"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="ReportingAssertionPlantImpl.kt"><line nr="23" mi="6" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="8" mb="0" cb="0"/><line nr="32" mi="0" ci="12" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="42"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="CheckingAssertionPlantImpl.kt"><line nr="6" mi="6" ci="1" mb="0" cb="0"/><line nr="8" mi="0" ci="2" mb="0" cb="0"/><line nr="11" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="12" ci="17" mb="2" cb="2"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="10" mb="0" cb="2"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="59"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CollectingAssertionContainerImpl.kt"><line nr="11" mi="0" ci="1" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="7" mb="0" cb="0"/><line nr="25" mi="0" ci="6" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="1" ci="11" mb="2" cb="2"/><line nr="32" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="6" ci="0" mb="0" cb="0"/><line nr="36" mi="4" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="6" ci="0" mb="0" cb="0"/><line nr="41" mi="6" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="6" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="11" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="38" covered="78"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="9" covered="15"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="MutableListBasedAssertionPlant.kt"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="13" mb="0" cb="0"/><line nr="29" mi="0" ci="13" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ReportingAssertionContainerImpl.kt"><line nr="11" mi="0" ci="1" mb="0" cb="0"/><line nr="13" mi="0" ci="7" mb="0" cb="0"/><line nr="16" mi="4" ci="0" mb="0" cb="0"/><line nr="19" mi="0" ci="5" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="9" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="55"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CollectingAssertionPlantNullableImpl.kt"><line nr="6" mi="0" ci="1" mb="0" cb="0"/><line nr="8" mi="0" ci="2" mb="0" cb="0"/><line nr="11" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="135" covered="436"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="13" covered="82"/><counter type="COMPLEXITY" missed="12" covered="40"/><counter type="METHOD" missed="8" covered="39"/><counter type="CLASS" missed="2" covered="12"/></package><package name="ch/tutteli/atrium/domain/robstoll/lib/creating/collectors"><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/collectors/CollectAssertionsKt$expandAssertionGroups$1" sourcefilename="collectAssertions.kt"><method name="invoke" desc="(Lch/tutteli/atrium/assertions/AssertionGroup;)Lkotlin/sequences/Sequence;" line="83"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/collectors/CollectAssertionsKt$collectAssertions$1" sourcefilename="collectAssertions.kt"><method name="invoke" desc="()Z" line="67"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/collectors/CollectAssertionsKt" sourcefilename="collectAssertions.kt"><method name="_collect" desc="(Lch/tutteli/atrium/core/Option;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="19"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_collectForComposition" desc="(Lch/tutteli/atrium/core/Option;Lkotlin/jvm/functions/Function1;)Ljava/util/List;" line="35"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="collectAssertions" desc="(Lch/tutteli/atrium/core/Option;Lkotlin/jvm/functions/Function1;)Ljava/util/List;" line="61"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="expandAssertionGroups" desc="(Ljava/util/List;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="51" covered="53"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="14" covered="12"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/collectors/CollectOrExplainDeprecatedKt" sourcefilename="collectOrExplainDeprecated.kt"><method name="_collectOrExplain" desc="(ZLch/tutteli/atrium/reporting/translating/Translatable;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="18"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/collectors/AssertionCollectorForExplanationImpl" sourcefilename="AssertionCollectorForExplanationImpl.kt"><method name="collect" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Lch/tutteli/atrium/creating/MaybeSubject;Lkotlin/jvm/functions/Function1;)Ljava/util/List;" line="27"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collect" desc="(Lch/tutteli/atrium/creating/MaybeSubject;Lkotlin/jvm/functions/Function1;)Ljava/util/List;" line="52"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ZLkotlin/jvm/functions/Function1;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="102"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/collectors/AssertionCollectorForExplanationImpl$collect$2" sourcefilename="AssertionCollectorForExplanationImpl.kt"><method name="invoke" desc="()Z" line="58"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/collectors/CollectAssertionsDeprecatedKt" sourcefilename="collectAssertionsDeprecated.kt"><method name="_collectAssertions" desc="(Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="16"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/collectors/CollectAssertionsKt$expandAssertionGroups$$inlined$filterIsInstance$1" sourcefilename="_Sequences.kt"><method name="invoke" desc="(Ljava/lang/Object;)Z" line="416"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="collectAssertions.kt"><line nr="19" mi="0" ci="7" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="2"/><line nr="23" mi="0" ci="9" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="4" ci="0" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="2" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="15" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="2"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="8" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="55" covered="61"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="15" covered="12"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="1" covered="2"/></sourcefile><sourcefile name="_Sequences.kt"><line nr="416" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="collectAssertionsDeprecated.kt"><line nr="16" mi="0" ci="5" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="28" mb="0" cb="4"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="collectOrExplainDeprecated.kt"><line nr="18" mi="0" ci="2" mb="0" cb="2"/><line nr="19" mi="0" ci="6" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="6" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AssertionCollectorForExplanationImpl.kt"><line nr="17" mi="0" ci="9" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="26" mb="0" cb="6"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="2"/><line nr="53" mi="0" ci="9" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="15" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="102"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="59" covered="271"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="16" covered="47"/><counter type="COMPLEXITY" missed="5" covered="18"/><counter type="METHOD" missed="4" covered="9"/><counter type="CLASS" missed="2" covered="6"/></package><package name="ch/tutteli/atrium/domain/robstoll/creating/feature/extract/creators"><class name="ch/tutteli/atrium/domain/robstoll/creating/feature/extract/creators/FeatureExtractorCreatorFactoryImpl" sourcefilename="FeatureExtractorCreatorFactoryImpl.kt"><method name="create" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Lch/tutteli/atrium/domain/creating/feature/extract/FeatureExtractor$ParameterObject;)Lch/tutteli/atrium/domain/creating/feature/extract/FeatureExtractor$Creator;" line="17"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createNullable" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Lch/tutteli/atrium/domain/creating/feature/extract/FeatureExtractor$ParameterObject;)Lch/tutteli/atrium/domain/creating/feature/extract/FeatureExtractor$CreatorNullable;" line="23"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="FeatureExtractorCreatorFactoryImpl.kt"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="7" mb="0" cb="0"/><line nr="23" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></package><package name="ch/tutteli/atrium/api/cc/infix/en_GB/keywords"><class name="ch/tutteli/atrium/api/cc/infix/en_GB/keywords/group" sourcefilename="keywords.kt"><method name="&lt;clinit&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/keywords/order" sourcefilename="keywords.kt"><method name="&lt;clinit&gt;" desc="()V" line="60"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/keywords/Empty" sourcefilename="keywords.kt"><method name="&lt;clinit&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/keywords/Blank" sourcefilename="keywords.kt"><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/keywords/only" sourcefilename="keywords.kt"><method name="&lt;clinit&gt;" desc="()V" line="55"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/keywords/KeywordsKt" sourcefilename="keywords.kt"/><class name="ch/tutteli/atrium/api/cc/infix/en_GB/keywords/case" sourcefilename="keywords.kt"><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/keywords/Keyword" sourcefilename="keywords.kt"/><class name="ch/tutteli/atrium/api/cc/infix/en_GB/keywords/entries" sourcefilename="keywords.kt"><method name="&lt;clinit&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/keywords/contain" sourcefilename="keywords.kt"><method name="&lt;clinit&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="keywords.kt"><line nr="24" mi="0" ci="7" mb="0" cb="0"/><line nr="30" mi="0" ci="7" mb="0" cb="0"/><line nr="35" mi="0" ci="7" mb="0" cb="0"/><line nr="40" mi="0" ci="7" mb="0" cb="0"/><line nr="45" mi="0" ci="7" mb="0" cb="0"/><line nr="50" mi="0" ci="7" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="8"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="8"/></package><package name="ch/tutteli/atrium/domain/robstoll/lib/creating/charsequence/contains/builders"><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/charsequence/contains/builders/CharSequenceContainsBuilder" sourcefilename="CharSequenceContainsBuilder.kt"><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$SearchBehaviour;)V" line="7"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="CharSequenceContainsBuilder.kt"><line nr="7" mi="0" ci="1" mb="0" cb="0"/><line nr="9" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></package><package name="ch/tutteli/atrium/domain/robstoll/lib/creating"><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapEntryAssertionsDeprecatedKt$_keyValue$1$2" sourcefilename="mapEntryAssertionsDeprecated.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/AssertionPlant;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapEntryAssertionsDeprecatedKt$_keyValue$1$1" sourcefilename="mapEntryAssertionsDeprecated.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/AssertionPlant;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/FeatureAssertionsKt" sourcefilename="featureAssertions.kt"><method name="_genericFeature" desc="(Lch/tutteli/atrium/creating/Expect;Lch/tutteli/atrium/domain/creating/MetaFeature;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="10"><counter type="INSTRUCTION" missed="3" covered="33"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="33"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/FeatureAssertionsDeprecatedKt$_returnValueOf2$4" sourcefilename="featureAssertionsDeprecated.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="74"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/FeatureAssertionsDeprecatedKt$_returnValueOf2$3" sourcefilename="featureAssertionsDeprecated.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="71"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/FeatureAssertionsDeprecatedKt$_returnValueOf2$2" sourcefilename="featureAssertionsDeprecated.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="67"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/FeatureAssertionsDeprecatedKt$_returnValueOf2$1" sourcefilename="featureAssertionsDeprecated.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="64"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapEntryAssertionsDeprecatedKt$_keyValue$1" sourcefilename="mapEntryAssertionsDeprecated.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/ZonedDateTimeAssertionsKt$_year$1" sourcefilename="zonedDateTimeAssertions.kt"><method name="invoke" desc="(Ljava/time/ZonedDateTime;)I" line="11"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/CharSequenceAssertionsKt$_mismatches$1" sourcefilename="charSequenceAssertions.kt"><method name="invoke" desc="(Ljava/lang/CharSequence;)Z" line="51"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/PairAssertionsDeprecatedKt$_first$1" sourcefilename="pairAssertionsDeprecated.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/PathAssertionsKt$_existsNot$1$2" sourcefilename="pathAssertions.kt"><method name="invoke" desc="(Lch/tutteli/atrium/domain/robstoll/lib/creating/filesystem/IoResult;)Lch/tutteli/atrium/assertions/Assertion;" line="73"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/PathAssertionsKt$_isDirectory$$inlined$fileTypeAssertion$1" sourcefilename="pathAssertions.kt"><method name="invoke" desc="(Lch/tutteli/atrium/domain/robstoll/lib/creating/filesystem/IoResult;)Z" line="130"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/CharSequenceAssertionsKt$_endsNotWith$1" sourcefilename="charSequenceAssertions.kt"><method name="invoke" desc="(Ljava/lang/CharSequence;)Z" line="36"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/PathAssertionsKt$_existsNot$1$1" sourcefilename="pathAssertions.kt"><method name="invoke" desc="(Lch/tutteli/atrium/domain/robstoll/lib/creating/filesystem/IoResult;)Z" line="71"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/FeatureAssertionsDeprecatedKt$_returnValueOf1$4" sourcefilename="featureAssertionsDeprecated.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="60"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/FeatureAssertionsDeprecatedKt$_returnValueOf1$3" sourcefilename="featureAssertionsDeprecated.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="57"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/FeatureAssertionsDeprecatedKt$_returnValueOf1$2" sourcefilename="featureAssertionsDeprecated.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="53"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/FeatureAssertionsDeprecatedKt$_returnValueOf1$1" sourcefilename="featureAssertionsDeprecated.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="50"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/PathAssertionsKt$_endsNotWith$1" sourcefilename="pathAssertions.kt"><method name="invoke" desc="(Ljava/nio/file/Path;)Z" line="46"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/PathAssertionsKt$_fileNameWithoutExtension$1" sourcefilename="pathAssertions.kt"><method name="invoke" desc="(Ljava/nio/file/Path;)Ljava/lang/String;" line="384"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/IterableAssertionsKt$collect$1" sourcefilename="iterableAssertions.kt"><method name="invoke" desc="(Ljava/lang/Iterable;)Lch/tutteli/atrium/core/Option;" line="113"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/PairAssertionsDeprecatedKt" sourcefilename="pairAssertionsDeprecated.kt"><method name="_first" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="12"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_second" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="15"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_nullableFirst" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="20"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_nullableSecond" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="25"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="38"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/FeatureAssertionsKt$_genericFeature$1" sourcefilename="featureAssertions.kt"><method name="invoke" desc="(Ljava/lang/Object;)Lch/tutteli/atrium/core/Option;" line="14"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapEntryAssertionsDeprecatedKt$_nullableValue$1" sourcefilename="mapEntryAssertionsDeprecated.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;)V" line="37"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/LocalDateTimeAssertionsKt$_month$1" sourcefilename="localDateTimeAssertions.kt"><method name="invoke" desc="(Ljava/time/LocalDateTime;)I" line="14"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/PathAssertionsKt$_exists$1$2" sourcefilename="pathAssertions.kt"><method name="invoke" desc="(Lch/tutteli/atrium/domain/robstoll/lib/creating/filesystem/IoResult;)Lch/tutteli/atrium/assertions/Assertion;" line="53"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/PathAssertionsKt$_exists$1$1" sourcefilename="pathAssertions.kt"><method name="invoke" desc="(Lch/tutteli/atrium/domain/robstoll/lib/creating/filesystem/IoResult;)Z" line="51"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapAssertionsKt__MapAssertionsKt$_size$1" sourcefilename="mapAssertions.kt"><method name="invoke" desc="(Ljava/util/Map;)I" line="98"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/PathAssertionsKt$_fileName$1" sourcefilename="pathAssertions.kt"><method name="invoke" desc="(Ljava/nio/file/Path;)Ljava/lang/String;" line="381"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/CollectionAssertionsDeprecatedKt$_size$1" sourcefilename="collectionAssertionsDeprecated.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/IterableAssertionsKt$_iterableAll$1" sourcefilename="iterableAssertions.kt"><method name="invoke" desc="()Lch/tutteli/atrium/assertions/AssertionGroup;" line="41"><counter type="INSTRUCTION" missed="87" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="87" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/LocalDateTimeAssertionsKt" sourcefilename="localDateTimeAssertions.kt"><method name="_year" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="11"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_month" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="14"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_dayOfWeek" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="17"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapAssertionsKt__MapAssertionsDeprecatedKt$_containsKeyWithValueAssertion$2" sourcefilename="mapAssertionsDeprecated.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/AssertionPlantNullable;Lkotlin/jvm/functions/Function1;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="85"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="85"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapEntryAssertionsDeprecatedKt$_value$1" sourcefilename="mapEntryAssertionsDeprecated.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapAssertionsKt"><method name="_contains" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/util/List;)Lch/tutteli/atrium/assertions/Assertion;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_contains" desc="(Lch/tutteli/atrium/creating/Expect;Lkotlin/reflect/KClass;Ljava/util/List;)Lch/tutteli/atrium/assertions/Assertion;" line="1"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_containsKey" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/Assertion;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_containsKeyWithValueAssertion" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/util/List;)Lch/tutteli/atrium/assertions/Assertion;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_containsKeyWithValueAssertion" desc="(Lch/tutteli/atrium/creating/Expect;Lkotlin/reflect/KClass;Ljava/util/List;)Lch/tutteli/atrium/assertions/Assertion;" line="1"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_containsNotKey" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/Assertion;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_getExisting" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_getExisting" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="1"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_getExisting" desc="(Lch/tutteli/atrium/creating/Expect;Ljava/lang/Object;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="1"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_getExistingNullable" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_getExistingNullable" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="1"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_hasSize" desc="(Lch/tutteli/atrium/creating/AssertionPlant;I)Lch/tutteli/atrium/assertions/Assertion;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_isEmpty" desc="(Lch/tutteli/atrium/creating/SubjectProvider;)Lch/tutteli/atrium/assertions/Assertion;" line="1"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_isNotEmpty" desc="(Lch/tutteli/atrium/creating/SubjectProvider;)Lch/tutteli/atrium/assertions/Assertion;" line="1"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_keys" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_size" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="1"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_values" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="52"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="4" covered="13"/><counter type="METHOD" missed="4" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapAssertionsKt__MapAssertionsDeprecatedKt$_keys$1" sourcefilename="mapAssertionsDeprecated.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;)V" line="151"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/IterableAssertionsDeprecatedKt" sourcefilename="iterableAssertionsDeprecated.kt"><method name="_iterableAll" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="25"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createMismatchAssertions" desc="(Ljava/util/List;Lkotlin/jvm/functions/Function1;)Ljava/util/List;" line="63"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createExplanatoryAssertionGroup" desc="(Lkotlin/jvm/functions/Function1;Ljava/util/List;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="79"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/ListAssertionsKt__ListAssertionsKt$_get$1" sourcefilename="listAssertions.kt"><method name="invoke" desc="(Ljava/util/List;)Lch/tutteli/atrium/core/Option;" line="19"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/LocalDateAssertionsKt$_month$1" sourcefilename="localDateAssertions.kt"><method name="invoke" desc="(Ljava/time/LocalDate;)I" line="14"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/CharSequenceAssertionsKt$_startsNotWith$1" sourcefilename="charSequenceAssertions.kt"><method name="invoke" desc="(Ljava/lang/CharSequence;)Z" line="30"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/CharSequenceAssertionsKt$_endsWith$1" sourcefilename="charSequenceAssertions.kt"><method name="invoke" desc="(Ljava/lang/CharSequence;)Z" line="33"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/LocalDateAssertionsKt$_year$1" sourcefilename="localDateAssertions.kt"><method name="invoke" desc="(Ljava/time/LocalDate;)I" line="11"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapAssertionsKt__MapAssertionsKt$_containsKey$1" sourcefilename="mapAssertions.kt"><method name="invoke" desc="(Ljava/util/Map;)Z" line="62"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/BigDecimalAssertionsKt$_isNotNumericallyEqualTo$1" sourcefilename="bigDecimalAssertions.kt"><method name="invoke" desc="(Ljava/math/BigDecimal;)Z" line="24"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapEntryAssertionsKt$_isKeyValue$2$2" sourcefilename="mapEntryAssertions.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/Expect;)V" line="28"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapEntryAssertionsKt$_isKeyValue$2$1" sourcefilename="mapEntryAssertions.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/Expect;)V" line="25"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/CharSequenceAssertionsKt$_isNotBlank$1" sourcefilename="charSequenceAssertions.kt"><method name="invoke" desc="(Ljava/lang/CharSequence;)Z" line="45"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/PathAssertionsKt$_endsWith$1" sourcefilename="pathAssertions.kt"><method name="invoke" desc="(Ljava/nio/file/Path;)Z" line="43"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/PathAssertionsKt$_parent$1" sourcefilename="pathAssertions.kt"><method name="invoke" desc="(Ljava/nio/file/Path;)Lch/tutteli/atrium/core/Option;" line="391"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/ZonedDateTimeAssertionsKt$_month$1" sourcefilename="zonedDateTimeAssertions.kt"><method name="invoke" desc="(Ljava/time/ZonedDateTime;)I" line="14"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/CollectionAssertionsKt$_isNotEmpty$1" sourcefilename="collectionAssertions.kt"><method name="invoke" desc="(Ljava/util/Collection;)Z" line="18"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/AnyAssertionsKt__AnyAssertionsKt$_isNotSame$1" sourcefilename="anyAssertions.kt"><method name="invoke" desc="(Ljava/lang/Object;)Z" line="31"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapAssertionsKt__MapAssertionsDeprecatedKt$contains$1$$special$$inlined$map$lambda$1" sourcefilename="mapAssertionsDeprecated.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/BaseCollectingAssertionPlant;)V" line="81"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/IterableAssertionsDeprecatedKt$_iterableAll$1" sourcefilename="iterableAssertionsDeprecated.kt"><method name="invoke" desc="()Lch/tutteli/atrium/assertions/AssertionGroup;" line="26"><counter type="INSTRUCTION" missed="2" covered="85"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="85"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/PathAssertionsKt$filePermissionAssertion$1" sourcefilename="pathAssertions.kt"><method name="invoke" desc="(Ljava/nio/file/Path;)Lch/tutteli/atrium/domain/robstoll/lib/creating/filesystem/IoResult;" line="101"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/FeatureAssertionsDeprecatedKt$_returnValueOf5$4" sourcefilename="featureAssertionsDeprecated.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="116"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/FeatureAssertionsDeprecatedKt$_returnValueOf5$3" sourcefilename="featureAssertionsDeprecated.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="113"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/FeatureAssertionsDeprecatedKt$_returnValueOf5$2" sourcefilename="featureAssertionsDeprecated.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="109"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/AnyAssertionsKt__AnyAssertionsKt$_toBeNullable$1" sourcefilename="anyAssertions.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/Expect;)V" line="43"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/FeatureAssertionsDeprecatedKt$_returnValueOf5$1" sourcefilename="featureAssertionsDeprecated.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="106"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/floatingPointAssertionsKt"><method name="_toBeWithErrorTolerance" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/math/BigDecimal;Ljava/math/BigDecimal;)Lch/tutteli/atrium/assertions/Assertion;" line="1"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_toBeWithErrorTolerance" desc="(Lch/tutteli/atrium/creating/SubjectProvider;DD)Lch/tutteli/atrium/assertions/Assertion;" line="1"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_toBeWithErrorTolerance" desc="(Lch/tutteli/atrium/creating/SubjectProvider;FF)Lch/tutteli/atrium/assertions/Assertion;" line="1"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createToBeWithErrorToleranceExplained" desc="(Ljava/lang/Number;Ljava/lang/Number;Lkotlin/jvm/functions/Function1;Ljava/lang/Number;)Lch/tutteli/atrium/assertions/ExplanatoryAssertion;" line="1"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBeWithErrorTolerance" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/lang/Comparable;Ljava/lang/Comparable;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="1"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/PairAssertionsDeprecatedKt$_nullableFirst$1" sourcefilename="pairAssertionsDeprecated.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;)V" line="20"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/PathAssertionsKt$fileTypeAssertion$1$2" sourcefilename="pathAssertions.kt"><method name="invoke" desc="(Lch/tutteli/atrium/domain/robstoll/lib/creating/filesystem/IoResult;)Lch/tutteli/atrium/assertions/Assertion;" line="132"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/ComparableAssertionsKt$_isGreaterThan$1" sourcefilename="comparableAssertions.kt"><method name="invoke" desc="(Ljava/lang/Comparable;)Z" line="14"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapEntryAssertionsKt" sourcefilename="mapEntryAssertions.kt"><method name="_isKeyValue" desc="(Lch/tutteli/atrium/creating/Expect;Ljava/lang/Object;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/Assertion;" line="11"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_isKeyValue" desc="(Lch/tutteli/atrium/creating/Expect;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/reflect/KClass;Lkotlin/reflect/KClass;)Lch/tutteli/atrium/assertions/Assertion;" line="23"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_key" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="33"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_value" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="36"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapEntryAssertionsDeprecatedKt$_nullableKey$1" sourcefilename="mapEntryAssertionsDeprecated.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;)V" line="32"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapAssertionsKt__MapAssertionsKt$_contains$1$1$1" sourcefilename="mapAssertions.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/Expect;)V" line="30"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/PathAssertionsKt$_startsWith$1" sourcefilename="pathAssertions.kt"><method name="invoke" desc="(Ljava/nio/file/Path;)Z" line="37"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/FeatureAssertionsDeprecatedKt$_returnValueOf4$4" sourcefilename="featureAssertionsDeprecated.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="102"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/ZonedDateTimeAssertionsKt$_dayOfWeek$1" sourcefilename="zonedDateTimeAssertions.kt"><method name="invoke" desc="(Ljava/time/ZonedDateTime;)Ljava/time/DayOfWeek;" line="17"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/FeatureAssertionsDeprecatedKt$_returnValueOf4$3" sourcefilename="featureAssertionsDeprecated.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="99"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/FeatureAssertionsDeprecatedKt$_returnValueOf4$2" sourcefilename="featureAssertionsDeprecated.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="95"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/FeatureAssertionsDeprecatedKt$_returnValueOf4$1" sourcefilename="featureAssertionsDeprecated.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="92"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/AnyAssertionsKt"><method name="_isA" desc="(Lch/tutteli/atrium/creating/Expect;Lkotlin/reflect/KClass;)Lch/tutteli/atrium/domain/creating/changers/ChangedSubjectPostStep;" line="1"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_isNotNull" desc="(Lch/tutteli/atrium/creating/AssertionPlantNullable;Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="1"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_isNotNullBut" desc="(Lch/tutteli/atrium/creating/AssertionPlantNullable;Lkotlin/reflect/KClass;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/Assertion;" line="1"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_isNotSame" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/DescriptiveAssertion;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_isNullIfNullGivenElse" desc="(Lch/tutteli/atrium/creating/AssertionPlantNullable;Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="1"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_isNullable" desc="(Lch/tutteli/atrium/creating/AssertionPlantNullable;Lkotlin/reflect/KClass;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/Assertion;" line="1"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_isSame" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/DescriptiveAssertion;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_notToBe" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/DescriptiveAssertion;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_toBe" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/DescriptiveAssertion;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_toBeNull" desc="(Lch/tutteli/atrium/creating/SubjectProvider;)Lch/tutteli/atrium/assertions/DescriptiveAssertion;" line="1"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_toBeNullIfNullGivenElse" desc="(Lch/tutteli/atrium/creating/Expect;Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="1"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_toBeNullable" desc="(Lch/tutteli/atrium/creating/Expect;Lkotlin/reflect/KClass;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/Assertion;" line="1"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="39"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="3" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/IterableAssertionsKt$_hasNext$1" sourcefilename="iterableAssertions.kt"><method name="invoke" desc="(Ljava/lang/Iterable;)Z" line="90"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/CharSequenceAssertionsKt$_isNotEmpty$1" sourcefilename="charSequenceAssertions.kt"><method name="invoke" desc="(Ljava/lang/CharSequence;)Z" line="42"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/ComparableAssertionsKt$_isLessThan$1" sourcefilename="comparableAssertions.kt"><method name="invoke" desc="(Ljava/lang/Comparable;)Z" line="8"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/AnyAssertionsKt__AnyAssertionsDeprecatedKt$_isNotNullBut$1" sourcefilename="anyAssertionsDeprecated.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/AssertionPlant;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/PathAssertionsKt" sourcefilename="pathAssertions.kt"><method name="_startsWith" desc="(Lch/tutteli/atrium/creating/Expect;Ljava/nio/file/Path;)Lch/tutteli/atrium/assertions/Assertion;" line="37"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_startsNotWith" desc="(Lch/tutteli/atrium/creating/Expect;Ljava/nio/file/Path;)Lch/tutteli/atrium/assertions/Assertion;" line="40"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_endsWith" desc="(Lch/tutteli/atrium/creating/Expect;Ljava/nio/file/Path;)Lch/tutteli/atrium/assertions/Assertion;" line="43"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_endsNotWith" desc="(Lch/tutteli/atrium/creating/Expect;Ljava/nio/file/Path;)Lch/tutteli/atrium/assertions/DescriptiveAssertion;" line="46"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_exists" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/assertions/Assertion;" line="49"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_existsNot" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/assertions/Assertion;" line="69"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_isReadable" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/assertions/Assertion;" line="85"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_isWritable" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/assertions/Assertion;" line="88"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_isRegularFile" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/assertions/Assertion;" line="91"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_isDirectory" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/assertions/Assertion;" line="94"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="filePermissionAssertion" desc="(Lch/tutteli/atrium/creating/Expect;Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/nio/file/AccessMode;)Lch/tutteli/atrium/assertions/Assertion;" line="100"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fileTypeAssertion" desc="(Lch/tutteli/atrium/creating/Expect;Lch/tutteli/atrium/reporting/translating/Translatable;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="128"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="changeSubjectToFileAttributes" desc="(Lch/tutteli/atrium/creating/Expect;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;" line="146"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findHintForProblemWithParent" desc="(Ljava/nio/file/Path;)Lch/tutteli/atrium/assertions/Assertion;" line="155"><counter type="INSTRUCTION" missed="84" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hintForParentFailure" desc="(Ljava/nio/file/Path;Lch/tutteli/atrium/assertions/Assertion;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="185"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hintForAccessDenied" desc="(Ljava/nio/file/Path;)Lch/tutteli/atrium/assertions/Assertion;" line="200"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hintForOwnersAndPermissions" desc="(Ljava/nio/file/Path;)Ljava/util/List;" line="215"><counter type="INSTRUCTION" missed="87" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hintForOwner" desc="(Ljava/lang/String;)Lch/tutteli/atrium/assertions/ExplanatoryAssertion;" line="232"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hintForOwnerAndGroup" desc="(Ljava/lang/String;Ljava/lang/String;)Lch/tutteli/atrium/assertions/ExplanatoryAssertion;" line="237"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hintsForActualAclPermissions" desc="(Ljava/util/List;)[Lch/tutteli/atrium/assertions/Assertion;" line="242"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hintForAclEntry" desc="(Ljava/nio/file/attribute/AclEntry;)Lch/tutteli/atrium/assertions/ExplanatoryAssertion;" line="252"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hintForActualPosixPermissions" desc="(Ljava/util/Set;)Lch/tutteli/atrium/assertions/ExplanatoryAssertion;" line="257"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatPosixPermissions" desc="(Ljava/util/Set;)Ljava/lang/StringBuilder;" line="262"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPermissionString" desc="(Ljava/util/Set;Ljava/nio/file/attribute/PosixFilePermission;Ljava/nio/file/attribute/PosixFilePermission;Ljava/nio/file/attribute/PosixFilePermission;)Ljava/lang/StringBuilder;" line="281"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hintForExistsButMissingPermission" desc="(Ljava/nio/file/Path;Lch/tutteli/atrium/reporting/translating/Translatable;)Lch/tutteli/atrium/assertions/ExplanatoryAssertion;" line="289"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="describeWas" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;)Lch/tutteli/atrium/assertions/DescriptiveAssertion;" line="294"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hintForIoException" desc="(Ljava/nio/file/Path;Ljava/io/IOException;)Lch/tutteli/atrium/assertions/Assertion;" line="298"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hintForFileSpecificIoException" desc="(Ljava/nio/file/Path;Ljava/io/IOException;)Lch/tutteli/atrium/assertions/Assertion;" line="304"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hintForFileNotFound" desc="(Ljava/nio/file/Path;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="310"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hintForNoSuchFile" desc="()Lch/tutteli/atrium/assertions/ExplanatoryAssertion;" line="318"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hintForClosestExistingParent" desc="(Ljava/nio/file/Path;)Lch/tutteli/atrium/assertions/Assertion;" line="327"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hintForExistingParentDirectory" desc="(Ljava/nio/file/Path;)Lch/tutteli/atrium/assertions/ExplanatoryAssertion;" line="348"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hintForNotDirectory" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;)Lch/tutteli/atrium/assertions/ExplanatoryAssertion;" line="353"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hintForOtherIoException" desc="(Ljava/io/IOException;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="358"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFileType" desc="(Ljava/nio/file/Path;)Lch/tutteli/atrium/reporting/translating/Translatable;" line="370"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFileType" desc="(Ljava/nio/file/attribute/BasicFileAttributes;)Lch/tutteli/atrium/reporting/translating/Translatable;" line="373"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_fileName" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="381"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_fileNameWithoutExtension" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="384"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_parent" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="387"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_extension" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="397"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1017" covered="0"/><counter type="BRANCH" missed="38" covered="0"/><counter type="LINE" missed="192" covered="0"/><counter type="COMPLEXITY" missed="59" covered="0"/><counter type="METHOD" missed="40" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapEntryAssertionsDeprecatedKt$_key$1" sourcefilename="mapEntryAssertionsDeprecated.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapEntryAssertionsKt$_isKeyValue$1$2" sourcefilename="mapEntryAssertions.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/Expect;)V" line="13"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapEntryAssertionsKt$_isKeyValue$1$1" sourcefilename="mapEntryAssertions.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/Expect;)V" line="12"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/AnyAssertionsKt__AnyAssertionsKt$_notToBe$1" sourcefilename="anyAssertions.kt"><method name="invoke" desc="(Ljava/lang/Object;)Z" line="25"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/floatingPointAssertionsKt__FloatingPointAssertionsKt$_toBeWithErrorTolerance$2" sourcefilename="floatingPointAssertions.kt"><method name="invoke" desc="(D)D" line="23"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/FeatureAssertionsDeprecatedKt$_returnValueOf3$4" sourcefilename="featureAssertionsDeprecated.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="88"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapAssertionsKt__MapAssertionsDeprecatedKt$_values$1" sourcefilename="mapAssertionsDeprecated.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;)V" line="155"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/floatingPointAssertionsKt__FloatingPointAssertionsKt$_toBeWithErrorTolerance$1" sourcefilename="floatingPointAssertions.kt"><method name="invoke" desc="(F)F" line="20"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/FeatureAssertionsDeprecatedKt$_returnValueOf3$3" sourcefilename="featureAssertionsDeprecated.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="85"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/FeatureAssertionsDeprecatedKt$_returnValueOf3$2" sourcefilename="featureAssertionsDeprecated.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="81"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/FeatureAssertionsDeprecatedKt$_returnValueOf3$1" sourcefilename="featureAssertionsDeprecated.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="78"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/BigDecimalAssertionsKt$_isNumericallyEqualTo$1" sourcefilename="bigDecimalAssertions.kt"><method name="invoke" desc="(Ljava/math/BigDecimal;)Z" line="13"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/FeatureAssertionsDeprecatedKt" sourcefilename="featureAssertionsDeprecated.kt"><method name="_property" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function0;Lch/tutteli/atrium/reporting/translating/Translatable;)Lch/tutteli/atrium/creating/AssertionPlant;" line="14"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_property" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function0;Lch/tutteli/atrium/reporting/translating/Translatable;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="19"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_property" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lch/tutteli/atrium/reporting/translating/Translatable;)Lch/tutteli/atrium/creating/AssertionPlant;" line="24"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_property" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lch/tutteli/atrium/reporting/translating/Translatable;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="27"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createCommonFieldsForFeatureFactory" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/reporting/translating/Translatable;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;)Lch/tutteli/atrium/creating/AssertionPlantWithCommonFields$CommonFields;" line="30"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_returnValueOf0" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function0;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlant;" line="35"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_returnValueOf0" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlant;" line="38"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_returnValueOf0" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function0;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="42"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_returnValueOf0" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="45"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_returnValueOf1" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlant;" line="50"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_returnValueOf1" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlant;" line="53"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_returnValueOf1" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="57"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_returnValueOf1" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="60"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_returnValueOf2" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlant;" line="64"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_returnValueOf2" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlant;" line="67"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_returnValueOf2" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="71"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_returnValueOf2" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="74"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_returnValueOf3" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function3;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlant;" line="78"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_returnValueOf3" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function3;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlant;" line="81"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_returnValueOf3" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function3;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="85"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_returnValueOf3" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function3;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="88"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_returnValueOf4" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function4;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlant;" line="92"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_returnValueOf4" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function4;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlant;" line="95"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_returnValueOf4" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function4;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="99"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_returnValueOf4" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function4;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="102"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_returnValueOf5" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function5;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlant;" line="106"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_returnValueOf5" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function5;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlant;" line="109"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_returnValueOf5" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function5;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="113"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_returnValueOf5" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function5;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="116"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createPlantForMethod" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/String;Lkotlin/jvm/functions/Function0;[Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="121"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createPlantForMethod" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/String;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;[Ljava/lang/Object;)Lch/tutteli/atrium/creating/ReportingAssertionPlant;" line="126"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createPlantForMethodNullable" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/String;Lkotlin/jvm/functions/Function0;[Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="130"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createPlantForMethodNullable" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/String;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;[Ljava/lang/Object;)Lch/tutteli/atrium/creating/ReportingAssertionPlantNullable;" line="135"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createCommonFieldsForFeatureFactory" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/String;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;[Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlantWithCommonFields$CommonFields;" line="138"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="421" covered="569"/><counter type="LINE" missed="11" covered="33"/><counter type="COMPLEXITY" missed="11" covered="23"/><counter type="METHOD" missed="11" covered="23"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/IterableAssertionsKt" sourcefilename="iterableAssertions.kt"><method name="_containsBuilder" desc="(Lch/tutteli/atrium/creating/SubjectProvider;)Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;" line="31"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_containsNotBuilder" desc="(Lch/tutteli/atrium/creating/SubjectProvider;)Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;" line="34"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_iterableAll" desc="(Lch/tutteli/atrium/creating/Expect;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="40"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMismatchAssertions" desc="(Ljava/util/List;Lkotlin/jvm/functions/Function1;)Ljava/util/List;" line="78"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_hasNext" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/assertions/Assertion;" line="89"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_hasNotNext" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/assertions/Assertion;" line="94"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_min" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="99"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_max" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="102"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="collect" desc="(Lch/tutteli/atrium/creating/Expect;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="109"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="108" covered="26"/><counter type="LINE" missed="18" covered="2"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="7" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/IterableAssertionsKt$_hasNotNext$1" sourcefilename="iterableAssertions.kt"><method name="invoke" desc="(Ljava/lang/Iterable;)Z" line="95"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/ListAssertionsKt"><method name="_get" desc="(Lch/tutteli/atrium/creating/AssertionPlant;I)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_get" desc="(Lch/tutteli/atrium/creating/AssertionPlant;ILkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="1"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_get" desc="(Lch/tutteli/atrium/creating/Expect;I)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="1"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_getNullable" desc="(Lch/tutteli/atrium/creating/AssertionPlant;I)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_getNullable" desc="(Lch/tutteli/atrium/creating/AssertionPlant;ILkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="1"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/PairAssertionsKt" sourcefilename="pairAssertions.kt"><method name="_first" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="8"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_second" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="11"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapAssertionsKt__MapAssertionsDeprecatedKt$_hasSize$1" sourcefilename="mapAssertionsDeprecated.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;)V" line="146"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/ComparableAssertionsKt$_isGreaterOrEquals$1" sourcefilename="comparableAssertions.kt"><method name="invoke" desc="(Ljava/lang/Comparable;)Z" line="17"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/BigDecimalAssertionsKt" sourcefilename="bigDecimalAssertions.kt"><method name="_isNumericallyEqualTo" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/math/BigDecimal;)Lch/tutteli/atrium/assertions/DescriptiveAssertion;" line="12"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNumericallyEqualTo" desc="(Ljava/math/BigDecimal;Ljava/math/BigDecimal;)Z" line="17"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_isNotNumericallyEqualTo" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/math/BigDecimal;)Lch/tutteli/atrium/assertions/DescriptiveAssertion;" line="20"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_isEqualIncludingScale" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/math/BigDecimal;Ljava/lang/String;)Lch/tutteli/atrium/assertions/Assertion;" line="30"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_isNotEqualIncludingScale" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/math/BigDecimal;)Lch/tutteli/atrium/assertions/Assertion;" line="51"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="112"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/PathAssertionsKt$changeSubjectToFileAttributes$1" sourcefilename="pathAssertions.kt"><method name="invoke" desc="(Ljava/nio/file/Path;)Lch/tutteli/atrium/domain/robstoll/lib/creating/filesystem/IoResult;" line="147"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapAssertionsKt__MapAssertionsKt$_containsKeyWithValueAssertion$assertion$1$$special$$inlined$map$lambda$1" sourcefilename="mapAssertions.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/Expect;)V" line="51"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/IterableAssertionsDeprecatedKt$createMismatchAssertions$2$1" sourcefilename="iterableAssertionsDeprecated.kt"><method name="invoke" desc="()Z" line="69"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapAssertionsKt__MapAssertionsKt$_containsKeyWithValueAssertion$assertion$1" sourcefilename="mapAssertions.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/Expect;)V" line="42"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/CharSequenceAssertionsKt" sourcefilename="charSequenceAssertions.kt"><method name="_containsBuilder" desc="(Lch/tutteli/atrium/creating/SubjectProvider;)Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$Builder;" line="20"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_containsNotBuilder" desc="(Lch/tutteli/atrium/creating/SubjectProvider;)Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$Builder;" line="23"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_startsWith" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/lang/CharSequence;)Lch/tutteli/atrium/assertions/Assertion;" line="27"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_startsNotWith" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/lang/CharSequence;)Lch/tutteli/atrium/assertions/Assertion;" line="30"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_endsWith" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/lang/CharSequence;)Lch/tutteli/atrium/assertions/Assertion;" line="33"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_endsNotWith" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/lang/CharSequence;)Lch/tutteli/atrium/assertions/Assertion;" line="36"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_isEmpty" desc="(Lch/tutteli/atrium/creating/SubjectProvider;)Lch/tutteli/atrium/assertions/Assertion;" line="39"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_isNotEmpty" desc="(Lch/tutteli/atrium/creating/SubjectProvider;)Lch/tutteli/atrium/assertions/Assertion;" line="42"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_isNotBlank" desc="(Lch/tutteli/atrium/creating/SubjectProvider;)Lch/tutteli/atrium/assertions/Assertion;" line="45"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_matches" desc="(Lch/tutteli/atrium/creating/Expect;Lkotlin/text/Regex;)Lch/tutteli/atrium/assertions/Assertion;" line="48"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_mismatches" desc="(Lch/tutteli/atrium/creating/Expect;Lkotlin/text/Regex;)Lch/tutteli/atrium/assertions/Assertion;" line="51"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="171"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/ListAssertionsKt__ListAssertionsDeprecatedKt$createGetParameterObject$1" sourcefilename="listAssertionsDeprecated.kt"><method name="invoke" desc="(Ljava/util/List;)Z" line="58"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/ListAssertionsKt__ListAssertionsDeprecatedKt$createGetParameterObject$2" sourcefilename="listAssertionsDeprecated.kt"><method name="invoke" desc="(Ljava/util/List;)Ljava/lang/Object;" line="59"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapAssertionsKt__MapAssertionsKt$_containsNotKey$1" sourcefilename="mapAssertions.kt"><method name="invoke" desc="(Ljava/util/Map;)Z" line="65"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/CollectionAssertionsKt$_size$1" sourcefilename="collectionAssertions.kt"><method name="invoke" desc="(Ljava/util/Collection;)I" line="21"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/AnyAssertionsKt__AnyAssertionsKt$_toBe$1" sourcefilename="anyAssertions.kt"><method name="invoke" desc="(Ljava/lang/Object;)Z" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/PathAssertionsKt$_startsNotWith$1" sourcefilename="pathAssertions.kt"><method name="invoke" desc="(Ljava/nio/file/Path;)Z" line="40"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/LocalDateAssertionsKt$_dayOfWeek$1" sourcefilename="localDateAssertions.kt"><method name="invoke" desc="(Ljava/time/LocalDate;)Ljava/time/DayOfWeek;" line="17"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/OptionalAssertionsKt" sourcefilename="optionalAssertions.kt"><method name="_isEmpty" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/assertions/Assertion;" line="12"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/PathAssertionsKt$_extension$1" sourcefilename="pathAssertions.kt"><method name="invoke" desc="(Ljava/nio/file/Path;)Ljava/lang/String;" line="397"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapEntryAssertionsDeprecatedKt" sourcefilename="mapEntryAssertionsDeprecated.kt"><method name="_keyValue" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/Object;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/Assertion;" line="16"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_key" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="22"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_value" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="27"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_nullableKey" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="32"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_nullableValue" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/Assertion;" line="37"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="61"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/PathAssertionsKt$filePermissionAssertion$$inlined$let$lambda$1" sourcefilename="pathAssertions.kt"><method name="invoke" desc="(Lch/tutteli/atrium/domain/robstoll/lib/creating/filesystem/IoResult;)Lch/tutteli/atrium/assertions/Assertion;" line="106"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/ZonedDateTimeAssertionsKt" sourcefilename="zonedDateTimeAssertions.kt"><method name="_year" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="11"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_month" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="14"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_dayOfWeek" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="17"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/CollectionAssertionsDeprecatedKt" sourcefilename="collectionAssertionsDeprecated.kt"><method name="_hasSize" desc="(Lch/tutteli/atrium/creating/AssertionPlant;I)Lch/tutteli/atrium/assertions/Assertion;" line="14"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_size" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="18"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/floatingPointAssertionsKt__FloatingPointAssertionsKt$toBeWithErrorTolerance$2" sourcefilename="floatingPointAssertions.kt"><method name="invoke" desc="(Ljava/lang/Comparable;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="70"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/floatingPointAssertionsKt__FloatingPointAssertionsKt$toBeWithErrorTolerance$1" sourcefilename="floatingPointAssertions.kt"><method name="invoke" desc="(Ljava/lang/Comparable;)Z" line="64"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/BigDecimalAssertionsKt$_isEqualIncludingScale$1" sourcefilename="bigDecimalAssertions.kt"><method name="invoke" desc="(Ljava/math/BigDecimal;)Z" line="31"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/BigDecimalAssertionsKt$_isEqualIncludingScale$2" sourcefilename="bigDecimalAssertions.kt"><method name="invoke" desc="()Lch/tutteli/atrium/assertions/AssertionGroup;" line="33"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/BigDecimalAssertionsKt$_isEqualIncludingScale$3" sourcefilename="bigDecimalAssertions.kt"><method name="invoke" desc="(Ljava/math/BigDecimal;)Z" line="42"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/floatingPointAssertionsKt__FloatingPointAssertionsKt$toBeWithErrorToleranceOfFloatOrDouble$1" sourcefilename="floatingPointAssertions.kt"><method name="invoke" desc="(Ljava/lang/Number;)Ljava/util/List;" line="32"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/CharSequenceAssertionsKt$_isEmpty$1" sourcefilename="charSequenceAssertions.kt"><method name="invoke" desc="(Ljava/lang/CharSequence;)Z" line="39"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/ThrowableAssertionsKt" sourcefilename="throwableAssertions.kt"><method name="_thrownBuilder" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Lkotlin/jvm/functions/Function0;Lch/tutteli/atrium/reporting/Reporter;)Lch/tutteli/atrium/domain/creating/throwable/thrown/ThrowableThrown$Builder;" line="10"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapAssertionsKt__MapAssertionsKt$_getExisting$1" sourcefilename="mapAssertions.kt"><method name="invoke" desc="(Ljava/util/Map;)Lch/tutteli/atrium/core/Option;" line="79"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/AnyAssertionsKt__AnyAssertionsKt$_isSame$1" sourcefilename="anyAssertions.kt"><method name="invoke" desc="(Ljava/lang/Object;)Z" line="28"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/CharSequenceAssertionsKt$_matches$1" sourcefilename="charSequenceAssertions.kt"><method name="invoke" desc="(Ljava/lang/CharSequence;)Z" line="48"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/CollectionAssertionsKt" sourcefilename="collectionAssertions.kt"><method name="_isEmpty" desc="(Lch/tutteli/atrium/creating/SubjectProvider;)Lch/tutteli/atrium/assertions/Assertion;" line="15"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_isNotEmpty" desc="(Lch/tutteli/atrium/creating/SubjectProvider;)Lch/tutteli/atrium/assertions/Assertion;" line="18"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_size" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="21"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="38"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/AnyAssertionsKt__AnyAssertionsKt$_toBeNull$1" sourcefilename="anyAssertions.kt"><method name="invoke" desc="(Ljava/lang/Object;)Z" line="35"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapAssertionsKt__MapAssertionsDeprecatedKt$_containsKeyWithValueAssertion$2$1" sourcefilename="mapAssertionsDeprecated.kt"><method name="invoke" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="39"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/PathAssertionsKt$fileTypeAssertion$$inlined$changeSubjectToFileAttributes$lambda$3" sourcefilename="pathAssertions.kt"><method name="invoke" desc="(Lch/tutteli/atrium/domain/robstoll/lib/creating/filesystem/IoResult;)Z" line="130"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapAssertionsKt__MapAssertionsKt$_containsKeyWithValueAssertion$assertion$1$1$1" sourcefilename="mapAssertions.kt"><method name="invoke" desc="(Ljava/util/Map;)Lch/tutteli/atrium/core/Option;" line="47"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/PairAssertionsDeprecatedKt$_nullableSecond$1" sourcefilename="pairAssertionsDeprecated.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;)V" line="25"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/PathAssertionsKt$fileTypeAssertion$$inlined$changeSubjectToFileAttributes$lambda$1" sourcefilename="pathAssertions.kt"><method name="invoke" desc="(Lch/tutteli/atrium/domain/robstoll/lib/creating/filesystem/IoResult;)Z" line="130"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/IterableAssertionsKt$createMismatchAssertions$1" sourcefilename="iterableAssertions.kt"><method name="invoke" desc="(Lch/tutteli/kbox/WithIndex;)Z" line="81"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/IterableAssertionsKt$createMismatchAssertions$2" sourcefilename="iterableAssertions.kt"><method name="invoke" desc="(Lch/tutteli/kbox/WithIndex;)Lch/tutteli/atrium/assertions/DescriptiveAssertion;" line="83"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/PathAssertionsKt$fileTypeAssertion$$inlined$changeSubjectToFileAttributes$lambda$2" sourcefilename="pathAssertions.kt"><method name="invoke" desc="(Lch/tutteli/atrium/domain/robstoll/lib/creating/filesystem/IoResult;)Z" line="130"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/floatingPointAssertionsKt__FloatingPointJvmAssertionsKt$_toBeWithErrorTolerance$1" sourcefilename="floatingPointJvmAssertions.kt"><method name="invoke" desc="(Ljava/math/BigDecimal;)Ljava/util/List;" line="17"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapAssertionsKt__MapAssertionsDeprecatedKt$_hasSize$1$2" sourcefilename="mapAssertionsDeprecated.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/AssertionPlant;)V" line="146"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapAssertionsKt__MapAssertionsDeprecatedKt$_contains$1$1$1" sourcefilename="mapAssertionsDeprecated.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/AssertionPlant;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/LocalDateTimeAssertionsKt$_dayOfWeek$1" sourcefilename="localDateTimeAssertions.kt"><method name="invoke" desc="(Ljava/time/LocalDateTime;)Ljava/time/DayOfWeek;" line="17"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/PathAssertionsKt$filePermissionAssertion$2$1" sourcefilename="pathAssertions.kt"><method name="invoke" desc="(Lch/tutteli/atrium/domain/robstoll/lib/creating/filesystem/IoResult;)Z" line="104"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapAssertionsKt__MapAssertionsKt$_isNotEmpty$1" sourcefilename="mapAssertions.kt"><method name="invoke" desc="(Ljava/util/Map;)Z" line="72"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/PairAssertionsDeprecatedKt$_second$1" sourcefilename="pairAssertionsDeprecated.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/OptionalAssertionsKt$_isEmpty$1" sourcefilename="optionalAssertions.kt"><method name="invoke" desc="(Ljava/util/Optional;)Z" line="12"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/floatingPointAssertionsKt__FloatingPointJvmAssertionsKt$_toBeWithErrorTolerance$absDiff$1" sourcefilename="floatingPointJvmAssertions.kt"><method name="invoke" desc="(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;" line="15"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapEntryAssertionsKt$_isKeyValue$2" sourcefilename="mapEntryAssertions.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/Expect;)V" line="24"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapEntryAssertionsKt$_isKeyValue$1" sourcefilename="mapEntryAssertions.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/Expect;)V" line="12"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/LocalDateTimeAssertionsKt$_year$1" sourcefilename="localDateTimeAssertions.kt"><method name="invoke" desc="(Ljava/time/LocalDateTime;)I" line="11"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/IterableAssertionsDeprecatedKt$createMismatchAssertions$2" sourcefilename="iterableAssertionsDeprecated.kt"><method name="invoke" desc="(Lch/tutteli/kbox/WithIndex;)Lch/tutteli/atrium/assertions/DescriptiveAssertion;" line="68"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapAssertionsKt__MapAssertionsDeprecatedKt$containsNullable$1" sourcefilename="mapAssertionsDeprecated.kt"><method name="invoke" desc="(Lch/tutteli/atrium/domain/creating/feature/extract/FeatureExtractor$ParameterObjectOption;Ljava/lang/Object;)Lch/tutteli/atrium/domain/creating/feature/extract/FeatureExtractor$CreatorNullable;" line="64"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/IterableAssertionsDeprecatedKt$createMismatchAssertions$1" sourcefilename="iterableAssertionsDeprecated.kt"><method name="invoke" desc="(Lch/tutteli/kbox/WithIndex;)Z" line="66"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/BigDecimalAssertionsKt$_isNotEqualIncludingScale$1" sourcefilename="bigDecimalAssertions.kt"><method name="invoke" desc="(Ljava/math/BigDecimal;)Z" line="52"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/CollectionAssertionsKt$_isEmpty$1" sourcefilename="collectionAssertions.kt"><method name="invoke" desc="(Ljava/util/Collection;)Z" line="15"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/CharSequenceAssertionsKt$_startsWith$1" sourcefilename="charSequenceAssertions.kt"><method name="invoke" desc="(Ljava/lang/CharSequence;)Z" line="27"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/ComparableAssertionsKt$_isLessOrEquals$1" sourcefilename="comparableAssertions.kt"><method name="invoke" desc="(Ljava/lang/Comparable;)Z" line="11"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapAssertionsKt__MapAssertionsKt$_isEmpty$1" sourcefilename="mapAssertions.kt"><method name="invoke" desc="(Ljava/util/Map;)Z" line="69"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/CollectionAssertionsDeprecatedKt$_hasSize$1" sourcefilename="collectionAssertionsDeprecated.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/AssertionPlant;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/LocalDateAssertionsKt" sourcefilename="localDateAssertions.kt"><method name="_year" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="11"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_month" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="14"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_dayOfWeek" desc="(Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/domain/creating/changers/ExtractedFeaturePostStep;" line="17"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/AnyAssertionsKt__AnyAssertionsDeprecatedKt$_isNotNull$1" sourcefilename="anyAssertionsDeprecated.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlantNullable;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapAssertionsKt__MapAssertionsDeprecatedKt$contains$1" sourcefilename="mapAssertionsDeprecated.kt"><method name="invoke" desc="()Lch/tutteli/atrium/assertions/AssertionGroup;" line="74"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/PathAssertionsKt$_isRegularFile$$inlined$fileTypeAssertion$1" sourcefilename="pathAssertions.kt"><method name="invoke" desc="(Lch/tutteli/atrium/domain/robstoll/lib/creating/filesystem/IoResult;)Z" line="130"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapAssertionsKt__MapAssertionsDeprecatedKt$createGetParameterObject$1" sourcefilename="mapAssertionsDeprecated.kt"><method name="invoke" desc="(Ljava/util/Map;)Z" line="127"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/MapAssertionsKt__MapAssertionsDeprecatedKt$createGetParameterObject$2" sourcefilename="mapAssertionsDeprecated.kt"><method name="invoke" desc="(Ljava/util/Map;)Ljava/lang/Object;" line="141"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/ComparableAssertionsKt" sourcefilename="comparableAssertions.kt"><method name="_isLessThan" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/DescriptiveAssertion;" line="8"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_isLessOrEquals" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/DescriptiveAssertion;" line="11"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_isGreaterThan" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/DescriptiveAssertion;" line="14"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_isGreaterOrEquals" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/DescriptiveAssertion;" line="17"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="anyAssertionsDeprecated.kt"><line nr="32" mi="0" ci="13" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="featureAssertionsDeprecated.kt"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="6" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="9" mb="0" cb="0"/><line nr="27" mi="0" ci="9" mb="0" cb="0"/><line nr="30" mi="0" ci="13" mb="0" cb="0"/><line nr="35" mi="0" ci="7" mb="0" cb="0"/><line nr="38" mi="9" ci="0" mb="0" cb="0"/><line nr="42" mi="0" ci="7" mb="0" cb="0"/><line nr="45" mi="0" ci="9" mb="0" cb="0"/><line nr="50" mi="0" ci="22" mb="0" cb="0"/><line nr="53" mi="24" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="22" mb="0" cb="0"/><line nr="60" mi="24" ci="0" mb="0" cb="0"/><line nr="64" mi="0" ci="29" mb="0" cb="0"/><line nr="67" mi="31" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="29" mb="0" cb="0"/><line nr="74" mi="31" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="36" mb="0" cb="0"/><line nr="81" mi="38" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="36" mb="0" cb="0"/><line nr="88" mi="38" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="43" mb="0" cb="0"/><line nr="95" mi="45" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="43" mb="0" cb="0"/><line nr="102" mi="45" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="50" mb="0" cb="0"/><line nr="109" mi="52" ci="0" mb="0" cb="0"/><line nr="113" mi="0" ci="50" mb="0" cb="0"/><line nr="116" mi="52" ci="0" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="15" mb="0" cb="0"/><line nr="126" mi="0" ci="9" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="15" mb="0" cb="0"/><line nr="135" mi="0" ci="9" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="9" mb="0" cb="0"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="521" covered="669"/><counter type="LINE" missed="11" covered="33"/><counter type="COMPLEXITY" missed="21" covered="33"/><counter type="METHOD" missed="21" covered="33"/><counter type="CLASS" missed="10" covered="11"/></sourcefile><sourcefile name="mapEntryAssertions.kt"><line nr="11" mi="12" ci="0" mb="0" cb="0"/><line nr="12" mi="22" ci="0" mb="0" cb="0"/><line nr="13" mi="22" ci="0" mb="0" cb="0"/><line nr="14" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="14" ci="0" mb="0" cb="0"/><line nr="24" mi="15" ci="0" mb="0" cb="0"/><line nr="25" mi="19" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="27" mi="15" ci="0" mb="0" cb="0"/><line nr="28" mi="19" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="30" mi="2" ci="0" mb="0" cb="0"/><line nr="33" mi="8" ci="0" mb="0" cb="0"/><line nr="36" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="202" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="7" covered="0"/></sourcefile><sourcefile name="collectionAssertions.kt"><line nr="15" mi="0" ci="19" mb="0" cb="0"/><line nr="18" mi="0" ci="27" mb="0" cb="2"/><line nr="21" mi="14" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="58"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="1" covered="3"/></sourcefile><sourcefile name="comparableAssertions.kt"><line nr="8" mi="0" ci="24" mb="0" cb="2"/><line nr="11" mi="0" ci="24" mb="0" cb="2"/><line nr="14" mi="0" ci="24" mb="0" cb="2"/><line nr="17" mi="0" ci="24" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="120"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="zonedDateTimeAssertions.kt"><line nr="11" mi="14" ci="0" mb="0" cb="0"/><line nr="14" mi="14" ci="0" mb="0" cb="0"/><line nr="17" mi="14" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="4" covered="0"/></sourcefile><sourcefile name="mapAssertions.kt"><line nr="30" mi="6" ci="0" mb="0" cb="0"/><line nr="42" mi="6" ci="0" mb="0" cb="0"/><line nr="43" mi="8" ci="0" mb="0" cb="0"/><line nr="44" mi="11" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="6" ci="0" mb="0" cb="0"/><line nr="47" mi="35" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="8" ci="0" mb="0" cb="0"/><line nr="51" mi="18" ci="0" mb="0" cb="0"/><line nr="52" mi="6" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="11" mb="0" cb="0"/><line nr="65" mi="0" ci="15" mb="0" cb="2"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="11" mb="0" cb="2"/><line nr="79" mi="15" ci="0" mb="0" cb="0"/><line nr="92" mi="19" ci="0" mb="0" cb="0"/><line nr="93" mi="1" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="165" covered="52"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="16" covered="4"/><counter type="COMPLEXITY" missed="6" covered="6"/><counter type="METHOD" missed="6" covered="4"/><counter type="CLASS" missed="6" covered="4"/></sourcefile><sourcefile name="floatingPointAssertions.kt"><line nr="20" mi="10" ci="0" mb="0" cb="0"/><line nr="23" mi="10" ci="0" mb="0" cb="0"/><line nr="32" mi="4" ci="0" mb="0" cb="0"/><line nr="33" mi="7" ci="0" mb="0" cb="0"/><line nr="34" mi="9" ci="0" mb="0" cb="0"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="36" mi="10" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="13" ci="0" mb="2" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="7" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="92" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="5" covered="0"/></sourcefile><sourcefile name="bigDecimalAssertions.kt"><line nr="12" mi="0" ci="14" mb="0" cb="0"/><line nr="13" mi="0" ci="5" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="8" mb="0" cb="2"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="15" mb="0" cb="2"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="12" mb="0" cb="0"/><line nr="32" mi="0" ci="6" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="7" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="16" mb="0" cb="0"/><line nr="52" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="172"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="7"/></sourcefile><sourcefile name="pairAssertions.kt"><line nr="8" mi="8" ci="0" mb="0" cb="0"/><line nr="11" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="anyAssertions.kt"><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="7" mb="0" cb="0"/><line nr="28" mi="0" ci="8" mb="0" cb="2"/><line nr="31" mi="0" ci="8" mb="0" cb="2"/><line nr="35" mi="0" ci="6" mb="0" cb="2"/><line nr="43" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="34"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="1" covered="5"/></sourcefile><sourcefile name="charSequenceAssertions.kt"><line nr="20" mi="0" ci="10" mb="0" cb="0"/><line nr="23" mi="0" ci="10" mb="0" cb="0"/><line nr="27" mi="0" ci="24" mb="0" cb="0"/><line nr="30" mi="0" ci="28" mb="0" cb="2"/><line nr="33" mi="0" ci="24" mb="0" cb="0"/><line nr="36" mi="0" ci="28" mb="0" cb="2"/><line nr="39" mi="0" ci="27" mb="0" cb="2"/><line nr="42" mi="0" ci="27" mb="0" cb="2"/><line nr="45" mi="0" ci="27" mb="0" cb="2"/><line nr="48" mi="28" ci="0" mb="0" cb="0"/><line nr="51" mi="32" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="78" covered="265"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="5" covered="21"/><counter type="METHOD" missed="4" covered="16"/><counter type="CLASS" missed="2" covered="8"/></sourcefile><sourcefile name="iterableAssertions.kt"><line nr="31" mi="0" ci="10" mb="0" cb="0"/><line nr="34" mi="0" ci="10" mb="0" cb="0"/><line nr="40" mi="11" ci="0" mb="0" cb="0"/><line nr="41" mi="12" ci="0" mb="0" cb="0"/><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="5" ci="0" mb="0" cb="0"/><line nr="45" mi="7" ci="0" mb="0" cb="0"/><line nr="47" mi="5" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="6" ci="0" mb="0" cb="0"/><line nr="53" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="6" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="15" ci="0" mb="2" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="16" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="16" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="16" ci="0" mb="0" cb="0"/><line nr="95" mi="8" ci="0" mb="2" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="6" ci="0" mb="0" cb="0"/><line nr="102" mi="6" ci="0" mb="0" cb="0"/><line nr="109" mi="6" ci="0" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="6" ci="0" mb="0" cb="0"/><line nr="113" mi="8" ci="0" mb="0" cb="0"/><line nr="114" mi="14" ci="0" mb="2" cb="0"/><line nr="115" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="9" ci="0" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="289" covered="26"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="48" covered="2"/><counter type="COMPLEXITY" missed="16" covered="2"/><counter type="METHOD" missed="13" covered="2"/><counter type="CLASS" missed="6" covered="1"/></sourcefile><sourcefile name="optionalAssertions.kt"><line nr="12" mi="24" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="localDateTimeAssertions.kt"><line nr="11" mi="14" ci="0" mb="0" cb="0"/><line nr="14" mi="14" ci="0" mb="0" cb="0"/><line nr="17" mi="14" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="4" covered="0"/></sourcefile><sourcefile name="localDateAssertions.kt"><line nr="11" mi="14" ci="0" mb="0" cb="0"/><line nr="14" mi="14" ci="0" mb="0" cb="0"/><line nr="17" mi="14" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="4" covered="0"/></sourcefile><sourcefile name="throwableAssertions.kt"><line nr="10" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="listAssertionsDeprecated.kt"><line nr="58" mi="0" ci="9" mb="0" cb="2"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="pathAssertions.kt"><line nr="37" mi="22" ci="0" mb="0" cb="0"/><line nr="40" mi="26" ci="0" mb="2" cb="0"/><line nr="43" mi="22" ci="0" mb="0" cb="0"/><line nr="46" mi="25" ci="0" mb="2" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="8" ci="0" mb="0" cb="0"/><line nr="52" mi="5" ci="0" mb="0" cb="0"/><line nr="53" mi="5" ci="0" mb="0" cb="0"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="9" ci="0" mb="2" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="8" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="17" ci="0" mb="4" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="11" ci="0" mb="2" cb="0"/><line nr="76" mi="8" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="8" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="6" ci="0" mb="0" cb="0"/><line nr="88" mi="6" ci="0" mb="0" cb="0"/><line nr="91" mi="6" ci="0" mb="0" cb="0"/><line nr="94" mi="6" ci="0" mb="0" cb="0"/><line nr="100" mi="11" ci="0" mb="0" cb="0"/><line nr="101" mi="27" ci="0" mb="0" cb="0"/><line nr="102" mi="9" ci="0" mb="0" cb="0"/><line nr="103" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="8" ci="0" mb="0" cb="0"/><line nr="105" mi="8" ci="0" mb="0" cb="0"/><line nr="106" mi="5" ci="0" mb="0" cb="0"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="9" ci="0" mb="4" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="6" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="0" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="7" ci="0" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="122" mi="1" ci="0" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="4" ci="0" mb="0" cb="0"/><line nr="130" mi="77" ci="0" mb="16" cb="0"/><line nr="131" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="5" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="11" ci="0" mb="2" cb="0"/><line nr="135" mi="8" ci="0" mb="0" cb="0"/><line nr="136" mi="1" ci="0" mb="0" cb="0"/><line nr="137" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="7" ci="0" mb="0" cb="0"/><line nr="140" mi="1" ci="0" mb="0" cb="0"/><line nr="141" mi="1" ci="0" mb="0" cb="0"/><line nr="146" mi="8" ci="0" mb="0" cb="0"/><line nr="147" mi="22" ci="0" mb="0" cb="0"/><line nr="148" mi="8" ci="0" mb="0" cb="0"/><line nr="155" mi="3" ci="0" mb="0" cb="0"/><line nr="156" mi="6" ci="0" mb="0" cb="0"/><line nr="157" mi="11" ci="0" mb="2" cb="0"/><line nr="158" mi="4" ci="0" mb="0" cb="0"/><line nr="159" mi="6" ci="0" mb="2" cb="0"/><line nr="160" mi="1" ci="0" mb="0" cb="0"/><line nr="161" mi="11" ci="0" mb="0" cb="0"/><line nr="162" mi="3" ci="0" mb="2" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="1" ci="0" mb="0" cb="0"/><line nr="165" mi="4" ci="0" mb="0" cb="0"/><line nr="168" mi="1" ci="0" mb="0" cb="0"/><line nr="169" mi="3" ci="0" mb="0" cb="0"/><line nr="170" mi="8" ci="0" mb="0" cb="0"/><line nr="171" mi="6" ci="0" mb="0" cb="0"/><line nr="173" mi="1" ci="0" mb="0" cb="0"/><line nr="174" mi="3" ci="0" mb="0" cb="0"/><line nr="175" mi="4" ci="0" mb="0" cb="0"/><line nr="176" mi="3" ci="0" mb="0" cb="0"/><line nr="181" mi="2" ci="0" mb="0" cb="0"/><line nr="185" mi="4" ci="0" mb="0" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="187" mi="5" ci="0" mb="0" cb="0"/><line nr="188" mi="5" ci="0" mb="0" cb="0"/><line nr="189" mi="1" ci="0" mb="0" cb="0"/><line nr="190" mi="3" ci="0" mb="0" cb="0"/><line nr="191" mi="6" ci="0" mb="2" cb="0"/><line nr="193" mi="6" ci="0" mb="0" cb="0"/><line nr="194" mi="3" ci="0" mb="0" cb="0"/><line nr="195" mi="2" ci="0" mb="0" cb="0"/><line nr="197" mi="3" ci="0" mb="0" cb="0"/><line nr="200" mi="6" ci="0" mb="0" cb="0"/><line nr="201" mi="3" ci="0" mb="0" cb="0"/><line nr="202" mi="1" ci="0" mb="0" cb="0"/><line nr="203" mi="3" ci="0" mb="0" cb="0"/><line nr="204" mi="3" ci="0" mb="0" cb="0"/><line nr="205" mi="4" ci="0" mb="0" cb="0"/><line nr="206" mi="4" ci="0" mb="0" cb="0"/><line nr="207" mi="3" ci="0" mb="0" cb="0"/><line nr="208" mi="3" ci="0" mb="0" cb="0"/><line nr="209" mi="1" ci="0" mb="0" cb="0"/><line nr="210" mi="3" ci="0" mb="0" cb="0"/><line nr="215" mi="4" ci="0" mb="0" cb="0"/><line nr="216" mi="9" ci="0" mb="0" cb="0"/><line nr="217" mi="2" ci="0" mb="2" cb="0"/><line nr="218" mi="13" ci="0" mb="0" cb="0"/><line nr="219" mi="11" ci="0" mb="0" cb="0"/><line nr="221" mi="9" ci="0" mb="0" cb="0"/><line nr="222" mi="2" ci="0" mb="2" cb="0"/><line nr="223" mi="3" ci="0" mb="0" cb="0"/><line nr="224" mi="22" ci="0" mb="0" cb="0"/><line nr="225" mi="9" ci="0" mb="0" cb="0"/><line nr="228" mi="3" ci="0" mb="0" cb="0"/><line nr="232" mi="4" ci="0" mb="0" cb="0"/><line nr="233" mi="6" ci="0" mb="0" cb="0"/><line nr="234" mi="3" ci="0" mb="0" cb="0"/><line nr="237" mi="4" ci="0" mb="0" cb="0"/><line nr="238" mi="10" ci="0" mb="0" cb="0"/><line nr="239" mi="3" ci="0" mb="0" cb="0"/><line nr="242" mi="3" ci="0" mb="0" cb="0"/><line nr="243" mi="7" ci="0" mb="0" cb="0"/><line nr="244" mi="3" ci="0" mb="0" cb="0"/><line nr="245" mi="4" ci="0" mb="0" cb="0"/><line nr="246" mi="7" ci="0" mb="0" cb="0"/><line nr="247" mi="17" ci="0" mb="0" cb="0"/><line nr="248" mi="3" ci="0" mb="0" cb="0"/><line nr="249" mi="1" ci="0" mb="0" cb="0"/><line nr="252" mi="4" ci="0" mb="0" cb="0"/><line nr="253" mi="35" ci="0" mb="0" cb="0"/><line nr="254" mi="3" ci="0" mb="0" cb="0"/><line nr="257" mi="4" ci="0" mb="0" cb="0"/><line nr="258" mi="7" ci="0" mb="0" cb="0"/><line nr="259" mi="3" ci="0" mb="0" cb="0"/><line nr="262" mi="5" ci="0" mb="0" cb="0"/><line nr="263" mi="1" ci="0" mb="0" cb="0"/><line nr="264" mi="2" ci="0" mb="0" cb="0"/><line nr="265" mi="7" ci="0" mb="0" cb="0"/><line nr="266" mi="2" ci="0" mb="0" cb="0"/><line nr="267" mi="2" ci="0" mb="0" cb="0"/><line nr="268" mi="7" ci="0" mb="0" cb="0"/><line nr="269" mi="2" ci="0" mb="0" cb="0"/><line nr="270" mi="2" ci="0" mb="0" cb="0"/><line nr="271" mi="8" ci="0" mb="0" cb="0"/><line nr="272" mi="2" ci="0" mb="0" cb="0"/><line nr="281" mi="5" ci="0" mb="0" cb="0"/><line nr="282" mi="8" ci="0" mb="2" cb="0"/><line nr="283" mi="8" ci="0" mb="2" cb="0"/><line nr="284" mi="8" ci="0" mb="2" cb="0"/><line nr="285" mi="2" ci="0" mb="0" cb="0"/><line nr="289" mi="4" ci="0" mb="0" cb="0"/><line nr="290" mi="11" ci="0" mb="0" cb="0"/><line nr="291" mi="3" ci="0" mb="0" cb="0"/><line nr="294" mi="4" ci="0" mb="0" cb="0"/><line nr="295" mi="7" ci="0" mb="0" cb="0"/><line nr="296" mi="3" ci="0" mb="0" cb="0"/><line nr="298" mi="2" ci="0" mb="0" cb="0"/><line nr="299" mi="7" ci="0" mb="2" cb="0"/><line nr="300" mi="9" ci="0" mb="2" cb="0"/><line nr="301" mi="1" ci="0" mb="0" cb="0"/><line nr="304" mi="2" ci="0" mb="0" cb="0"/><line nr="305" mi="6" ci="0" mb="2" cb="0"/><line nr="306" mi="3" ci="0" mb="0" cb="0"/><line nr="307" mi="1" ci="0" mb="0" cb="0"/><line nr="310" mi="4" ci="0" mb="0" cb="0"/><line nr="311" mi="2" ci="0" mb="0" cb="0"/><line nr="312" mi="2" ci="0" mb="0" cb="0"/><line nr="313" mi="2" ci="0" mb="0" cb="0"/><line nr="315" mi="3" ci="0" mb="0" cb="0"/><line nr="318" mi="4" ci="0" mb="0" cb="0"/><line nr="319" mi="3" ci="0" mb="0" cb="0"/><line nr="320" mi="3" ci="0" mb="0" cb="0"/><line nr="327" mi="7" ci="0" mb="0" cb="0"/><line nr="328" mi="7" ci="0" mb="2" cb="0"/><line nr="329" mi="1" ci="0" mb="0" cb="0"/><line nr="330" mi="8" ci="0" mb="0" cb="0"/><line nr="331" mi="4" ci="0" mb="2" cb="0"/><line nr="332" mi="4" ci="0" mb="0" cb="0"/><line nr="334" mi="2" ci="0" mb="0" cb="0"/><line nr="335" mi="1" ci="0" mb="0" cb="0"/><line nr="336" mi="4" ci="0" mb="0" cb="0"/><line nr="339" mi="1" ci="0" mb="0" cb="0"/><line nr="342" mi="3" ci="0" mb="0" cb="0"/><line nr="344" mi="4" ci="0" mb="0" cb="0"/><line nr="348" mi="4" ci="0" mb="0" cb="0"/><line nr="349" mi="11" ci="0" mb="2" cb="0"/><line nr="350" mi="3" ci="0" mb="0" cb="0"/><line nr="353" mi="4" ci="0" mb="0" cb="0"/><line nr="354" mi="10" ci="0" mb="0" cb="0"/><line nr="355" mi="3" ci="0" mb="0" cb="0"/><line nr="358" mi="2" ci="0" mb="0" cb="0"/><line nr="359" mi="2" ci="0" mb="0" cb="0"/><line nr="360" mi="1" ci="0" mb="0" cb="0"/><line nr="361" mi="7" ci="0" mb="0" cb="0"/><line nr="362" mi="1" ci="0" mb="0" cb="0"/><line nr="363" mi="2" ci="0" mb="0" cb="0"/><line nr="364" mi="14" ci="0" mb="2" cb="0"/><line nr="366" mi="1" ci="0" mb="0" cb="0"/><line nr="367" mi="1" ci="0" mb="0" cb="0"/><line nr="370" mi="8" ci="0" mb="0" cb="0"/><line nr="373" mi="1" ci="0" mb="0" cb="0"/><line nr="374" mi="6" ci="0" mb="2" cb="0"/><line nr="375" mi="6" ci="0" mb="2" cb="0"/><line nr="376" mi="6" ci="0" mb="2" cb="0"/><line nr="377" mi="2" ci="0" mb="0" cb="0"/><line nr="378" mi="1" ci="0" mb="0" cb="0"/><line nr="381" mi="15" ci="0" mb="0" cb="0"/><line nr="384" mi="14" ci="0" mb="0" cb="0"/><line nr="387" mi="6" ci="0" mb="0" cb="0"/><line nr="388" mi="3" ci="0" mb="0" cb="0"/><line nr="389" mi="3" ci="0" mb="0" cb="0"/><line nr="390" mi="3" ci="0" mb="0" cb="0"/><line nr="391" mi="3" ci="0" mb="0" cb="0"/><line nr="392" mi="11" ci="0" mb="2" cb="0"/><line nr="394" mi="2" ci="0" mb="0" cb="0"/><line nr="397" mi="14" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1400" covered="0"/><counter type="BRANCH" missed="74" covered="0"/><counter type="LINE" missed="229" covered="0"/><counter type="COMPLEXITY" missed="99" covered="0"/><counter type="METHOD" missed="62" covered="0"/><counter type="CLASS" missed="23" covered="0"/></sourcefile><sourcefile name="iterableAssertionsDeprecated.kt"><line nr="25" mi="0" ci="11" mb="0" cb="0"/><line nr="26" mi="2" ci="10" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="7" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="15" mb="0" cb="2"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="20" mb="0" cb="0"/><line nr="69" mi="7" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="176"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="35"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="1" covered="4"/></sourcefile><sourcefile name="pairAssertionsDeprecated.kt"><line nr="12" mi="0" ci="21" mb="0" cb="0"/><line nr="15" mi="0" ci="21" mb="0" cb="0"/><line nr="20" mi="22" ci="0" mb="0" cb="0"/><line nr="25" mi="22" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="62" covered="60"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="2" covered="3"/></sourcefile><sourcefile name="collectionAssertionsDeprecated.kt"><line nr="14" mi="0" ci="20" mb="0" cb="0"/><line nr="18" mi="0" ci="20" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="floatingPointJvmAssertions.kt"><line nr="15" mi="15" ci="0" mb="0" cb="0"/><line nr="17" mi="1" ci="0" mb="0" cb="0"/><line nr="18" mi="11" ci="0" mb="0" cb="0"/><line nr="19" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="listAssertions.kt"><line nr="19" mi="27" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="mapEntryAssertionsDeprecated.kt"><line nr="16" mi="0" ci="13" mb="0" cb="0"/><line nr="17" mi="0" ci="27" mb="0" cb="0"/><line nr="18" mi="0" ci="27" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="21" mb="0" cb="0"/><line nr="27" mi="0" ci="21" mb="0" cb="0"/><line nr="32" mi="22" ci="0" mb="0" cb="0"/><line nr="37" mi="22" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="62" covered="147"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="4" covered="8"/><counter type="CLASS" missed="2" covered="6"/></sourcefile><sourcefile name="featureAssertions.kt"><line nr="10" mi="3" ci="6" mb="1" cb="1"/><line nr="11" mi="0" ci="6" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="2" mb="0" cb="0"/><line nr="14" mi="0" ci="10" mb="0" cb="0"/><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="37"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="mapAssertionsDeprecated.kt"><line nr="28" mi="0" ci="7" mb="0" cb="0"/><line nr="36" mi="0" ci="14" mb="0" cb="2"/><line nr="37" mi="0" ci="4" mb="0" cb="4"/><line nr="39" mi="0" ci="15" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="1" cb="3"/><line nr="41" mi="0" ci="16" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="15" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="7" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="7" mb="0" cb="0"/><line nr="76" mi="0" ci="7" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="9" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="23" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="11" mb="0" cb="0"/><line nr="141" mi="0" ci="11" mb="0" cb="0"/><line nr="146" mi="0" ci="18" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="8" mb="0" cb="0"/><line nr="155" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="259"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="33"/><counter type="COMPLEXITY" missed="1" covered="16"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="12"/></sourcefile><counter type="INSTRUCTION" missed="3268" covered="2302"/><counter type="BRANCH" missed="90" covered="48"/><counter type="LINE" missed="357" covered="176"/><counter type="COMPLEXITY" missed="217" covered="173"/><counter type="METHOD" missed="171" covered="150"/><counter type="CLASS" missed="85" covered="82"/></package><package name="ch/tutteli/atrium/domain/robstoll/creating/changers"><class name="ch/tutteli/atrium/domain/robstoll/creating/changers/SubjectChangerImpl$unreportedNullableToAssert$1" sourcefilename="SubjectChangerImpl.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="60"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/creating/changers/SubjectChangerImpl" sourcefilename="SubjectChangerImpl.kt"><method name="unreported" desc="(Lch/tutteli/atrium/creating/Expect;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/Expect;" line="21"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reported" desc="(Lch/tutteli/atrium/creating/Expect;Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;Lch/tutteli/atrium/domain/creating/changers/SubjectChanger$FailureHandler;Lch/tutteli/atrium/core/Option;)Lch/tutteli/atrium/creating/Expect;" line="30"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unreportedToAssert" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="44"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unreportedNullableToAssert" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="57"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createDelegatingAssertionCheckerAndVerb" desc="(Lch/tutteli/atrium/creating/AssertionHolder;)Lkotlin/Pair;" line="67"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="71" covered="43"/><counter type="LINE" missed="14" covered="8"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/creating/changers/SubjectChangerImpl$unreportedToAssert$1" sourcefilename="SubjectChangerImpl.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="47"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/creating/changers/FeatureExtractorImpl" sourcefilename="FeatureExtractoImpl.kt"><method name="extract" desc="(Lch/tutteli/atrium/creating/Expect;Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;Lch/tutteli/atrium/core/Option;Ljava/lang/Object;)Lch/tutteli/atrium/creating/Expect;" line="18"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="SubjectChangerImpl.kt"><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="4" ci="0" mb="0" cb="0"/><line nr="30" mi="1" ci="0" mb="0" cb="0"/><line nr="31" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="1" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><line nr="34" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="0" ci="13" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="21" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="13" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="21" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="86" covered="58"/><counter type="LINE" missed="14" covered="8"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="1" covered="2"/></sourcefile><sourcefile name="FeatureExtractoImpl.kt"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="86" covered="84"/><counter type="LINE" missed="14" covered="17"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="4" covered="6"/><counter type="CLASS" missed="1" covered="3"/></package><package name="ch/tutteli/atrium/domain/robstoll/creating/throwable/thrown/creators"><class name="ch/tutteli/atrium/domain/robstoll/creating/throwable/thrown/creators/ThrowableThrownAssertionsImpl" sourcefilename="ThrowableThrownAssertionsImpl.kt"><method name="isA" desc="(Lch/tutteli/atrium/domain/creating/throwable/thrown/ThrowableThrown$Builder;Lkotlin/reflect/KClass;)Lch/tutteli/atrium/domain/creating/changers/ChangedSubjectPostStep;" line="16"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notThrown" desc="(Lch/tutteli/atrium/domain/creating/throwable/thrown/ThrowableThrown$Builder;)Lch/tutteli/atrium/domain/creating/changers/ChangedSubjectPostStep;" line="20"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="3"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/creating/throwable/thrown/creators/ThrowableThrownAssertionsDeprecatedImpl" sourcefilename="ThrowableThrownAssertionsDeprecatedImpl.kt"><method name="toBe" desc="(Lch/tutteli/atrium/domain/creating/throwable/thrown/ThrowableThrown$Builder;Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function1;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nothingThrown" desc="(Lch/tutteli/atrium/domain/creating/throwable/thrown/ThrowableThrown$Builder;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ThrowableThrownAssertionsImpl.kt"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="4" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="3"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ThrowableThrownAssertionsDeprecatedImpl.kt"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="16" covered="26"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="2"/></package><package name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/searchbehaviours"><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/searchbehaviours/SearchBehavioursKt" sourcefilename="searchBehaviours.kt"><method name="_containsInAnyOrder" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;)Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;" line="10"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_containsInAnyOrderOnly" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;)Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;" line="15"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_containsInOrder" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;)Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;" line="20"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_containsInOrderOnly" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;)Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;" line="25"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_containsInOrderOnlyGrouped" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;)Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;" line="30"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_containsInOrderOnlyGroupedWithing" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;)Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;" line="35"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/searchbehaviours/InOrderOnlyGroupedWithinSearchBehaviourImpl" sourcefilename="InOrderOnlyGroupedWithinSearchBehaviourImpl.kt"><method name="decorateDescription" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;)Lch/tutteli/atrium/reporting/translating/Translatable;" line="10"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/searchbehaviours/InAnyOrderSearchBehaviourImpl" sourcefilename="InAnyOrderSearchBehaviourImpl.kt"><method name="decorateDescription" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;)Lch/tutteli/atrium/reporting/translating/Translatable;" line="10"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/searchbehaviours/InOrderOnlySearchBehaviourImpl" sourcefilename="InOrderOnlySearchBehaviourImpl.kt"><method name="decorateDescription" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;)Lch/tutteli/atrium/reporting/translating/Translatable;" line="10"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/searchbehaviours/InOrderSearchBehaviourImpl" sourcefilename="InOrderSearchBehaviourImpl.kt"><method name="decorateDescription" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;)Lch/tutteli/atrium/reporting/translating/Translatable;" line="10"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="3"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/searchbehaviours/NotSearchBehaviourImpl" sourcefilename="NotSearchBehaviourImpl.kt"><method name="decorateDescription" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;)Lch/tutteli/atrium/reporting/translating/Translatable;" line="10"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/searchbehaviours/InOrderOnlyGroupedSearchBehaviourImpl" sourcefilename="InOrderOnlyGroupedSearchBehaviourImpl.kt"><method name="decorateDescription" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;)Lch/tutteli/atrium/reporting/translating/Translatable;" line="10"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="3"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/searchbehaviours/InAnyOrderOnlySearchBehaviourImpl" sourcefilename="InAnyOrderOnlySearchBehaviourImpl.kt"><method name="decorateDescription" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;)Lch/tutteli/atrium/reporting/translating/Translatable;" line="10"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/searchbehaviours/NoOpSearchBehaviourImpl" sourcefilename="NoOpSearchBehaviourImpl.kt"><method name="&lt;init&gt;" desc="()V" line="5"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decorateDescription" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;)Lch/tutteli/atrium/reporting/translating/Translatable;" line="5"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="searchBehaviours.kt"><line nr="10" mi="0" ci="11" mb="0" cb="0"/><line nr="15" mi="0" ci="11" mb="0" cb="0"/><line nr="20" mi="0" ci="11" mb="0" cb="0"/><line nr="25" mi="0" ci="11" mb="0" cb="0"/><line nr="30" mi="0" ci="11" mb="0" cb="0"/><line nr="35" mi="0" ci="11" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InAnyOrderOnlySearchBehaviourImpl.kt"><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InOrderOnlyGroupedSearchBehaviourImpl.kt"><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="3"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InOrderSearchBehaviourImpl.kt"><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="3"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NotSearchBehaviourImpl.kt"><line nr="7" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NoOpSearchBehaviourImpl.kt"><line nr="5" mi="4" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InOrderOnlyGroupedWithinSearchBehaviourImpl.kt"><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InAnyOrderSearchBehaviourImpl.kt"><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InOrderOnlySearchBehaviourImpl.kt"><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="29" covered="158"/><counter type="LINE" missed="2" covered="19"/><counter type="COMPLEXITY" missed="3" covered="19"/><counter type="METHOD" missed="3" covered="19"/><counter type="CLASS" missed="0" covered="9"/></package><package name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators"><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InAnyOrderOnlyAssertionCreator$createSizeFeatureAssertion$1" sourcefilename="InAnyOrderOnlyAssertionCreator.kt"><method name="invoke" desc="()Z" line="104"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyEntriesDeprecatedAssertionCreator" sourcefilename="InOrderOnlyEntriesDeprecatedAssertionCreator.kt"><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/searchbehaviours/InOrderOnlySearchBehaviour;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyValueMatcher$entryAssertionCreator$1" sourcefilename="InOrderOnlyValueMatcher.kt"><method name="invoke" desc="(Lkotlin/jvm/functions/Function0;)Lch/tutteli/atrium/assertions/DescriptiveAssertion;" line="16"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyDeprecatedAssertionCreator" sourcefilename="InOrderOnlyDeprecatedAssertionCreator.kt"><method name="createAssertionGroup" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/util/List;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="41"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/searchbehaviours/InOrderOnlySearchBehaviour;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSingleEntryAssertion" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;ILjava/lang/Object;Lch/tutteli/atrium/translations/DescriptionIterableAssertion;)V" line="31"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="27"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InAnyOrderOnlyEntriesDeprecatedAssertionCreator" sourcefilename="InAnyOrderOnlyEntriesDeprecatedAssertionCreator.kt"><method name="createAssertionForSearchCriterionAndRemoveMatchFromList" desc="(Lkotlin/jvm/functions/Function1;Ljava/util/List;)Lkotlin/Pair;" line="36"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeMatch" desc="(Ljava/util/List;Lkotlin/jvm/functions/Function1;)Z" line="43"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/searchbehaviours/InAnyOrderOnlySearchBehaviour;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyGroupedDeprecatedAssertionCreator$createAssertionGroup$1" sourcefilename="InOrderOnlyGroupedDeprecatedAssertionCreator.kt"><method name="invoke" desc="()Lch/tutteli/atrium/assertions/AssertionGroup;" line="31"><counter type="INSTRUCTION" missed="2" covered="47"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="47"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyBaseAssertionCreator$createAssertionGroup$1" sourcefilename="InOrderOnlyBaseAssertionCreator.kt"><method name="invoke" desc="()Lch/tutteli/atrium/assertions/AssertionGroup;" line="24"><counter type="INSTRUCTION" missed="2" covered="49"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="49"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyGroupedDeprecatedAssertionCreator$createSublistAssertion$representationProvider$1" sourcefilename="InOrderOnlyGroupedDeprecatedAssertionCreator.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="67"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/IterableMultiConsumableKt" sourcefilename="iterableMultiConsumable.kt"><method name="turnSubjectToList" desc="(Lch/tutteli/atrium/creating/SubjectProvider;)Lch/tutteli/atrium/creating/SubjectProvider;" line="8"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyDeprecatedMatcher" sourcefilename="InOrderOnlyDeprecatedMatcher.kt"/><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InAnyOrderValuesAssertionCreator" sourcefilename="InAnyOrderValuesAssertionCreator.kt"><method name="getDescriptionContains" desc="()Lch/tutteli/atrium/reporting/translating/Translatable;" line="35"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescriptionNumberOfOccurrences" desc="()Lch/tutteli/atrium/reporting/translating/Translatable;" line="36"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGroupDescription" desc="()Lch/tutteli/atrium/reporting/translating/Translatable;" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAssertionGroupType" desc="()Lch/tutteli/atrium/assertions/AssertionGroupType;" line="40"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeSubjectMultipleTimesConsumable" desc="(Lch/tutteli/atrium/creating/SubjectProvider;)Lch/tutteli/atrium/creating/SubjectProvider;" line="48"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="search" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/lang/Object;)I" line="51"><counter type="INSTRUCTION" missed="2" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decorateAssertion" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Lch/tutteli/atrium/assertions/Assertion;)Ljava/util/List;" line="57"><counter type="INSTRUCTION" missed="2" covered="35"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/searchbehaviours/InAnyOrderSearchBehaviour;Ljava/util/List;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="108"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyDeprecatedAssertionCreator$createAssertionGroup$1" sourcefilename="InOrderOnlyDeprecatedAssertionCreator.kt"><method name="invoke" desc="()Lch/tutteli/atrium/assertions/AssertionGroup;" line="42"><counter type="INSTRUCTION" missed="2" covered="47"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="47"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/CreatorsKt" sourcefilename="creators.kt"><method name="_containsValuesInAnyOrder" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$CheckerOption;Ljava/util/List;)Lch/tutteli/atrium/assertions/Assertion;" line="16"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_containsEntriesInAnyOrder" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$CheckerOption;Ljava/util/List;)Lch/tutteli/atrium/assertions/Assertion;" line="21"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_containsValuesInAnyOrderOnly" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Ljava/util/List;)Lch/tutteli/atrium/assertions/Assertion;" line="28"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_containsEntriesInAnyOrderOnly" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Ljava/util/List;)Lch/tutteli/atrium/assertions/Assertion;" line="36"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_containsValuesInOrderOnly" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Ljava/util/List;)Lch/tutteli/atrium/assertions/Assertion;" line="47"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_containsEntriesInOrderOnly" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Ljava/util/List;)Lch/tutteli/atrium/assertions/Assertion;" line="55"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_containsValuesInOrderOnlyGrouped" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Ljava/util/List;)Lch/tutteli/atrium/assertions/Assertion;" line="63"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_containsEntriesInOrderOnlyGrouped" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Ljava/util/List;)Lch/tutteli/atrium/assertions/Assertion;" line="71"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createAssertionGroupWithoutChecker" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$CheckerOption;Ljava/util/List;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="81"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createAssertionGroup" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$CheckerOption;Ljava/util/List;Lkotlin/jvm/functions/Function2;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="90"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="70" covered="104"/><counter type="LINE" missed="8" covered="11"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="4" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyBaseAssertionCreator" sourcefilename="InOrderOnlyBaseAssertionCreator.kt"><method name="createAssertionGroup" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/util/List;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="23"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$SearchBehaviour;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyGroupedValuesAssertionCreator" sourcefilename="InOrderOnlyGroupedValuesAssertionCreator.kt"><method name="createSublistAssertion" desc="(Lch/tutteli/atrium/creating/Expect;Ljava/util/List;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/searchbehaviours/InOrderOnlyGroupedSearchBehaviour;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InAnyOrderOnlyAssertionCreator" sourcefilename="InAnyOrderOnlyAssertionCreator.kt"><method name="createAssertionGroup" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/util/List;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="41"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createAssertionsForAllSearchCriteria" desc="(Ljava/util/List;Ljava/util/List;Ljava/util/List;)I" line="88"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSizeFeatureAssertion" desc="(Ljava/util/List;I)Ljava/util/List;" line="103"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createExplanatoryGroupForMismatchesEtc" desc="(Ljava/util/List;Lch/tutteli/atrium/translations/DescriptionIterableAssertion;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="116"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/searchbehaviours/InAnyOrderOnlySearchBehaviour;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="138"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyEntriesDeprecatedMatcher" sourcefilename="InOrderOnlyEntriesDeprecatedMatcher.kt"><method name="matches" desc="(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Z" line="14"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="entryAssertionCreator" desc="(Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)Lkotlin/jvm/functions/Function1;" line="20"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSingleEntryAssertion" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;ILkotlin/jvm/functions/Function1;Lch/tutteli/atrium/translations/DescriptionIterableAssertion;)V" line="11"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyDeprecatedMatcher$DefaultImpls" sourcefilename="InOrderOnlyDeprecatedMatcher.kt"><method name="createSingleEntryAssertion" desc="(Lch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyDeprecatedMatcher;Lch/tutteli/atrium/creating/CollectingAssertionPlant;ILjava/lang/Object;Lch/tutteli/atrium/translations/DescriptionIterableAssertion;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyGroupedEntriesDeprecatedAssertionCreator" sourcefilename="InOrderOnlyGroupedEntriesDeprecatedAssertionCreator.kt"><method name="createSublistAssertion" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/util/List;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/searchbehaviours/InOrderOnlyGroupedSearchBehaviour;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyDeprecatedAssertionCreator$createAssertionGroup$1$assertion$1" sourcefilename="InOrderOnlyDeprecatedAssertionCreator.kt"><method name="invoke" desc="()Ljava/util/List;" line="43"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyDeprecatedAssertionCreator$createAssertionGroup$1$assertion$2" sourcefilename="InOrderOnlyDeprecatedAssertionCreator.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InAnyOrderEntriesAssertionCreator" sourcefilename="InAnyOrderEntriesAssertionCreator.kt"><method name="getDescriptionContains" desc="()Lch/tutteli/atrium/reporting/translating/Translatable;" line="48"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeSubjectMultipleTimesConsumable" desc="(Lch/tutteli/atrium/creating/SubjectProvider;)Lch/tutteli/atrium/creating/SubjectProvider;" line="51"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="searchAndCreateAssertion" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="58"><counter type="INSTRUCTION" missed="88" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createExplanatoryAssertionsAndMatchingCount" desc="(Ljava/util/Iterator;Lkotlin/jvm/functions/Function1;)Lkotlin/Pair;" line="84"><counter type="INSTRUCTION" missed="82" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFirstNonNullAndSequence" desc="(Ljava/util/Iterator;Lkotlin/sequences/Sequence;)Lkotlin/Pair;" line="98"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addEmptyAssertionCreatorLambdaIfNecessary" desc="(Ljava/util/List;Lkotlin/jvm/functions/Function1;I)V" line="116"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/searchbehaviours/InAnyOrderSearchBehaviour;Ljava/util/List;)V" line="41"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="265" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="42" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/CreatorsDeprecatedKt" sourcefilename="creatorsDeprecated.kt"><method name="_containsEntriesInAnyOrder" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$CheckerOption;Ljava/util/List;)Lch/tutteli/atrium/assertions/Assertion;" line="18"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_containsEntriesInAnyOrderOnly" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Ljava/util/List;)Lch/tutteli/atrium/assertions/Assertion;" line="24"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_containsEntriesInOrderOnly" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Ljava/util/List;)Lch/tutteli/atrium/assertions/Assertion;" line="36"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_containsEntriesInOrderOnlyGrouped" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Ljava/util/List;)Lch/tutteli/atrium/assertions/Assertion;" line="48"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createAssertionGroupWithoutChecker" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$CheckerOption;Ljava/util/List;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="61"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createAssertionGroup" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$CheckerOption;Ljava/util/List;Lkotlin/jvm/functions/Function2;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="70"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="104"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyEntriesDeprecatedMatcher$entryAssertionCreator$1" sourcefilename="InOrderOnlyEntriesDeprecatedMatcher.kt"><method name="invoke" desc="(Lkotlin/jvm/functions/Function0;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="21"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InAnyOrderOnlyEntriesAssertionCreator" sourcefilename="InAnyOrderOnlyEntriesAssertionCreator.kt"><method name="createAssertionForSearchCriterionAndRemoveMatchFromList" desc="(Lkotlin/jvm/functions/Function1;Ljava/util/List;)Lkotlin/Pair;" line="33"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeMatch" desc="(Ljava/util/List;Lkotlin/jvm/functions/Function1;)Z" line="39"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/searchbehaviours/InAnyOrderOnlySearchBehaviour;)V" line="25"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyGroupedEntriesAssertionCreator" sourcefilename="InOrderOnlyGroupedEntriesAssertionCreator.kt"><method name="createSublistAssertion" desc="(Lch/tutteli/atrium/creating/Expect;Ljava/util/List;)V" line="16"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/searchbehaviours/InOrderOnlyGroupedSearchBehaviour;)V" line="10"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InAnyOrderOnlyAssertionCreator$createAssertionGroup$1" sourcefilename="InAnyOrderOnlyAssertionCreator.kt"><method name="invoke" desc="()Lch/tutteli/atrium/assertions/AssertionGroup;" line="42"><counter type="INSTRUCTION" missed="7" covered="147"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="147"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InAnyOrderOnlyAssertionCreator$createAssertionGroup$1$1" sourcefilename="InAnyOrderOnlyAssertionCreator.kt"><method name="invoke" desc="()Lch/tutteli/atrium/assertions/AssertionGroup;" line="50"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyGroupedDeprecatedAssertionCreator$createSublistAssertion$sizeExceededProvider$1" sourcefilename="InOrderOnlyGroupedDeprecatedAssertionCreator.kt"><method name="invoke" desc="()Lch/tutteli/atrium/reporting/RawString;" line="66"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyGroupedDeprecatedAssertionCreator$createSublistAssertion$1" sourcefilename="InOrderOnlyGroupedDeprecatedAssertionCreator.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/AssertionPlant;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyMatcher" sourcefilename="InOrderOnlyMatcher.kt"/><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InAnyOrderEntriesDeprecatedAssertionCreator" sourcefilename="InAnyOrderEntriesDeprecatedAssertionCreator.kt"><method name="getDescriptionContains" desc="()Lch/tutteli/atrium/reporting/translating/Translatable;" line="48"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeSubjectMultipleTimesConsumable" desc="(Lch/tutteli/atrium/creating/SubjectProvider;)Lch/tutteli/atrium/creating/SubjectProvider;" line="51"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="searchAndCreateAssertion" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="58"><counter type="INSTRUCTION" missed="2" covered="89"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createExplanatoryAssertionsAndMatchingCount" desc="(Ljava/util/Iterator;Lkotlin/jvm/functions/Function1;)Lkotlin/Pair;" line="89"><counter type="INSTRUCTION" missed="6" covered="52"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFirstNonNullAndSequence" desc="(Ljava/util/Iterator;Lkotlin/sequences/Sequence;)Lkotlin/Pair;" line="104"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/searchbehaviours/InAnyOrderSearchBehaviour;Ljava/util/List;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="205"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="39"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyGroupedDeprecatedAssertionCreator$createSublistAssertion$subListProvider$1" sourcefilename="InOrderOnlyGroupedDeprecatedAssertionCreator.kt"><method name="invoke" desc="()Ljava/util/List;" line="63"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InAnyOrderOnlyValuesAssertionCreator$createAssertionForSearchCriterionAndRemoveMatchFromList$1" sourcefilename="InAnyOrderOnlyValuesAssertionCreator.kt"><method name="invoke" desc="()Z" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyGroupedDeprecatedAssertionCreator" sourcefilename="InOrderOnlyGroupedDeprecatedAssertionCreator.kt"><method name="createAssertionGroup" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Ljava/util/List;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="30"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSublistAssertion" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;IILjava/util/List;Ljava/util/List;)V" line="62"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/searchbehaviours/InOrderOnlyGroupedSearchBehaviour;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSingleEntryAssertion" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;ILjava/lang/Object;Lch/tutteli/atrium/translations/DescriptionIterableAssertion;)V" line="21"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="74"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyEntriesAssertionCreator" sourcefilename="InOrderOnlyEntriesAssertionCreator.kt"><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/searchbehaviours/InOrderOnlySearchBehaviour;)V" line="21"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyBaseAssertionCreator$createAssertionGroup$1$assertion$1" sourcefilename="InOrderOnlyBaseAssertionCreator.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/Expect;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyGroupedDeprecatedAssertionCreator$createAssertionGroup$1$assertion$1" sourcefilename="InOrderOnlyGroupedDeprecatedAssertionCreator.kt"><method name="invoke" desc="()Ljava/util/List;" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyGroupedDeprecatedAssertionCreator$createAssertionGroup$1$assertion$2" sourcefilename="InOrderOnlyGroupedDeprecatedAssertionCreator.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyGroupedAssertionCreator" sourcefilename="InOrderOnlyGroupedAssertionCreator.kt"><method name="createAssertionsAndReturnIndex" desc="(Lch/tutteli/atrium/creating/Expect;Ljava/util/List;)I" line="21"><counter type="INSTRUCTION" missed="2" covered="56"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSublistAssertion" desc="(Lch/tutteli/atrium/creating/Expect;IILjava/util/List;Ljava/util/List;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/searchbehaviours/InOrderOnlyGroupedSearchBehaviour;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSingleEntryAssertion" desc="(Lch/tutteli/atrium/creating/Expect;ILjava/lang/Object;Lch/tutteli/atrium/translations/DescriptionIterableAssertion;)V" line="12"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="106"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyGroupedAssertionCreator$createSublistAssertion$2" sourcefilename="InOrderOnlyGroupedAssertionCreator.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/Expect;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyGroupedAssertionCreator$createSublistAssertion$1" sourcefilename="InOrderOnlyGroupedAssertionCreator.kt"><method name="invoke" desc="(Ljava/util/List;)Lch/tutteli/atrium/core/Option;" line="47"><counter type="INSTRUCTION" missed="3" covered="43"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="43"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/IterableMultiConsumableKt$turnSubjectToList$2$1" sourcefilename="iterableMultiConsumable.kt"><method name="invoke" desc="(Ljava/lang/Iterable;)Ljava/util/List;" line="26"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyAssertionCreator" sourcefilename="InOrderOnlyAssertionCreator.kt"><method name="createAssertionsAndReturnIndex" desc="(Lch/tutteli/atrium/creating/Expect;Ljava/util/List;)I" line="31"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/searchbehaviours/InOrderOnlySearchBehaviour;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSingleEntryAssertion" desc="(Lch/tutteli/atrium/creating/Expect;ILjava/lang/Object;Lch/tutteli/atrium/translations/DescriptionIterableAssertion;)V" line="24"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="37"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyEntriesMatcher" sourcefilename="InOrderOnlyEntriesMatcher.kt"><method name="matches" desc="(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Z" line="14"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="entryAssertionCreator" desc="(Lch/tutteli/atrium/core/Option;Lkotlin/jvm/functions/Function1;)Lkotlin/jvm/functions/Function1;" line="20"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createSingleEntryAssertion" desc="(Lch/tutteli/atrium/creating/Expect;ILkotlin/jvm/functions/Function1;Lch/tutteli/atrium/translations/DescriptionIterableAssertion;)V" line="11"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyEntriesMatcher$entryAssertionCreator$1" sourcefilename="InOrderOnlyEntriesMatcher.kt"><method name="invoke" desc="(Lkotlin/jvm/functions/Function0;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="21"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyMatcher$DefaultImpls" sourcefilename="InOrderOnlyMatcher.kt"><method name="createSingleEntryAssertion" desc="(Lch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyMatcher;Lch/tutteli/atrium/creating/Expect;ILjava/lang/Object;Lch/tutteli/atrium/translations/DescriptionIterableAssertion;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyValueMatcher" sourcefilename="InOrderOnlyValueMatcher.kt"><method name="matches" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="10"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="entryAssertionCreator" desc="(Lch/tutteli/atrium/core/Option;Ljava/lang/Object;)Lkotlin/jvm/functions/Function1;" line="15"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSingleEntryAssertion" desc="(Lch/tutteli/atrium/creating/Expect;ILjava/lang/Object;Lch/tutteli/atrium/translations/DescriptionIterableAssertion;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InOrderOnlyValuesAssertionCreator" sourcefilename="InOrderOnlyValuesAssertionCreator.kt"><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/searchbehaviours/InOrderOnlySearchBehaviour;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/creators/InAnyOrderOnlyValuesAssertionCreator" sourcefilename="InAnyOrderOnlyValuesAssertionCreator.kt"><method name="createAssertionForSearchCriterionAndRemoveMatchFromList" desc="(Ljava/lang/Object;Ljava/util/List;)Lkotlin/Pair;" line="30"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/searchbehaviours/InAnyOrderOnlySearchBehaviour;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="InOrderOnlyEntriesDeprecatedAssertionCreator.kt"><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InOrderOnlyValueMatcher.kt"><line nr="8" mi="0" ci="10" mb="0" cb="0"/><line nr="10" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="5" mb="0" cb="0"/><line nr="16" mi="0" ci="11" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="InOrderOnlyValuesAssertionCreator.kt"><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InOrderOnlyGroupedEntriesDeprecatedAssertionCreator.kt"><line nr="13" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="5" mb="0" cb="0"/><line nr="19" mi="0" ci="5" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="11" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InOrderOnlyAssertionCreator.kt"><line nr="24" mi="7" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="37"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InOrderOnlyMatcher.kt"><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="11" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InOrderOnlyGroupedValuesAssertionCreator.kt"><line nr="10" mi="0" ci="1" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="5" mb="0" cb="0"/><line nr="16" mi="0" ci="5" mb="0" cb="0"/><line nr="17" mi="0" ci="14" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InOrderOnlyEntriesDeprecatedMatcher.kt"><line nr="11" mi="0" ci="10" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="0"/><line nr="21" mi="0" ci="14" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="InAnyOrderOnlyAssertionCreator.kt"><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="12" mb="0" cb="0"/><line nr="42" mi="7" ci="10" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="7" mb="0" cb="0"/><line nr="46" mi="0" ci="8" mb="0" cb="0"/><line nr="47" mi="0" ci="7" mb="0" cb="0"/><line nr="48" mi="0" ci="14" mb="0" cb="6"/><line nr="49" mi="0" ci="12" mb="0" cb="0"/><line nr="50" mi="0" ci="8" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="11" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="14" mb="0" cb="6"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="2"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="14" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="2"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="11" mb="0" cb="0"/><line nr="104" mi="0" ci="17" mb="0" cb="2"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="19" mb="0" cb="0"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="303"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="53"/><counter type="COMPLEXITY" missed="0" covered="17"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="iterableMultiConsumable.kt"><line nr="8" mi="0" ci="5" mb="0" cb="0"/><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="2"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="13" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="InAnyOrderEntriesAssertionCreator.kt"><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="48" mi="8" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="9" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="7" ci="0" mb="0" cb="0"/><line nr="61" mi="7" ci="0" mb="0" cb="0"/><line nr="63" mi="7" ci="0" mb="0" cb="0"/><line nr="64" mi="14" ci="0" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="2" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="6" ci="0" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="13" ci="0" mb="4" cb="0"/><line nr="87" mi="7" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="30" ci="0" mb="2" cb="0"/><line nr="93" mi="22" ci="0" mb="4" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="4" ci="0" mb="2" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="2" cb="0"/><line nr="101" mi="15" ci="0" mb="0" cb="0"/><line nr="103" mi="12" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="4" ci="0" mb="4" cb="0"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="2" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="4" ci="0" mb="0" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="265" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="42" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="InOrderOnlyGroupedDeprecatedAssertionCreator.kt"><line nr="21" mi="7" ci="6" mb="0" cb="0"/><line nr="30" mi="0" ci="12" mb="0" cb="0"/><line nr="31" mi="2" ci="9" mb="0" cb="0"/><line nr="32" mi="0" ci="20" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="7" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="2"/><line nr="39" mi="0" ci="11" mb="0" cb="0"/><line nr="41" mi="0" ci="10" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="17" mb="0" cb="2"/><line nr="46" mi="0" ci="9" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="8" mb="0" cb="0"/><line nr="63" mi="0" ci="13" mb="0" cb="2"/><line nr="64" mi="0" ci="7" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="5" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="24" mb="0" cb="0"/><line nr="68" mi="0" ci="12" mb="0" cb="0"/><line nr="69" mi="0" ci="13" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="245"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="32"/><counter type="COMPLEXITY" missed="2" covered="12"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="1" covered="7"/></sourcefile><sourcefile name="creatorsDeprecated.kt"><line nr="18" mi="0" ci="7" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="8" mb="0" cb="0"/><line nr="62" mi="0" ci="8" mb="0" cb="0"/><line nr="70" mi="0" ci="10" mb="0" cb="0"/><line nr="71" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="104"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InAnyOrderOnlyEntriesAssertionCreator.kt"><line nr="25" mi="1" ci="0" mb="0" cb="0"/><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="4" ci="0" mb="0" cb="0"/><line nr="34" mi="5" ci="0" mb="0" cb="0"/><line nr="35" mi="7" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="4" ci="0" mb="2" cb="0"/><line nr="41" mi="5" ci="0" mb="2" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="InOrderOnlyDeprecatedAssertionCreator.kt"><line nr="31" mi="7" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="12" mb="0" cb="0"/><line nr="42" mi="2" ci="9" mb="0" cb="0"/><line nr="43" mi="0" ci="20" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="7" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="17" mb="0" cb="2"/><line nr="55" mi="0" ci="9" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="132"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="InOrderOnlyEntriesMatcher.kt"><line nr="11" mi="10" ci="0" mb="0" cb="0"/><line nr="14" mi="4" ci="0" mb="0" cb="0"/><line nr="20" mi="10" ci="0" mb="0" cb="0"/><line nr="21" mi="14" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="InOrderOnlyBaseAssertionCreator.kt"><line nr="15" mi="0" ci="6" mb="0" cb="0"/><line nr="23" mi="0" ci="12" mb="0" cb="0"/><line nr="24" mi="2" ci="9" mb="0" cb="0"/><line nr="25" mi="0" ci="20" mb="0" cb="0"/><line nr="26" mi="0" ci="9" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="8" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="9" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="7" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="113"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="InOrderOnlyGroupedAssertionCreator.kt"><line nr="12" mi="7" ci="1" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="2"/><line nr="26" mi="0" ci="9" mb="0" cb="0"/><line nr="28" mi="2" ci="16" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="12" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="8" mb="0" cb="0"/><line nr="47" mi="1" ci="12" mb="1" cb="1"/><line nr="48" mi="0" ci="13" mb="0" cb="2"/><line nr="49" mi="2" ci="14" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="8" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="159"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="creators.kt"><line nr="16" mi="0" ci="7" mb="0" cb="0"/><line nr="21" mi="7" ci="0" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="8" mb="0" cb="0"/><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="8" mb="0" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="56" mi="8" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="8" mb="0" cb="0"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="8" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="8" mb="0" cb="0"/><line nr="82" mi="0" ci="8" mb="0" cb="0"/><line nr="90" mi="0" ci="10" mb="0" cb="0"/><line nr="91" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="70" covered="104"/><counter type="LINE" missed="8" covered="11"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="4" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InAnyOrderEntriesDeprecatedAssertionCreator.kt"><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="8" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="2" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="12" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="7" mb="0" cb="0"/><line nr="69" mi="0" ci="12" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="2"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="2"/><line nr="90" mi="0" ci="14" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="6" ci="16" mb="1" cb="3"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="2"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="2"/><line nr="107" mi="0" ci="15" mb="0" cb="0"/><line nr="109" mi="0" ci="12" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="205"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="39"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InOrderOnlyEntriesAssertionCreator.kt"><line nr="21" mi="1" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="InAnyOrderValuesAssertionCreator.kt"><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="7" mb="0" cb="0"/><line nr="36" mi="0" ci="7" mb="0" cb="0"/><line nr="37" mi="0" ci="8" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="2"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="2" ci="21" mb="0" cb="2"/><line nr="57" mi="0" ci="5" mb="0" cb="2"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="2" ci="13" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="108"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InAnyOrderOnlyValuesAssertionCreator.kt"><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="21" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="InOrderOnlyGroupedEntriesAssertionCreator.kt"><line nr="10" mi="1" ci="0" mb="0" cb="0"/><line nr="12" mi="3" ci="0" mb="0" cb="0"/><line nr="13" mi="5" ci="0" mb="0" cb="0"/><line nr="16" mi="5" ci="0" mb="0" cb="0"/><line nr="17" mi="14" ci="0" mb="0" cb="0"/><line nr="18" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="InAnyOrderOnlyEntriesDeprecatedAssertionCreator.kt"><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="7" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="2"/><line nr="46" mi="0" ci="6" mb="0" cb="2"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InOrderOnlyDeprecatedMatcher.kt"><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="11" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="566" covered="1872"/><counter type="BRANCH" missed="28" covered="54"/><counter type="LINE" missed="74" covered="309"/><counter type="COMPLEXITY" missed="42" covered="111"/><counter type="METHOD" missed="27" covered="85"/><counter type="CLASS" missed="7" covered="41"/></package><package name="ch/tutteli/atrium/domain/robstoll/lib/creating/basic/contains/checkers"><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/basic/contains/checkers/ContainsChecker" sourcefilename="ContainsChecker.kt"><method name="createDescriptiveAssertion" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Lkotlin/jvm/functions/Function0;)Lch/tutteli/atrium/assertions/DescriptiveAssertion;" line="49"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTimes" desc="()I" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/String;Lkotlin/jvm/functions/Function1;)V" line="29"><counter type="INSTRUCTION" missed="0" covered="85"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="107"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ContainsChecker.kt"><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="39" mb="0" cb="4"/><line nr="36" mi="0" ci="34" mb="0" cb="4"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="13" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="107"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="107"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></package><package name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains"><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/DeprecatedContainsHelperFunKt" sourcefilename="deprecatedContainsHelperFun.kt"><method name="createExplanatoryAssertions" desc="(Lkotlin/jvm/functions/Function1;Ljava/util/List;)Ljava/util/List;" line="25"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collectIterableAssertionsForExplanationWithFirst" desc="(Lkotlin/jvm/functions/Function1;Ljava/lang/Object;)Ljava/util/List;" line="39"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collectIterableAssertionsForExplanation" desc="(Lkotlin/jvm/functions/Function1;Lch/tutteli/atrium/creating/MaybeSubject;)Ljava/util/List;" line="55"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collectIterableAssertionsForExplanation" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Lkotlin/jvm/functions/Function1;Lch/tutteli/atrium/creating/MaybeSubject;)Ljava/util/List;" line="61"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allCreatedAssertionsHold" desc="(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Z" line="72"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createEntryAssertionTemplate" desc="(Lkotlin/jvm/functions/Function0;ILjava/lang/Object;Lch/tutteli/atrium/translations/DescriptionIterableAssertion;Lkotlin/jvm/functions/Function2;)Lkotlin/jvm/functions/Function1;" line="93"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createEntryAssertion" desc="(Ljava/util/List;Z)Lch/tutteli/atrium/assertions/AssertionGroup;" line="112"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="146"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="16"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/DeprecatedContainsHelperFunKt$allCreatedAssertionsHold$1" sourcefilename="deprecatedContainsHelperFun.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="78"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/ContainsHelperFunKt$createSizeFeatureAssertionForInOrderOnly$1" sourcefilename="containsHelperFun.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/Expect;)V" line="94"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/ContainsHelperFunKt$createSizeFeatureAssertionForInOrderOnly$1$2" sourcefilename="containsHelperFun.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/Expect;)V" line="95"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/ContainsHelperFunKt$createExplanatoryAssertionGroup$1$1" sourcefilename="containsHelperFun.kt"><method name="invoke" desc="(Ljava/lang/Object;)Lch/tutteli/atrium/core/Some;" line="25"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/ContainsHelperFunKt$createSizeFeatureAssertionForInOrderOnly$1$2$1" sourcefilename="containsHelperFun.kt"><method name="invoke" desc="()Lch/tutteli/atrium/assertions/AssertionGroup;" line="98"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/ContainsHelperFunKt$createEntryAssertionTemplate$1" sourcefilename="containsHelperFun.kt"><method name="invoke" desc="(Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="73"><counter type="INSTRUCTION" missed="2" covered="76"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="76"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/DeprecatedContainsHelperFunKt$createEntryAssertionTemplate$1$3" sourcefilename="deprecatedContainsHelperFun.kt"><method name="invoke" desc="()Z" line="104"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/ContainsHelperFunKt" sourcefilename="containsHelperFun.kt"><method name="createExplanatoryAssertionGroup" desc="(Lkotlin/jvm/functions/Function1;Ljava/util/List;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="24"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createExplanatoryAssertionGroup" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="32"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createEntryAssertion" desc="(Lch/tutteli/atrium/assertions/AssertionGroup;Z)Lch/tutteli/atrium/assertions/AssertionGroup;" line="49"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allCreatedAssertionsHold" desc="(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Z" line="60"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createEntryAssertionTemplate" desc="(Lch/tutteli/atrium/core/Option;ILjava/lang/Object;Lch/tutteli/atrium/translations/DescriptionIterableAssertion;Lkotlin/jvm/functions/Function2;)Lkotlin/jvm/functions/Function1;" line="72"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSizeFeatureAssertionForInOrderOnly" desc="(ILjava/util/List;Ljava/util/Iterator;)Lch/tutteli/atrium/assertions/Assertion;" line="93"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createHasElementAssertion" desc="(Ljava/util/Iterator;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="122"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="106" covered="106"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="15" covered="13"/><counter type="COMPLEXITY" missed="9" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/DeprecatedContainsHelperFunKt$createEntryAssertionTemplate$1" sourcefilename="deprecatedContainsHelperFun.kt"><method name="invoke" desc="(Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/AssertionGroup;" line="94"><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/ContainsHelperFunKt$createSizeFeatureAssertionForInOrderOnly$1$2$1$additionalEntries$1" sourcefilename="containsHelperFun.kt"><method name="invoke" desc="(ILjava/lang/Object;)Lch/tutteli/atrium/assertions/DescriptiveAssertion;" line="99"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/ContainsHelperFunKt$createEntryAssertionTemplate$1$3" sourcefilename="containsHelperFun.kt"><method name="invoke" desc="()Z" line="83"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/iterable/contains/ContainsHelperFunKt$createHasElementAssertion$1" sourcefilename="containsHelperFun.kt"><method name="invoke" desc="()Z" line="126"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="containsHelperFun.kt"><line nr="24" mi="2" ci="0" mb="0" cb="0"/><line nr="25" mi="28" ci="0" mb="2" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="4" ci="0" mb="0" cb="0"/><line nr="34" mi="9" ci="0" mb="0" cb="0"/><line nr="35" mi="2" ci="0" mb="2" cb="0"/><line nr="36" mi="8" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="12" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="2" cb="0"/><line nr="61" mi="6" ci="0" mb="2" cb="0"/><line nr="62" mi="19" ci="0" mb="4" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="10" mb="0" cb="0"/><line nr="73" mi="2" ci="7" mb="0" cb="0"/><line nr="74" mi="0" ci="13" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="10" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="10" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="12" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="20" mb="0" cb="0"/><line nr="94" mi="0" ci="9" mb="0" cb="0"/><line nr="95" mi="0" ci="7" mb="0" cb="0"/><line nr="96" mi="0" ci="8" mb="0" cb="2"/><line nr="97" mi="0" ci="12" mb="0" cb="0"/><line nr="98" mi="0" ci="11" mb="0" cb="0"/><line nr="99" mi="0" ci="14" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="8" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="21" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="116" covered="291"/><counter type="BRANCH" missed="12" covered="2"/><counter type="LINE" missed="15" covered="41"/><counter type="COMPLEXITY" missed="10" covered="12"/><counter type="METHOD" missed="4" covered="11"/><counter type="CLASS" missed="1" covered="8"/></sourcefile><sourcefile name="deprecatedContainsHelperFun.kt"><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="12" mb="0" cb="4"/><line nr="27" mi="0" ci="17" mb="0" cb="4"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="2"/><line nr="40" mi="0" ci="8" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="2"/><line nr="73" mi="0" ci="6" mb="0" cb="2"/><line nr="75" mi="0" ci="7" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="4"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="10" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="13" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="18" mb="0" cb="2"/><line nr="99" mi="0" ci="9" mb="0" cb="0"/><line nr="101" mi="0" ci="10" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="12" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="237"/><counter type="BRANCH" missed="0" covered="20"/><counter type="LINE" missed="0" covered="37"/><counter type="COMPLEXITY" missed="0" covered="20"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><counter type="INSTRUCTION" missed="116" covered="528"/><counter type="BRANCH" missed="12" covered="22"/><counter type="LINE" missed="15" covered="78"/><counter type="COMPLEXITY" missed="10" covered="32"/><counter type="METHOD" missed="4" covered="21"/><counter type="CLASS" missed="1" covered="12"/></package><package name="ch/tutteli/atrium/api/cc/infix/en_GB"><class name="ch/tutteli/atrium/api/cc/infix/en_GB/Key" sourcefilename="parameterObjects.kt"><method name="getKey" desc="()Ljava/lang/Object;" line="65"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/IterableContainsSearchBehavioursKt" sourcefilename="iterableContainsSearchBehaviours.kt"><method name="inAny" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Lch/tutteli/atrium/api/cc/infix/en_GB/keywords/order;)Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;" line="21"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="but" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Lch/tutteli/atrium/api/cc/infix/en_GB/keywords/only;)Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;" line="30"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inGiven" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Lch/tutteli/atrium/api/cc/infix/en_GB/keywords/order;)Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;" line="42"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="and" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Lch/tutteli/atrium/api/cc/infix/en_GB/keywords/only;)Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;" line="51"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="grouped" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Lch/tutteli/atrium/api/cc/infix/en_GB/keywords/entries;)Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;" line="60"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="within" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Lch/tutteli/atrium/api/cc/infix/en_GB/keywords/group;)Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;" line="69"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="102"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/FeatureAssertionsKt$returnValueOf$$inlined$safeReturnValueOf5$2" sourcefilename="FeatureAssertionsBuilder.kt"><method name="invoke" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="315"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/FeatureAssertionsKt$returnValueOf$$inlined$safeReturnValueOf5$1" sourcefilename="FeatureAssertionsBuilder.kt"><method name="invoke" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="301"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/MapEntryAssertionsKt" sourcefilename="mapEntryAssertions.kt"><method name="isKeyValue" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/Pair;)Lch/tutteli/atrium/creating/AssertionPlant;" line="24"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKey" desc="(Lch/tutteli/atrium/creating/AssertionPlant;)Lch/tutteli/atrium/creating/AssertionPlant;" line="35"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKey" desc="(Lch/tutteli/atrium/creating/AssertionPlant;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="46"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="key" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="59"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="(Lch/tutteli/atrium/creating/AssertionPlant;)Lch/tutteli/atrium/creating/AssertionPlant;" line="71"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="(Lch/tutteli/atrium/creating/AssertionPlant;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="82"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="95"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="97"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/FeatureAssertionsKt$returnValueOf$$inlined$safeReturnValueOf5$3" sourcefilename="FeatureAssertionsBuilder.kt"><method name="invoke" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="330"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/FeatureAssertionsKt$returnValueOf$$inlined$safeReturnValueOf4$1" sourcefilename="FeatureAssertionsBuilder.kt"><method name="invoke" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="255"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/FeatureAssertionsKt$returnValueOf$$inlined$safeReturnValueOf4$3" sourcefilename="FeatureAssertionsBuilder.kt"><method name="invoke" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="284"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/FeatureAssertionsKt$returnValueOf$$inlined$safeReturnValueOf4$2" sourcefilename="FeatureAssertionsBuilder.kt"><method name="invoke" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="269"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/NullableEntries" sourcefilename="deprecatedParameterObjects.kt"><method name="toList" desc="()Ljava/util/List;" line="32"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAssertionCreatorOrNull" desc="()Lkotlin/jvm/functions/Function1;" line="29"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOtherAssertionCreatorsOrNulls" desc="()[Lkotlin/jvm/functions/Function1;" line="30"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;[Lkotlin/jvm/functions/Function1;)V" line="28"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/IterableContainsInOrderOnlyGroupedCreatorsKt"><method name="inAnyOrderNullableValues" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Lch/tutteli/atrium/api/cc/infix/en_GB/Order;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inAnyOrderNullableEntries" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Lch/tutteli/atrium/api/cc/infix/en_GB/Order;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inAny" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Lch/tutteli/atrium/api/cc/infix/en_GB/Order;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inAnyOrderEntries" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Lch/tutteli/atrium/api/cc/infix/en_GB/Order;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/Pairs" sourcefilename="parameterObjects.kt"><method name="getExpected" desc="()Lkotlin/Pair;" line="93"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOtherExpected" desc="()[Lkotlin/Pair;" line="94"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lkotlin/Pair;[Lkotlin/Pair;)V" line="92"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMapArguments" desc="()Lch/tutteli/atrium/domain/builders/utils/ArgumentMapperBuilder;" line="92"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toList" desc="()Ljava/util/List;" line="92"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/IterableAssertionsKt"><method name="all" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="all" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/NullableEntry;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="any" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="any" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/NullableEntry;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/Entries;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/NullableEntries;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/NullableEntry;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/NullableValue;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/NullableValues;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/Values;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsExactly" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsExactly" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsExactly" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/Entries;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsExactly" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/Values;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsNot" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsNot" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/Values;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsStrictly" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsStrictly" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/Entries;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsStrictly" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/NullableEntries;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsStrictly" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/NullableEntry;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsStrictly" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/NullableValue;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsStrictly" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/NullableValues;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsStrictly" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/Values;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsStrictly" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="none" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="none" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/NullableEntry;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notTo" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/keywords/contain;)Lch/tutteli/atrium/api/cc/infix/en_GB/creating/iterable/contains/builders/NotCheckerOption;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="to" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/keywords/contain;)Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="60" covered="60"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="15" covered="15"/><counter type="METHOD" missed="15" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/MapAssertionsKt$asEntries$1" sourcefilename="mapAssertions.kt"><method name="invoke" desc="(Ljava/util/Map;)Ljava/util/Set;" line="214"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/BigDecimalAssertionsKt" sourcefilename="bigDecimalAssertions.kt"><method name="toBe" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/math/BigDecimal;)Ljava/lang/Void;" line="18"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notToBe" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/math/BigDecimal;)Ljava/lang/Void;" line="27"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notToBeNullBut" desc="(Lch/tutteli/atrium/creating/AssertionPlantNullable;Ljava/math/BigDecimal;)Ljava/lang/Void;" line="36"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNumericallyEqualTo" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/math/BigDecimal;)Lch/tutteli/atrium/creating/AssertionPlant;" line="56"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNotNumericallyEqualTo" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/math/BigDecimal;)Lch/tutteli/atrium/creating/AssertionPlant;" line="73"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEqualIncludingScale" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/math/BigDecimal;)Lch/tutteli/atrium/creating/AssertionPlant;" line="89"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNotEqualIncludingScale" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/math/BigDecimal;)Lch/tutteli/atrium/creating/AssertionPlant;" line="104"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="98"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/Index" sourcefilename="parameterObjects.kt"><method name="getIndex" desc="()I" line="60"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="60"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/IterableContainsInOrderOnlyCreatorsKt"><method name="entry" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullableEntry" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullableValue" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="the" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Lch/tutteli/atrium/api/cc/infix/en_GB/NullableValues;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="the" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Lch/tutteli/atrium/api/cc/infix/en_GB/Values;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="the" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Lch/tutteli/atrium/api/cc/infix/en_GB/Entries;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="the" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Lch/tutteli/atrium/api/cc/infix/en_GB/NullableEntries;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="value" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/IterableContainsInAnyOrderOnlyCreatorsKt"><method name="addAssertion" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Lch/tutteli/atrium/assertions/Assertion;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="entry" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullableEntry" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullableValue" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="the" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Lch/tutteli/atrium/api/cc/infix/en_GB/NullableValues;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="the" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Lch/tutteli/atrium/api/cc/infix/en_GB/Values;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="the" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Lch/tutteli/atrium/api/cc/infix/en_GB/Entries;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="the" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Lch/tutteli/atrium/api/cc/infix/en_GB/NullableEntries;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="value" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="4" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/Order" sourcefilename="parameterObjects.kt"><method name="getFirstGroup" desc="()Lch/tutteli/atrium/domain/builders/utils/Group;" line="84"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSecondGroup" desc="()Lch/tutteli/atrium/domain/builders/utils/Group;" line="85"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOtherExpectedGroups" desc="()[Lch/tutteli/atrium/domain/builders/utils/Group;" line="86"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/domain/builders/utils/Group;Lch/tutteli/atrium/domain/builders/utils/Group;[Lch/tutteli/atrium/domain/builders/utils/Group;)V" line="83"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/FeatureAssertionsKt$returnValueOf$$inlined$safeReturnValueOf1$3" sourcefilename="FeatureAssertionsBuilder.kt"><method name="invoke" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="146"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/Entry" sourcefilename="parameterObjects.kt"><method name="toList" desc="()Ljava/util/List;" line="31"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAssertionCreatorOrNull" desc="()Lkotlin/jvm/functions/Function1;" line="29"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="10"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/FeatureAssertionsKt$returnValueOf$$inlined$safeReturnValueOf1$2" sourcefilename="FeatureAssertionsBuilder.kt"><method name="invoke" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="131"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/IterableContainsCheckersKt" sourcefilename="iterableContainsCheckers.kt"><method name="atLeast" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;I)Lch/tutteli/atrium/api/cc/infix/en_GB/creating/iterable/contains/builders/AtLeastCheckerOption;" line="21"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="butAtMost" desc="(Lch/tutteli/atrium/api/cc/infix/en_GB/creating/iterable/contains/builders/AtLeastCheckerOption;I)Lch/tutteli/atrium/api/cc/infix/en_GB/creating/iterable/contains/builders/ButAtMostCheckerOption;" line="39"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exactly" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;I)Lch/tutteli/atrium/api/cc/infix/en_GB/creating/iterable/contains/builders/ExactlyCheckerOption;" line="53"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="atMost" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;I)Lch/tutteli/atrium/api/cc/infix/en_GB/creating/iterable/contains/builders/AtMostCheckerOption;" line="72"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notOrAtMost" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$Builder;I)Lch/tutteli/atrium/api/cc/infix/en_GB/creating/iterable/contains/builders/NotOrAtMostCheckerOption;" line="86"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/FeatureAssertionsKt$returnValueOf$$inlined$safeReturnValueOf1$1" sourcefilename="FeatureAssertionsBuilder.kt"><method name="invoke" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="117"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/SequenceAssertionsKt$asIterable$1" sourcefilename="sequenceAssertions.kt"><method name="invoke" desc="(Lkotlin/sequences/Sequence;)Ljava/lang/Iterable;" line="18"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/CharSequenceContainsCheckersKt" sourcefilename="charSequenceContainsCheckers.kt"><method name="atLeast" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$Builder;I)Lch/tutteli/atrium/api/cc/infix/en_GB/creating/charsequence/contains/builders/AtLeastCheckerOption;" line="21"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="butAtMost" desc="(Lch/tutteli/atrium/api/cc/infix/en_GB/creating/charsequence/contains/builders/AtLeastCheckerOption;I)Lch/tutteli/atrium/api/cc/infix/en_GB/creating/charsequence/contains/builders/ButAtMostCheckerOption;" line="39"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exactly" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$Builder;I)Lch/tutteli/atrium/api/cc/infix/en_GB/creating/charsequence/contains/builders/ExactlyCheckerOption;" line="53"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="atMost" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$Builder;I)Lch/tutteli/atrium/api/cc/infix/en_GB/creating/charsequence/contains/builders/AtMostCheckerOption;" line="72"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notOrAtMost" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$Builder;I)Lch/tutteli/atrium/api/cc/infix/en_GB/creating/charsequence/contains/builders/NotOrAtMostCheckerOption;" line="86"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/CharSequenceContainsCreatorsKt" sourcefilename="charSequenceContainsCreators.kt"><method name="value" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$CheckerOption;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="31"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="the" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$CheckerOption;Lch/tutteli/atrium/api/cc/infix/en_GB/Values;)Lch/tutteli/atrium/creating/AssertionPlant;" line="58"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueIgnoringCase" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$CheckerOption;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="80"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valuesIgnoringCase" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$CheckerOption;Lch/tutteli/atrium/api/cc/infix/en_GB/Values;)Lch/tutteli/atrium/creating/AssertionPlant;" line="108"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$Builder;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="128"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="the" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$Builder;Lch/tutteli/atrium/api/cc/infix/en_GB/Values;)Lch/tutteli/atrium/creating/AssertionPlant;" line="155"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="regex" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$CheckerOption;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlant;" line="169"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="the" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$CheckerOption;Lch/tutteli/atrium/api/cc/infix/en_GB/RegexPatterns;)Lch/tutteli/atrium/creating/AssertionPlant;" line="193"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="regexIgnoringCase" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$CheckerOption;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlant;" line="209"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="regexIgnoringCase" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$CheckerOption;Lch/tutteli/atrium/api/cc/infix/en_GB/RegexPatterns;)Lch/tutteli/atrium/creating/AssertionPlant;" line="234"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="regex" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$Builder;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlant;" line="248"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="the" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$Builder;Lch/tutteli/atrium/api/cc/infix/en_GB/RegexPatterns;)Lch/tutteli/atrium/creating/AssertionPlant;" line="272"><counter type="INSTRUCTION" missed="7" covered="6"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAssertion" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$CheckerOption;Lch/tutteli/atrium/assertions/Assertion;)Lch/tutteli/atrium/creating/AssertionPlant;" line="281"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="202"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/FeatureAssertionsKt$returnValueOf$$inlined$safeReturnValueOf0$1" sourcefilename="FeatureAssertionsBuilder.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="71"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/FeatureAssertionsKt$returnValueOf$$inlined$safeReturnValueOf0$3" sourcefilename="FeatureAssertionsBuilder.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="100"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/FeatureAssertionsKt$returnValueOf$$inlined$safeReturnValueOf0$2" sourcefilename="FeatureAssertionsBuilder.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="85"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/NullableValues" sourcefilename="deprecatedParameterObjects.kt"><method name="toList" desc="()Ljava/util/List;" line="17"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getExpected" desc="()Ljava/lang/Object;" line="16"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOtherExpected" desc="()[Ljava/lang/Object;" line="16"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;[Ljava/lang/Object;)V" line="16"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/ArrayAssertionsKt" sourcefilename="arrayAssertions.kt"><method name="asIterable" desc="(Lch/tutteli/atrium/creating/AssertionPlant;)Lch/tutteli/atrium/creating/AssertionPlant;" line="19"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asIterable" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="31"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="byteArrAsIterable" desc="(Lch/tutteli/atrium/creating/AssertionPlant;)Lch/tutteli/atrium/creating/AssertionPlant;" line="45"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="byteArrAsIterable" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="58"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="charArrAsIterable" desc="(Lch/tutteli/atrium/creating/AssertionPlant;)Lch/tutteli/atrium/creating/AssertionPlant;" line="72"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="charArrAsIterable" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="85"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shortArrAsIterable" desc="(Lch/tutteli/atrium/creating/AssertionPlant;)Lch/tutteli/atrium/creating/AssertionPlant;" line="99"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shortArrAsIterable" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="112"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intArrAsIterable" desc="(Lch/tutteli/atrium/creating/AssertionPlant;)Lch/tutteli/atrium/creating/AssertionPlant;" line="126"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intArrAsIterable" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="139"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="longArrAsIterable" desc="(Lch/tutteli/atrium/creating/AssertionPlant;)Lch/tutteli/atrium/creating/AssertionPlant;" line="153"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="longArrAsIterable" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="166"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="floatArrAsIterable" desc="(Lch/tutteli/atrium/creating/AssertionPlant;)Lch/tutteli/atrium/creating/AssertionPlant;" line="180"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="floatArrAsIterable" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="193"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doubleArrAsIterable" desc="(Lch/tutteli/atrium/creating/AssertionPlant;)Lch/tutteli/atrium/creating/AssertionPlant;" line="207"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doubleArrAsIterable" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="220"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="boolArrAsIterable" desc="(Lch/tutteli/atrium/creating/AssertionPlant;)Lch/tutteli/atrium/creating/AssertionPlant;" line="234"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="boolArrAsIterable" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="247"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="198"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="18"/><counter type="METHOD" missed="0" covered="18"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/FeatureAssertionsKt$returnValueOf$$inlined$safeReturnValueOf3$2" sourcefilename="FeatureAssertionsBuilder.kt"><method name="invoke" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="223"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/FeatureAssertionsKt$returnValueOf$$inlined$safeReturnValueOf3$1" sourcefilename="FeatureAssertionsBuilder.kt"><method name="invoke" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="209"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/FeatureAssertionsKt$returnValueOf$$inlined$safeReturnValueOf3$3" sourcefilename="FeatureAssertionsBuilder.kt"><method name="invoke" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="238"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/CollectionAssertionsKt" sourcefilename="collectionAssertions.kt"><method name="hasSize" desc="(Lch/tutteli/atrium/creating/AssertionPlant;I)Lch/tutteli/atrium/creating/AssertionPlant;" line="21"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBe" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/keywords/Empty;)Lch/tutteli/atrium/creating/AssertionPlant;" line="30"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notToBe" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/keywords/Empty;)Lch/tutteli/atrium/creating/AssertionPlant;" line="39"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSize" desc="(Lch/tutteli/atrium/creating/AssertionPlant;)Lch/tutteli/atrium/creating/AssertionPlant;" line="51"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="64"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/MapAssertionsKt" sourcefilename="mapAssertions.kt"><method name="contains" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/Pair;)Lch/tutteli/atrium/creating/AssertionPlant;" line="25"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/Pairs;)Lch/tutteli/atrium/creating/AssertionPlant;" line="36"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/KeyValue;)Lch/tutteli/atrium/creating/AssertionPlant;" line="48"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/All;)Lch/tutteli/atrium/creating/AssertionPlant;" line="65"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsKey" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="74"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsNotKey" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="83"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExisting" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="96"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExisting" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/Key;)Lch/tutteli/atrium/api/cc/infix/en_GB/creating/map/get/builders/MapGetOption;" line="104"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExisting" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="115"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExisting" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/Key;)Lch/tutteli/atrium/api/cc/infix/en_GB/creating/map/get/builders/MapGetNullableOption;" line="126"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasSize" desc="(Lch/tutteli/atrium/creating/AssertionPlant;I)Lch/tutteli/atrium/creating/AssertionPlant;" line="137"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBe" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/keywords/Empty;)Lch/tutteli/atrium/creating/AssertionPlant;" line="146"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notToBe" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/keywords/Empty;)Lch/tutteli/atrium/creating/AssertionPlant;" line="155"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKeys" desc="(Lch/tutteli/atrium/creating/AssertionPlant;)Lch/tutteli/atrium/creating/AssertionPlant;" line="167"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="keys" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="179"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValues" desc="(Lch/tutteli/atrium/creating/AssertionPlant;)Lch/tutteli/atrium/creating/AssertionPlant;" line="190"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="values" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="202"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asEntries" desc="(Lch/tutteli/atrium/creating/AssertionPlant;)Lch/tutteli/atrium/creating/AssertionPlant;" line="214"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asEntries" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="226"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="280"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="19"/><counter type="METHOD" missed="0" covered="19"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/FeatureAssertionsKt$returnValueOf$$inlined$safeReturnValueOf2$3" sourcefilename="FeatureAssertionsBuilder.kt"><method name="invoke" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="192"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/FeatureAssertionsKt$returnValueOf$$inlined$safeReturnValueOf2$2" sourcefilename="FeatureAssertionsBuilder.kt"><method name="invoke" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="177"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/FeatureAssertionsKt$returnValueOf$$inlined$safeReturnValueOf2$1" sourcefilename="FeatureAssertionsBuilder.kt"><method name="invoke" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="163"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/RegexPatterns" sourcefilename="parameterObjects.kt"><method name="getExpected" desc="()Ljava/lang/String;" line="101"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOtherExpected" desc="()[Ljava/lang/String;" line="102"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;[Ljava/lang/String;)V" line="100"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMapArguments" desc="()Lch/tutteli/atrium/domain/builders/utils/ArgumentMapperBuilder;" line="100"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toList" desc="()Ljava/util/List;" line="100"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/ListAssertionsKt" sourcefilename="listAssertions.kt"><method name="get" desc="(Lch/tutteli/atrium/creating/AssertionPlant;I)Lch/tutteli/atrium/creating/AssertionPlant;" line="20"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/Index;)Lch/tutteli/atrium/api/cc/infix/en_GB/creating/list/get/builders/ListGetOption;" line="28"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Lch/tutteli/atrium/creating/AssertionPlant;I)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="40"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/Index;)Lch/tutteli/atrium/api/cc/infix/en_GB/creating/list/get/builders/ListGetNullableOption;" line="51"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/Entries" sourcefilename="parameterObjects.kt"><method name="getExpected" desc="()Lkotlin/jvm/functions/Function1;" line="51"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOtherExpected" desc="()[Lkotlin/jvm/functions/Function1;" line="52"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toList" desc="()Ljava/util/List;" line="54"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAssertionCreatorOrNull" desc="()Lkotlin/jvm/functions/Function1;" line="48"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOtherAssertionCreatorsOrNulls" desc="()[Lkotlin/jvm/functions/Function1;" line="49"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;[Lkotlin/jvm/functions/Function1;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMapArguments" desc="()Lch/tutteli/atrium/domain/builders/utils/ArgumentMapperBuilder;" line="47"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="21"/><counter type="LINE" missed="4" covered="2"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="5" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/FeatureAssertionsKt" sourcefilename="featureAssertions.kt"><method name="property" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KProperty0;)Lch/tutteli/atrium/creating/AssertionPlant;" line="23"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="property" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;Lkotlin/reflect/KProperty0;)Lch/tutteli/atrium/creating/AssertionPlant;" line="28"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="property" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KProperty1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="37"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="property" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KProperty0;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="51"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="property" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;Lkotlin/reflect/KProperty0;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="56"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="property" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KProperty1;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="69"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="property" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KProperty0;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="79"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="property" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;Lkotlin/reflect/KProperty0;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="84"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="property" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KProperty1;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="93"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KFunction;)Lch/tutteli/atrium/creating/AssertionPlant;" line="105"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;Lkotlin/reflect/KFunction;)Lch/tutteli/atrium/creating/AssertionPlant;" line="110"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="safeReturnValueOf" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KFunction;)Lch/tutteli/atrium/creating/AssertionPlant;" line="120"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KFunction;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="135"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;Lkotlin/reflect/KFunction;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="140"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="safeReturnValueOf" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KFunction;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="155"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KFunction;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="166"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;Lkotlin/reflect/KFunction;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="171"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="safeReturnValueOf" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KFunction;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="182"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="195"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="200"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="safeReturnValueOf" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="211"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="226"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="231"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="safeReturnValueOf" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="246"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="257"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="262"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="safeReturnValueOf" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="273"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="286"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="291"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="safeReturnValueOf" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="302"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="317"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="322"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="safeReturnValueOf" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="337"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="348"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="353"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="safeReturnValueOf" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="364"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="377"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="382"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="safeReturnValueOf" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="393"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="408"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="413"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="safeReturnValueOf" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="428"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="439"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="444"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="safeReturnValueOf" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="455"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="468"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="473"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="safeReturnValueOf" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="484"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="499"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="504"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="safeReturnValueOf" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="519"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="530"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="535"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="safeReturnValueOf" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="546"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="559"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="564"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="safeReturnValueOf" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="575"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="590"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="595"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="safeReturnValueOf" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="610"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="621"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueOf" desc="(Lch/tutteli/atrium/creating/CollectingAssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="626"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="safeReturnValueOf" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/reflect/KFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="637"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="273" covered="588"/><counter type="LINE" missed="21" covered="42"/><counter type="COMPLEXITY" missed="21" covered="42"/><counter type="METHOD" missed="21" covered="42"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/CharSequenceAssertionsKt" sourcefilename="charSequenceAssertions.kt"><method name="to" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/keywords/contain;)Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$Builder;" line="26"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notTo" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/keywords/contain;)Lch/tutteli/atrium/api/cc/infix/en_GB/creating/charsequence/contains/builders/NotCheckerOption;" line="35"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="53"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/Values;)Lch/tutteli/atrium/creating/AssertionPlant;" line="81"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsRegex" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/String;)Lch/tutteli/atrium/creating/AssertionPlant;" line="93"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/RegexPatterns;)Lch/tutteli/atrium/creating/AssertionPlant;" line="118"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsNot" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="132"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsNot" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/Values;)Lch/tutteli/atrium/creating/AssertionPlant;" line="147"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startsWith" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/CharSequence;)Lch/tutteli/atrium/creating/AssertionPlant;" line="156"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startsNotWith" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/CharSequence;)Lch/tutteli/atrium/creating/AssertionPlant;" line="165"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endsWith" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/CharSequence;)Lch/tutteli/atrium/creating/AssertionPlant;" line="175"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endsNotWith" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/CharSequence;)Lch/tutteli/atrium/creating/AssertionPlant;" line="184"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBe" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/keywords/Empty;)Lch/tutteli/atrium/creating/AssertionPlant;" line="196"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notToBe" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/keywords/Empty;)Lch/tutteli/atrium/creating/AssertionPlant;" line="207"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notToBe" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/keywords/Blank;)Lch/tutteli/atrium/creating/AssertionPlant;" line="218"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="248"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/NullableValue" sourcefilename="deprecatedParameterObjects.kt"><method name="toList" desc="()Ljava/util/List;" line="12"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getExpected" desc="()Ljava/lang/Object;" line="11"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="11"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/NullableEntry" sourcefilename="deprecatedParameterObjects.kt"><method name="toList" desc="()Ljava/util/List;" line="24"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAssertionCreator" desc="()Lkotlin/jvm/functions/Function1;" line="22"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V" line="21"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/ArrayAssertionsKt$asIterable$3" sourcefilename="arrayAssertions.kt"><method name="invoke" desc="([C)Ljava/lang/Iterable;" line="72"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/ArrayAssertionsKt$asIterable$4" sourcefilename="arrayAssertions.kt"><method name="invoke" desc="([S)Ljava/lang/Iterable;" line="99"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/ArrayAssertionsKt$asIterable$1" sourcefilename="arrayAssertions.kt"><method name="invoke" desc="([Ljava/lang/Object;)Ljava/lang/Iterable;" line="19"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/ArrayAssertionsKt$asIterable$2" sourcefilename="arrayAssertions.kt"><method name="invoke" desc="([B)Ljava/lang/Iterable;" line="45"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/ArrayAssertionsKt$asIterable$9" sourcefilename="arrayAssertions.kt"><method name="invoke" desc="([Z)Ljava/lang/Iterable;" line="234"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/ArrayAssertionsKt$asIterable$7" sourcefilename="arrayAssertions.kt"><method name="invoke" desc="([F)Ljava/lang/Iterable;" line="180"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/ArrayAssertionsKt$asIterable$8" sourcefilename="arrayAssertions.kt"><method name="invoke" desc="([D)Ljava/lang/Iterable;" line="207"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/ArrayAssertionsKt$asIterable$5" sourcefilename="arrayAssertions.kt"><method name="invoke" desc="([I)Ljava/lang/Iterable;" line="126"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/KeyValue" sourcefilename="parameterObjects.kt"><method name="toPair" desc="()Lkotlin/Pair;" line="72"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="74"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getKey" desc="()Ljava/lang/Object;" line="71"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValueAssertionCreatorOrNull" desc="()Lkotlin/jvm/functions/Function1;" line="71"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="27" covered="15"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/ArrayAssertionsKt$asIterable$6" sourcefilename="arrayAssertions.kt"><method name="invoke" desc="([J)Ljava/lang/Iterable;" line="153"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/IterableContainsInAnyOrderCreatorsKt"><method name="entry" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$CheckerOption;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullableEntry" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$CheckerOption;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullableValue" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$CheckerOption;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="the" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$CheckerOption;Lch/tutteli/atrium/api/cc/infix/en_GB/NullableValues;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="the" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$CheckerOption;Lch/tutteli/atrium/api/cc/infix/en_GB/Values;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="the" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$CheckerOption;Lch/tutteli/atrium/api/cc/infix/en_GB/Entries;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="the" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$CheckerOption;Lch/tutteli/atrium/api/cc/infix/en_GB/NullableEntries;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="value" desc="(Lch/tutteli/atrium/domain/creating/iterable/contains/IterableContains$CheckerOption;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/ComparableAssertionsKt" sourcefilename="comparableAssertions.kt"><method name="isLessThan" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/Comparable;)Lch/tutteli/atrium/creating/AssertionPlant;" line="15"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLessOrEquals" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/Comparable;)Lch/tutteli/atrium/creating/AssertionPlant;" line="24"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isGreaterThan" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/Comparable;)Lch/tutteli/atrium/creating/AssertionPlant;" line="33"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isGreaterOrEquals" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/Comparable;)Lch/tutteli/atrium/creating/AssertionPlant;" line="42"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/AnyAssertionsKt"><method name="getO" desc="(Lch/tutteli/atrium/creating/AssertionPlant;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBe" desc="(Lch/tutteli/atrium/creating/AssertionPlantNullable;Ljava/lang/Void;)V" line="1"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="and" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNotSameAs" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSameAs" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notToBe" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notToBe" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/keywords/Keyword;)Ljava/lang/Void;" line="1"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBe" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/Object;)Lch/tutteli/atrium/creating/AssertionPlant;" line="1"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBe" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/keywords/Keyword;)Ljava/lang/Void;" line="1"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="4" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/Value" sourcefilename="parameterObjects.kt"><method name="toList" desc="()Ljava/util/List;" line="110"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExpected" desc="()Ljava/lang/Object;" line="109"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="109"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/ThrowableAssertionsKt$messageContains$1" sourcefilename="throwableAssertions.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/AssertionPlant;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/All" sourcefilename="parameterObjects.kt"><method name="getExpected" desc="()Ljava/lang/Object;" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOtherExpected" desc="()[Ljava/lang/Object;" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;[Ljava/lang/Object;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMapArguments" desc="()Lch/tutteli/atrium/domain/builders/utils/ArgumentMapperBuilder;" line="18"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toList" desc="()Ljava/util/List;" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/CharSequenceContainsSearchBehavioursKt" sourcefilename="charSequenceContainsSearchBehaviours.kt"><method name="ignoring" desc="(Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$Builder;Lch/tutteli/atrium/api/cc/infix/en_GB/keywords/case;)Lch/tutteli/atrium/domain/creating/charsequence/contains/CharSequenceContains$Builder;" line="21"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ignoring" desc="(Lch/tutteli/atrium/api/cc/infix/en_GB/creating/charsequence/contains/builders/NotCheckerOption;Lch/tutteli/atrium/api/cc/infix/en_GB/keywords/case;)Lch/tutteli/atrium/api/cc/infix/en_GB/creating/charsequence/contains/builders/NotCheckerOption;" line="31"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/SequenceAssertionsKt" sourcefilename="sequenceAssertions.kt"><method name="asIterable" desc="(Lch/tutteli/atrium/creating/AssertionPlant;)Lch/tutteli/atrium/creating/AssertionPlant;" line="18"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/PairAssertionsKt" sourcefilename="pairAssertions.kt"><method name="getFirst" desc="(Lch/tutteli/atrium/creating/AssertionPlant;)Lch/tutteli/atrium/creating/AssertionPlant;" line="20"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFirst" desc="(Lch/tutteli/atrium/creating/AssertionPlant;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="31"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="first" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="45"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSecond" desc="(Lch/tutteli/atrium/creating/AssertionPlant;)Lch/tutteli/atrium/creating/AssertionPlant;" line="57"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSecond" desc="(Lch/tutteli/atrium/creating/AssertionPlant;)Lch/tutteli/atrium/creating/AssertionPlantNullable;" line="68"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="second" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/AssertionPlant;" line="81"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/ThrowableAssertionsKt" sourcefilename="throwableAssertions.kt"><method name="notToThrow" desc="(Lch/tutteli/atrium/domain/creating/throwable/thrown/ThrowableThrown$Builder;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="message" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lkotlin/jvm/functions/Function1;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="messageContains" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Ljava/lang/Object;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="messageContains" desc="(Lch/tutteli/atrium/creating/AssertionPlant;Lch/tutteli/atrium/api/cc/infix/en_GB/Values;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/TypeTransformationAssertionsKt__TypeTransformationDeprecatedAssertionsKt$notToBeNullBut$1" sourcefilename="typeTransformationDeprecatedAssertions.kt"><method name="invoke" desc="(Lch/tutteli/atrium/creating/AssertionPlant;)V" line="25"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/Values" sourcefilename="parameterObjects.kt"><method name="toList" desc="()Ljava/util/List;" line="120"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExpected" desc="()Ljava/lang/Object;" line="117"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOtherExpected" desc="()[Ljava/lang/Object;" line="118"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;[Ljava/lang/Object;)V" line="116"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMapArguments" desc="()Lch/tutteli/atrium/domain/builders/utils/ArgumentMapperBuilder;" line="116"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="36"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/FeatureAssertionsKt$property$$inlined$property$3" sourcefilename="FeatureAssertionsBuilder.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="54"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/FeatureAssertionsKt$property$$inlined$property$1" sourcefilename="FeatureAssertionsBuilder.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="27"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/FeatureAssertionsKt$property$$inlined$property$2" sourcefilename="FeatureAssertionsBuilder.kt"><method name="invoke" desc="()Ljava/lang/Object;" line="40"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/KeyNullableValue" sourcefilename="deprecatedParameterObjects.kt"><method name="toPair" desc="()Lkotlin/Pair;" line="37"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="39"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getKey" desc="()Ljava/lang/Object;" line="36"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValueAssertionCreatorOrNull" desc="()Lkotlin/jvm/functions/Function1;" line="36"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)V" line="36"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/api/cc/infix/en_GB/TypeTransformationAssertionsKt"><method name="notToBeNullBut" desc="(Lch/tutteli/atrium/creating/AssertionPlantNullable;Lch/tutteli/atrium/api/cc/infix/en_GB/keywords/Keyword;)Ljava/lang/Void;" line="1"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="charSequenceContainsCheckers.kt"><line nr="21" mi="0" ci="7" mb="0" cb="0"/><line nr="39" mi="0" ci="10" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="0"/><line nr="86" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="featureAssertions.kt"><line nr="23" mi="0" ci="7" mb="0" cb="0"/><line nr="28" mi="6" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="7" mb="0" cb="0"/><line nr="51" mi="0" ci="7" mb="0" cb="0"/><line nr="56" mi="6" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="0"/><line nr="84" mi="6" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="7" mb="0" cb="0"/><line nr="105" mi="0" ci="7" mb="0" cb="0"/><line nr="110" mi="6" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="7" mb="0" cb="0"/><line nr="135" mi="0" ci="7" mb="0" cb="0"/><line nr="140" mi="6" ci="0" mb="0" cb="0"/><line nr="155" mi="0" ci="7" mb="0" cb="0"/><line nr="166" mi="0" ci="7" mb="0" cb="0"/><line nr="171" mi="6" ci="0" mb="0" cb="0"/><line nr="182" mi="0" ci="7" mb="0" cb="0"/><line nr="195" mi="0" ci="7" mb="0" cb="0"/><line nr="200" mi="6" ci="0" mb="0" cb="0"/><line nr="211" mi="0" ci="7" mb="0" cb="0"/><line nr="226" mi="0" ci="7" mb="0" cb="0"/><line nr="231" mi="6" ci="0" mb="0" cb="0"/><line nr="246" mi="0" ci="7" mb="0" cb="0"/><line nr="257" mi="0" ci="7" mb="0" cb="0"/><line nr="262" mi="6" ci="0" mb="0" cb="0"/><line nr="273" mi="0" ci="7" mb="0" cb="0"/><line nr="286" mi="0" ci="7" mb="0" cb="0"/><line nr="291" mi="6" ci="0" mb="0" cb="0"/><line nr="302" mi="0" ci="7" mb="0" cb="0"/><line nr="317" mi="0" ci="7" mb="0" cb="0"/><line nr="322" mi="6" ci="0" mb="0" cb="0"/><line nr="337" mi="0" ci="7" mb="0" cb="0"/><line nr="348" mi="0" ci="7" mb="0" cb="0"/><line nr="353" mi="6" ci="0" mb="0" cb="0"/><line nr="364" mi="0" ci="7" mb="0" cb="0"/><line nr="377" mi="0" ci="7" mb="0" cb="0"/><line nr="382" mi="6" ci="0" mb="0" cb="0"/><line nr="393" mi="0" ci="7" mb="0" cb="0"/><line nr="408" mi="0" ci="7" mb="0" cb="0"/><line nr="413" mi="6" ci="0" mb="0" cb="0"/><line nr="428" mi="0" ci="7" mb="0" cb="0"/><line nr="439" mi="0" ci="7" mb="0" cb="0"/><line nr="444" mi="6" ci="0" mb="0" cb="0"/><line nr="455" mi="0" ci="7" mb="0" cb="0"/><line nr="468" mi="0" ci="7" mb="0" cb="0"/><line nr="473" mi="6" ci="0" mb="0" cb="0"/><line nr="484" mi="0" ci="7" mb="0" cb="0"/><line nr="499" mi="0" ci="7" mb="0" cb="0"/><line nr="504" mi="6" ci="0" mb="0" cb="0"/><line nr="519" mi="0" ci="7" mb="0" cb="0"/><line nr="530" mi="0" ci="7" mb="0" cb="0"/><line nr="535" mi="6" ci="0" mb="0" cb="0"/><line nr="546" mi="0" ci="7" mb="0" cb="0"/><line nr="559" mi="0" ci="7" mb="0" cb="0"/><line nr="564" mi="6" ci="0" mb="0" cb="0"/><line nr="575" mi="0" ci="7" mb="0" cb="0"/><line nr="590" mi="0" ci="7" mb="0" cb="0"/><line nr="595" mi="6" ci="0" mb="0" cb="0"/><line nr="610" mi="0" ci="7" mb="0" cb="0"/><line nr="621" mi="0" ci="7" mb="0" cb="0"/><line nr="626" mi="6" ci="0" mb="0" cb="0"/><line nr="637" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="273" covered="588"/><counter type="LINE" missed="21" covered="42"/><counter type="COMPLEXITY" missed="21" covered="42"/><counter type="METHOD" missed="21" covered="42"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="mapEntryAssertions.kt"><line nr="24" mi="0" ci="21" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="15" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="15" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="97"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="arrayAssertions.kt"><line nr="19" mi="0" ci="11" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="11" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="11" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="11" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="11" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="0" ci="11" mb="0" cb="0"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><line nr="180" mi="0" ci="11" mb="0" cb="0"/><line nr="193" mi="0" ci="5" mb="0" cb="0"/><line nr="207" mi="0" ci="11" mb="0" cb="0"/><line nr="220" mi="0" ci="5" mb="0" cb="0"/><line nr="234" mi="0" ci="11" mb="0" cb="0"/><line nr="247" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="252"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="27"/><counter type="METHOD" missed="0" covered="27"/><counter type="CLASS" missed="0" covered="10"/></sourcefile><sourcefile name="typeTransformationDeprecatedAssertions.kt"><line nr="25" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="charSequenceAssertions.kt"><line nr="26" mi="0" ci="7" mb="0" cb="0"/><line nr="35" mi="0" ci="15" mb="0" cb="0"/><line nr="53" mi="0" ci="9" mb="0" cb="0"/><line nr="81" mi="0" ci="9" mb="0" cb="0"/><line nr="93" mi="0" ci="9" mb="0" cb="0"/><line nr="118" mi="0" ci="9" mb="0" cb="0"/><line nr="132" mi="0" ci="9" mb="0" cb="0"/><line nr="147" mi="0" ci="7" mb="0" cb="0"/><line nr="156" mi="0" ci="12" mb="0" cb="0"/><line nr="165" mi="0" ci="12" mb="0" cb="0"/><line nr="175" mi="0" ci="12" mb="0" cb="0"/><line nr="184" mi="0" ci="12" mb="0" cb="0"/><line nr="196" mi="0" ci="12" mb="0" cb="0"/><line nr="207" mi="0" ci="12" mb="0" cb="0"/><line nr="218" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="248"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="iterableContainsCheckers.kt"><line nr="21" mi="0" ci="7" mb="0" cb="0"/><line nr="39" mi="0" ci="10" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="0"/><line nr="86" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="bigDecimalAssertions.kt"><line nr="18" mi="0" ci="6" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="6" ci="0" mb="0" cb="0"/><line nr="56" mi="0" ci="12" mb="0" cb="0"/><line nr="73" mi="0" ci="12" mb="0" cb="0"/><line nr="89" mi="0" ci="14" mb="0" cb="0"/><line nr="104" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="98"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="parameterObjects.kt"><line nr="18" mi="3" ci="18" mb="0" cb="0"/><line nr="28" mi="0" ci="6" mb="0" cb="0"/><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="3" ci="9" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="0" ci="9" mb="0" cb="0"/><line nr="60" mi="0" ci="9" mb="0" cb="0"/><line nr="65" mi="0" ci="9" mb="0" cb="0"/><line nr="71" mi="6" ci="9" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="21" ci="0" mb="2" cb="0"/><line nr="83" mi="0" ci="12" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="3" ci="12" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="3" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="6" mb="0" cb="0"/><line nr="102" mi="0" ci="7" mb="0" cb="0"/><line nr="109" mi="3" ci="6" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="3" ci="9" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="18" mb="0" cb="0"/><counter type="INSTRUCTION" missed="60" covered="209"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="25"/><counter type="COMPLEXITY" missed="15" covered="32"/><counter type="METHOD" missed="14" covered="32"/><counter type="CLASS" missed="0" covered="11"/></sourcefile><sourcefile name="charSequenceContainsSearchBehaviours.kt"><line nr="21" mi="0" ci="11" mb="0" cb="0"/><line nr="31" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="charSequenceContainsCreators.kt"><line nr="31" mi="0" ci="9" mb="0" cb="0"/><line nr="58" mi="0" ci="17" mb="0" cb="0"/><line nr="80" mi="0" ci="9" mb="0" cb="0"/><line nr="108" mi="0" ci="17" mb="0" cb="0"/><line nr="128" mi="0" ci="7" mb="0" cb="0"/><line nr="155" mi="0" ci="7" mb="0" cb="0"/><line nr="169" mi="0" ci="9" mb="0" cb="0"/><line nr="193" mi="0" ci="17" mb="0" cb="0"/><line nr="209" mi="0" ci="9" mb="0" cb="0"/><line nr="234" mi="0" ci="17" mb="0" cb="0"/><line nr="248" mi="0" ci="7" mb="0" cb="0"/><line nr="272" mi="7" ci="0" mb="0" cb="0"/><line nr="281" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="202"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="comparableAssertions.kt"><line nr="15" mi="0" ci="12" mb="0" cb="0"/><line nr="24" mi="0" ci="12" mb="0" cb="0"/><line nr="33" mi="0" ci="12" mb="0" cb="0"/><line nr="42" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FeatureAssertionsBuilder.kt"><line nr="27" mi="0" ci="7" mb="0" cb="0"/><line nr="40" mi="0" ci="7" mb="0" cb="0"/><line nr="54" mi="0" ci="7" mb="0" cb="0"/><line nr="71" mi="0" ci="8" mb="0" cb="0"/><line nr="85" mi="0" ci="8" mb="0" cb="0"/><line nr="100" mi="0" ci="8" mb="0" cb="0"/><line nr="117" mi="0" ci="9" mb="0" cb="0"/><line nr="131" mi="0" ci="9" mb="0" cb="0"/><line nr="146" mi="0" ci="9" mb="0" cb="0"/><line nr="163" mi="0" ci="10" mb="0" cb="0"/><line nr="177" mi="0" ci="10" mb="0" cb="0"/><line nr="192" mi="0" ci="10" mb="0" cb="0"/><line nr="209" mi="0" ci="11" mb="0" cb="0"/><line nr="223" mi="0" ci="11" mb="0" cb="0"/><line nr="238" mi="0" ci="11" mb="0" cb="0"/><line nr="255" mi="0" ci="12" mb="0" cb="0"/><line nr="269" mi="0" ci="12" mb="0" cb="0"/><line nr="284" mi="0" ci="12" mb="0" cb="0"/><line nr="301" mi="0" ci="13" mb="0" cb="0"/><line nr="315" mi="0" ci="13" mb="0" cb="0"/><line nr="330" mi="0" ci="13" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="210"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="21"/><counter type="METHOD" missed="0" covered="21"/><counter type="CLASS" missed="0" covered="21"/></sourcefile><sourcefile name="iterableContainsSearchBehaviours.kt"><line nr="21" mi="0" ci="11" mb="0" cb="0"/><line nr="30" mi="0" ci="11" mb="0" cb="0"/><line nr="42" mi="0" ci="11" mb="0" cb="0"/><line nr="51" mi="0" ci="11" mb="0" cb="0"/><line nr="60" mi="0" ci="11" mb="0" cb="0"/><line nr="69" mi="0" ci="11" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="102"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="sequenceAssertions.kt"><line nr="18" mi="0" ci="11" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="throwableAssertions.kt"><line nr="36" mi="0" ci="8" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="8" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="13" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="listAssertions.kt"><line nr="20" mi="0" ci="8" mb="0" cb="0"/><line nr="28" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="8" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="pairAssertions.kt"><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="12" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="mapAssertions.kt"><line nr="25" mi="0" ci="9" mb="0" cb="0"/><line nr="36" mi="0" ci="15" mb="0" cb="0"/><line nr="48" mi="0" ci="9" mb="0" cb="0"/><line nr="65" mi="0" ci="26" mb="0" cb="0"/><line nr="74" mi="0" ci="12" mb="0" cb="0"/><line nr="83" mi="0" ci="12" mb="0" cb="0"/><line nr="96" mi="0" ci="7" mb="0" cb="0"/><line nr="104" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="0" ci="7" mb="0" cb="0"/><line nr="126" mi="0" ci="6" mb="0" cb="0"/><line nr="137" mi="0" ci="12" mb="0" cb="0"/><line nr="146" mi="0" ci="12" mb="0" cb="0"/><line nr="155" mi="0" ci="12" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="12" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="0"/><line nr="202" mi="0" ci="12" mb="0" cb="0"/><line nr="214" mi="0" ci="11" mb="0" cb="0"/><line nr="226" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="286"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="20"/><counter type="METHOD" missed="0" covered="20"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="collectionAssertions.kt"><line nr="21" mi="0" ci="12" mb="0" cb="0"/><line nr="30" mi="0" ci="12" mb="0" cb="0"/><line nr="39" mi="0" ci="12" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="deprecatedParameterObjects.kt"><line nr="11" mi="9" ci="0" mb="0" cb="0"/><line nr="12" mi="4" ci="0" mb="0" cb="0"/><line nr="16" mi="15" ci="0" mb="0" cb="0"/><line nr="17" mi="18" ci="0" mb="0" cb="0"/><line nr="21" mi="6" ci="0" mb="0" cb="0"/><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="4" ci="0" mb="0" cb="0"/><line nr="28" mi="9" ci="0" mb="0" cb="0"/><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="9" ci="0" mb="0" cb="0"/><line nr="36" mi="15" ci="0" mb="0" cb="0"/><line nr="37" mi="6" ci="0" mb="0" cb="0"/><line nr="39" mi="21" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="131" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="20" covered="0"/><counter type="METHOD" missed="19" covered="0"/><counter type="CLASS" missed="5" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="627" covered="2909"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="45" covered="217"/><counter type="COMPLEXITY" missed="92" covered="262"/><counter type="METHOD" missed="90" covered="262"/><counter type="CLASS" missed="7" covered="67"/></package><package name="ch/tutteli/atrium/core/robstoll/lib/reporting"><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/TextListAssertionGroupFormatter" sourcefilename="TextListAssertionGroupFormatter.kt"><method name="&lt;init&gt;" desc="(Ljava/util/Map;Lch/tutteli/atrium/reporting/AssertionFormatterController;Lch/tutteli/atrium/reporting/AssertionPairFormatter;)V" line="27"><counter type="INSTRUCTION" missed="1" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/TextFeatureAssertionGroupFormatter" sourcefilename="TextFeatureAssertionGroupFormatter.kt"><method name="formatGroupHeaderAndGetChildParameterObject" desc="(Lch/tutteli/atrium/assertions/AssertionGroup;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;" line="52"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Map;Lch/tutteli/atrium/reporting/AssertionFormatterController;Lch/tutteli/atrium/reporting/AssertionPairFormatter;)V" line="36"><counter type="INSTRUCTION" missed="2" covered="40"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="91"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/TextMethodCallFormatter$formatCall$1" sourcefilename="TextMethodCallFormatter.kt"><method name="invoke" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="16"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/RemoveAtriumFromAtriumErrorAdjuster$adjustStackTrace$1" sourcefilename="RemoveAtriumFromAtriumErrorAdjuster.kt"><method name="invoke" desc="(Ljava/lang/StackTraceElement;)Z" line="8"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/NoSpecialChildFormattingSingleAssertionGroupTypeFormatter" sourcefilename="NoSpecialChildFormattingSingleAssertionGroupTypeFormatter.kt"><method name="formatGroupAssertions" desc="(Lkotlin/jvm/functions/Function2;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lkotlin/reflect/KClass;Lch/tutteli/atrium/reporting/AssertionFormatterController;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/AssertionFormatterControllerImpl" sourcefilename="AssertionFormatterControllerImpl.kt"><method name="format" desc="(Lch/tutteli/atrium/assertions/Assertion;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)V" line="20"><counter type="INSTRUCTION" missed="5" covered="42"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="noNeedToFormat" desc="(Lch/tutteli/atrium/assertions/Assertion;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)Z" line="36"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="formatGroup" desc="(Lch/tutteli/atrium/assertions/AssertionGroup;Lch/tutteli/atrium/reporting/AssertionFormatter;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="formatChild" desc="(Lch/tutteli/atrium/assertions/Assertion;Lkotlin/jvm/functions/Function1;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="register" desc="(Lch/tutteli/atrium/reporting/AssertionFormatter;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isExplanatoryAssertionGroup" desc="(Lch/tutteli/atrium/assertions/Assertion;)Z" line="16"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="128"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="1" covered="23"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/TextSummaryAssertionGroupFormatter" sourcefilename="TextSummaryAssertionGroupFormatter.kt"><method name="formatGroupHeaderAndGetChildParameterObject" desc="(Lch/tutteli/atrium/assertions/AssertionGroup;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;" line="43"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="formatGroupAssertions" desc="(Lkotlin/jvm/functions/Function2;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Map;Lch/tutteli/atrium/reporting/AssertionFormatterController;Lch/tutteli/atrium/reporting/AssertionPairFormatter;)V" line="31"><counter type="INSTRUCTION" missed="2" covered="42"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="88"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/TextFallbackAssertionFormatter" sourcefilename="TextFallbackAssertionFormatter.kt"><method name="canFormat" desc="(Lch/tutteli/atrium/assertions/Assertion;)Z" line="50"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="formatNonGroup" desc="(Lch/tutteli/atrium/assertions/Assertion;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)V" line="54"><counter type="INSTRUCTION" missed="10" covered="32"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendDescriptiveAssertion" desc="(Lch/tutteli/atrium/assertions/DescriptiveAssertion;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendRepresentationOnlyAssertion" desc="(Lch/tutteli/atrium/assertions/RepresentationOnlyAssertion;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)V" line="74"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="appendExplanatoryAssertion" desc="(Lch/tutteli/atrium/assertions/ExplanatoryAssertion;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)V" line="81"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="formatFallback" desc="(Lch/tutteli/atrium/assertions/Assertion;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)V" line="85"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatGroup" desc="(Lch/tutteli/atrium/assertions/AssertionGroup;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;Lkotlin/jvm/functions/Function2;)V" line="95"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="formatGroupHeaderAndGetChildParameterObject" desc="(Lch/tutteli/atrium/assertions/AssertionGroup;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;" line="103"><counter type="INSTRUCTION" missed="7" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Map;Lch/tutteli/atrium/reporting/AssertionFormatterController;Lch/tutteli/atrium/reporting/AssertionPairFormatter;Lch/tutteli/atrium/reporting/ObjectFormatter;)V" line="38"><counter type="INSTRUCTION" missed="1" covered="42"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="format" desc="(Lch/tutteli/atrium/assertions/Assertion;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="55" covered="149"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="8" covered="21"/><counter type="COMPLEXITY" missed="6" covered="9"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/TextSummaryAssertionGroupFormatter$formatGroupAssertions$1" sourcefilename="TextSummaryAssertionGroupFormatter.kt"><method name="invoke" desc="(Lch/tutteli/atrium/assertions/Assertion;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/TextMethodCallFormatter" sourcefilename="TextMethodCallFormatter.kt"><method name="formatCall" desc="(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;" line="16"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="format" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lkotlin/jvm/functions/Function0;" line="18"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="formatArgument" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="22"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="99"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/TextFeatureAssertionGroupFormatter$NameDecoratingAssertionGroup" sourcefilename="TextFeatureAssertionGroupFormatter.kt"><method name="getDescription" desc="()Lch/tutteli/atrium/reporting/translating/Translatable;" line="68"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Lch/tutteli/atrium/assertions/AssertionGroup;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/RemoveRunnerAtriumErrorAdjuster" sourcefilename="RemoveRunnerAtriumErrorAdjuster.kt"><method name="adjustStackTrace" desc="(Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;" line="8"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="5"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/AssertionFormatterControllerBasedFacade" sourcefilename="AssertionFormatterControllerBasedFacade.kt"><method name="format" desc="(Lch/tutteli/atrium/assertions/Assertion;Ljava/lang/StringBuilder;Lkotlin/jvm/functions/Function1;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="register" desc="(Lkotlin/jvm/functions/Function1;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/reporting/AssertionFormatterController;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/RemoveAtriumFromAtriumErrorAdjuster" sourcefilename="RemoveAtriumFromAtriumErrorAdjuster.kt"><method name="adjustStackTrace" desc="(Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;" line="8"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="5"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/RemoveRunnerAtriumErrorAdjuster$adjustStackTrace$1" sourcefilename="RemoveRunnerAtriumErrorAdjuster.kt"><method name="invoke" desc="(Ljava/lang/StackTraceElement;)Z" line="9"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/TextIndentAssertionGroupFormatter" sourcefilename="TextIndentAssertionGroupFormatter.kt"><method name="formatGroupHeaderAndGetChildParameterObject" desc="(Lch/tutteli/atrium/assertions/AssertionGroup;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;" line="44"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Map;Lch/tutteli/atrium/reporting/AssertionFormatterController;)V" line="32"><counter type="INSTRUCTION" missed="1" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/MultiAtriumErrorAdjusterImpl" sourcefilename="MultiAtriumErrorAdjusterImpl.kt"><method name="adjustStackTrace" desc="(Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;" line="12"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/reporting/AtriumErrorAdjuster;Lch/tutteli/atrium/reporting/AtriumErrorAdjuster;Ljava/util/List;)V" line="5"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/TextPrefixBasedAssertionGroupFormatter" sourcefilename="TextPrefixBasedAssertionGroupFormatter.kt"><method name="formatWithGroupName" desc="(Lch/tutteli/atrium/reporting/AssertionPairFormatter;Lch/tutteli/atrium/assertions/AssertionGroup;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;" line="15"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="formatAfterAppendLnEtc" desc="(Lch/tutteli/atrium/reporting/AssertionPairFormatter;Lch/tutteli/atrium/assertions/AssertionGroup;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;" line="24"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="7"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/DetailedObjectFormatterCommon$Companion" sourcefilename="DetailedObjectFormatter.kt"/><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/TextNextLineAssertionPairFormatter" sourcefilename="TextNextLineAssertionPairFormatter.kt"><method name="formatGroupHeader" desc="(Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;Lch/tutteli/atrium/assertions/AssertionGroup;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)V" line="37"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;)V" line="43"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)V" line="51"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/reporting/ObjectFormatter;Lch/tutteli/atrium/reporting/translating/Translator;)V" line="28"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="85" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/NoSpecialChildFormattingSingleAssertionGroupTypeFormatter$formatGroupAssertions$1" sourcefilename="NoSpecialChildFormattingSingleAssertionGroupTypeFormatter.kt"><method name="invoke" desc="(Lch/tutteli/atrium/assertions/Assertion;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/DetailedObjectFormatter" sourcefilename="DetailedObjectFormatter.kt"><method name="format" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="54"><counter type="INSTRUCTION" missed="5" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="format" desc="(Ljava/lang/Class;)Ljava/lang/String;" line="59"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="format" desc="(Lkotlin/reflect/KClass;)Ljava/lang/String;" line="62"><counter type="INSTRUCTION" missed="13" covered="46"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="identityHash" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;" line="70"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/reporting/translating/Translator;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="100"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/NoOpAtriumErrorAdjuster" sourcefilename="NoOpAtriumErrorAdjuster.kt"><method name="adjustStackTrace" desc="(Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;" line="6"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="5"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="7"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/FilterAtriumErrorAdjuster" sourcefilename="FilterAtriumErrorAdjuster.kt"><method name="adjust" desc="(Ljava/lang/Throwable;)V" line="8"><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="adjustOtherThanStacks" desc="(Ljava/lang/Throwable;)V" line="19"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="5"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/AssertionFormatterControllerImpl$formatGroup$1" sourcefilename="AssertionFormatterControllerImpl.kt"><method name="invoke" desc="(Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;Lkotlin/jvm/functions/Function1;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/NoOpAtriumErrorAdjusterCommon" sourcefilename="NoOpAtriumErrorAdjuster.kt"><method name="adjustOtherThanStacks" desc="(Ljava/lang/Throwable;)V" line="15"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="adjust" desc="(Ljava/lang/Throwable;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="7"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/DetailedObjectFormatterCommon" sourcefilename="DetailedObjectFormatter.kt"><method name="format" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="46"><counter type="INSTRUCTION" missed="5" covered="102"/><counter type="BRANCH" missed="1" covered="21"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="safeEval" desc="(Lch/tutteli/atrium/reporting/LazyRepresentation;)Ljava/lang/Object;" line="63"><counter type="INSTRUCTION" missed="6" covered="7"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="format" desc="(Ljava/lang/String;)Ljava/lang/String;" line="69"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="format" desc="(Ljava/lang/CharSequence;)Ljava/lang/String;" line="70"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="format" desc="(Ljava/lang/Enum;)Ljava/lang/String;" line="72"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Ljava/lang/Throwable;)Ljava/lang/String;" line="74"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classNameAndIdentity" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="76"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/reporting/translating/Translator;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="30" covered="175"/><counter type="BRANCH" missed="1" covered="21"/><counter type="LINE" missed="3" covered="22"/><counter type="COMPLEXITY" missed="2" covered="17"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/SingleAssertionGroupTypeFormatter" sourcefilename="SingleAssertionGroupTypeFormatter.kt"><method name="canFormat" desc="(Lch/tutteli/atrium/assertions/Assertion;)Z" line="32"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="formatNonGroup" desc="(Lch/tutteli/atrium/assertions/Assertion;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)Ljava/lang/Void;" line="41"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatGroup" desc="(Lch/tutteli/atrium/assertions/AssertionGroup;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;Lkotlin/jvm/functions/Function2;)V" line="67"><counter type="INSTRUCTION" missed="15" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="formatSpecificGroup" desc="(Lch/tutteli/atrium/assertions/AssertionGroup;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;Lkotlin/jvm/functions/Function2;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lkotlin/reflect/KClass;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="format" desc="(Lch/tutteli/atrium/assertions/Assertion;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)V" line="24"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="51" covered="59"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/TextFallbackAssertionFormatter$formatGroup$1" sourcefilename="TextFallbackAssertionFormatter.kt"><method name="invoke" desc="(Lch/tutteli/atrium/assertions/Assertion;)V" line="97"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/TextSameLineAssertionPairFormatter" sourcefilename="TextSameLineAssertionPairFormatter.kt"><method name="formatGroupHeader" desc="(Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;Lch/tutteli/atrium/assertions/AssertionGroup;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="format" desc="(Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/reporting/ObjectFormatter;Lch/tutteli/atrium/reporting/translating/Translator;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/TextListBasedAssertionGroupFormatter" sourcefilename="TextListBasedAssertionGroupFormatter.kt"><method name="formatGroupHeaderAndGetChildParameterObject" desc="(Lch/tutteli/atrium/assertions/AssertionGroup;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;" line="39"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lch/tutteli/atrium/reporting/AssertionFormatterController;Lch/tutteli/atrium/reporting/AssertionPairFormatter;Lkotlin/reflect/KClass;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/TextMethodCallFormatter$format$1" sourcefilename="TextMethodCallFormatter.kt"><method name="invoke" desc="()Ljava/lang/String;" line="19"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/OnlyFailureReporter" sourcefilename="OnlyFailureReporter.kt"><method name="format" desc="(Lch/tutteli/atrium/assertions/Assertion;Ljava/lang/StringBuilder;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assertionFilter" desc="(Lch/tutteli/atrium/assertions/Assertion;)Z" line="30"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAtriumErrorAdjuster" desc="()Lch/tutteli/atrium/reporting/AtriumErrorAdjuster;" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/reporting/AssertionFormatterFacade;Lch/tutteli/atrium/reporting/AtriumErrorAdjuster;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/reporting/TextExplanatoryAssertionGroupFormatter" sourcefilename="TextExplanatoryAssertionGroupFormatter.kt"><method name="formatGroupHeaderAndGetChildParameterObject" desc="(Lch/tutteli/atrium/assertions/AssertionGroup;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;" line="50"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Map;Lch/tutteli/atrium/reporting/AssertionFormatterController;)V" line="36"><counter type="INSTRUCTION" missed="2" covered="34"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="58"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="TextNextLineAssertionPairFormatter.kt"><line nr="28" mi="9" ci="0" mb="0" cb="0"/><line nr="37" mi="9" ci="0" mb="0" cb="0"/><line nr="43" mi="7" ci="0" mb="0" cb="0"/><line nr="51" mi="10" ci="0" mb="0" cb="0"/><line nr="52" mi="10" ci="0" mb="4" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="5" ci="0" mb="0" cb="0"/><line nr="55" mi="8" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="85" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AssertionFormatterControllerImpl.kt"><line nr="16" mi="0" ci="6" mb="0" cb="0"/><line nr="17" mi="0" ci="13" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="2"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="23" mi="0" ci="8" mb="0" cb="2"/><line nr="24" mi="5" ci="0" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="10" mb="0" cb="2"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="2"/><line nr="37" mi="0" ci="3" mb="0" cb="2"/><line nr="38" mi="0" ci="11" mb="0" cb="2"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="17" mb="0" cb="4"/><line nr="52" mi="0" ci="9" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="8" mb="0" cb="4"/><line nr="58" mi="0" ci="13" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="166"/><counter type="BRANCH" missed="0" covered="20"/><counter type="LINE" missed="1" covered="27"/><counter type="COMPLEXITY" missed="0" covered="18"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="FilterAtriumErrorAdjuster.kt"><line nr="5" mi="3" ci="0" mb="0" cb="0"/><line nr="8" mi="9" ci="0" mb="0" cb="0"/><line nr="9" mi="8" ci="0" mb="0" cb="0"/><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="18" ci="0" mb="2" cb="0"/><line nr="12" mi="16" ci="0" mb="0" cb="0"/><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="14" mi="1" ci="0" mb="0" cb="0"/><line nr="19" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TextPrefixBasedAssertionGroupFormatter.kt"><line nr="7" mi="0" ci="6" mb="0" cb="0"/><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="16" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DetailedObjectFormatter.kt"><line nr="21" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="2"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="10" mb="0" cb="2"/><line nr="49" mi="0" ci="14" mb="0" cb="2"/><line nr="50" mi="0" ci="6" mb="0" cb="2"/><line nr="51" mi="0" ci="8" mb="0" cb="2"/><line nr="52" mi="0" ci="8" mb="0" cb="2"/><line nr="53" mi="0" ci="7" mb="0" cb="2"/><line nr="54" mi="0" ci="12" mb="0" cb="2"/><line nr="55" mi="5" ci="11" mb="1" cb="3"/><line nr="56" mi="5" ci="6" mb="1" cb="1"/><line nr="57" mi="0" ci="9" mb="0" cb="2"/><line nr="58" mi="0" ci="11" mb="0" cb="0"/><line nr="59" mi="0" ci="16" mb="0" cb="0"/><line nr="62" mi="0" ci="15" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="13" mb="0" cb="2"/><line nr="65" mi="14" ci="4" mb="1" cb="1"/><line nr="66" mi="5" ci="13" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="16" mb="0" cb="0"/><line nr="70" mi="0" ci="29" mb="0" cb="0"/><line nr="72" mi="19" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="21" mb="0" cb="0"/><counter type="INSTRUCTION" missed="48" covered="275"/><counter type="BRANCH" missed="3" covered="25"/><counter type="LINE" missed="1" covered="27"/><counter type="COMPLEXITY" missed="4" covered="23"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="RemoveRunnerAtriumErrorAdjuster.kt"><line nr="5" mi="3" ci="0" mb="0" cb="0"/><line nr="8" mi="4" ci="0" mb="0" cb="0"/><line nr="9" mi="11" ci="0" mb="2" cb="0"/><line nr="10" mi="11" ci="0" mb="2" cb="0"/><line nr="11" mi="11" ci="0" mb="2" cb="0"/><line nr="12" mi="15" ci="0" mb="2" cb="0"/><line nr="13" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="NoSpecialChildFormattingSingleAssertionGroupTypeFormatter.kt"><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="9" mb="0" cb="0"/><line nr="37" mi="0" ci="7" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="AssertionFormatterControllerBasedFacade.kt"><line nr="17" mi="0" ci="6" mb="0" cb="0"/><line nr="21" mi="0" ci="9" mb="0" cb="0"/><line nr="24" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TextMethodCallFormatter.kt"><line nr="14" mi="0" ci="7" mb="0" cb="0"/><line nr="16" mi="0" ci="26" mb="0" cb="0"/><line nr="18" mi="0" ci="6" mb="0" cb="0"/><line nr="19" mi="0" ci="7" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="2"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="26" mb="0" cb="2"/><line nr="25" mi="0" ci="14" mb="0" cb="2"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="110"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="TextFallbackAssertionFormatter.kt"><line nr="38" mi="0" ci="16" mb="0" cb="0"/><line nr="44" mi="1" ci="11" mb="1" cb="1"/><line nr="45" mi="0" ci="8" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="9" mb="0" cb="2"/><line nr="57" mi="6" ci="3" mb="1" cb="1"/><line nr="58" mi="0" ci="9" mb="1" cb="1"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="8" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="9" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="9" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="16" ci="0" mb="0" cb="0"/><line nr="87" mi="9" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="9" mb="0" cb="0"/><line nr="97" mi="0" ci="7" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="8" mb="1" cb="1"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="7" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="55" covered="160"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="8" covered="23"/><counter type="COMPLEXITY" missed="6" covered="10"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="TextListAssertionGroupFormatter.kt"><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="1" ci="9" mb="1" cb="1"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TextExplanatoryAssertionGroupFormatter.kt"><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="1" ci="11" mb="1" cb="1"/><line nr="44" mi="1" ci="12" mb="1" cb="1"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="7" mb="0" cb="2"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="58"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TextSummaryAssertionGroupFormatter.kt"><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="9" mb="0" cb="0"/><line nr="36" mi="1" ci="11" mb="1" cb="1"/><line nr="37" mi="1" ci="12" mb="1" cb="1"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="8" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="10" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="2"/><line nr="57" mi="0" ci="8" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="110"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="SingleAssertionGroupTypeFormatter.kt"><line nr="24" mi="5" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="14" mb="0" cb="4"/><line nr="41" mi="5" ci="0" mb="0" cb="0"/><line nr="42" mi="14" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="12" mb="1" cb="1"/><line nr="69" mi="15" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="51" covered="59"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TextListBasedAssertionGroupFormatter.kt"><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="33" mi="0" ci="7" mb="0" cb="0"/><line nr="39" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TextFeatureAssertionGroupFormatter.kt"><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="1" ci="11" mb="1" cb="1"/><line nr="46" mi="1" ci="12" mb="1" cb="1"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="19" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="8" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="109"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="NoOpAtriumErrorAdjuster.kt"><line nr="5" mi="0" ci="7" mb="0" cb="0"/><line nr="6" mi="2" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="1" ci="0" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="14"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="RemoveAtriumFromAtriumErrorAdjuster.kt"><line nr="5" mi="3" ci="0" mb="0" cb="0"/><line nr="8" mi="20" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="TextSameLineAssertionPairFormatter.kt"><line nr="26" mi="0" ci="9" mb="0" cb="0"/><line nr="35" mi="0" ci="8" mb="0" cb="0"/><line nr="42" mi="0" ci="9" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OnlyFailureReporter.kt"><line nr="18" mi="0" ci="9" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="12" mb="0" cb="0"/><line nr="30" mi="0" ci="7" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MultiAtriumErrorAdjusterImpl.kt"><line nr="5" mi="1" ci="0" mb="0" cb="0"/><line nr="9" mi="11" ci="0" mb="0" cb="0"/><line nr="12" mi="5" ci="0" mb="0" cb="0"/><line nr="13" mi="13" ci="0" mb="0" cb="0"/><line nr="14" mi="9" ci="0" mb="0" cb="0"/><line nr="15" mi="6" ci="0" mb="0" cb="0"/><line nr="16" mi="5" ci="0" mb="0" cb="0"/><line nr="17" mi="1" ci="0" mb="0" cb="0"/><line nr="18" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TextIndentAssertionGroupFormatter.kt"><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="1" ci="12" mb="1" cb="1"/><line nr="44" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="495" covered="1375"/><counter type="BRANCH" missed="32" covered="76"/><counter type="LINE" missed="52" covered="181"/><counter type="COMPLEXITY" missed="47" covered="102"/><counter type="METHOD" missed="23" covered="72"/><counter type="CLASS" missed="7" covered="26"/></package><package name="ch/tutteli/atrium/domain/robstoll/creating/any/typetransformation/failurehandlers"><class name="ch/tutteli/atrium/domain/robstoll/creating/any/typetransformation/failurehandlers/FailureHandlerFactoryImpl" sourcefilename="FailureHandlerFactoryImpl.kt"><method name="newExplanatory" desc="()Lch/tutteli/atrium/domain/creating/any/typetransformation/AnyTypeTransformation$FailureHandler;" line="16"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newExplanatoryWithHint" desc="(Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;)Lch/tutteli/atrium/domain/creating/any/typetransformation/AnyTypeTransformation$FailureHandler;" line="21"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="16"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="FailureHandlerFactoryImpl.kt"><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="5" ci="0" mb="0" cb="0"/><line nr="21" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="16"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="5" covered="16"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></package><package name="ch/tutteli/atrium/domain/robstoll/lib/assertions"><class name="ch/tutteli/atrium/domain/robstoll/lib/assertions/LazyThreadUnsafeBasicAssertion" sourcefilename="LazyThreadUnsafeBasicAssertion.kt"><method name="getRepresentation" desc="()Ljava/lang/Object;" line="16"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDescription" desc="()Lch/tutteli/atrium/reporting/translating/Translatable;" line="17"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="holds" desc="()Z" line="18"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function0;)V" line="11"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getExpected" desc="()Ljava/lang/Object;" line="11"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/assertions/LazyThreadUnsafeAssertionGroup" sourcefilename="LazyThreadUnsafeAssertionGroup.kt"><method name="getDescription" desc="()Lch/tutteli/atrium/reporting/translating/Translatable;" line="16"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Lch/tutteli/atrium/assertions/AssertionGroupType;" line="17"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRepresentation" desc="()Ljava/lang/Object;" line="18"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAssertions" desc="()Ljava/util/List;" line="19"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="holds" desc="()Z" line="20"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function0;)V" line="11"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Lch/tutteli/atrium/reporting/translating/Translatable;" line="11"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSubject" desc="()Ljava/lang/Object;" line="11"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="35"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/assertions/LazyThreadUnsafeAssertionGroup$assertionGroup$2" sourcefilename="LazyThreadUnsafeAssertionGroup.kt"><method name="invoke" desc="()Lch/tutteli/atrium/assertions/AssertionGroup;" line="13"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/assertions/LazyThreadUnsafeBasicAssertion$basicAssertion$2" sourcefilename="LazyThreadUnsafeBasicAssertion.kt"><method name="invoke" desc="()Lch/tutteli/atrium/assertions/DescriptiveAssertion;" line="13"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="LazyThreadUnsafeAssertionGroup.kt"><line nr="11" mi="6" ci="2" mb="0" cb="0"/><line nr="12" mi="0" ci="10" mb="0" cb="0"/><line nr="13" mi="0" ci="5" mb="0" cb="0"/><line nr="16" mi="0" ci="4" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="40"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="LazyThreadUnsafeBasicAssertion.kt"><line nr="11" mi="5" ci="0" mb="0" cb="0"/><line nr="12" mi="10" ci="0" mb="0" cb="0"/><line nr="13" mi="5" ci="0" mb="0" cb="0"/><line nr="16" mi="4" ci="0" mb="0" cb="0"/><line nr="17" mi="4" ci="0" mb="0" cb="0"/><line nr="18" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="41" covered="40"/><counter type="LINE" missed="6" covered="8"/><counter type="COMPLEXITY" missed="8" covered="7"/><counter type="METHOD" missed="8" covered="7"/><counter type="CLASS" missed="2" covered="2"/></package><package name="ch/tutteli/atrium/core/robstoll/lib/checking"><class name="ch/tutteli/atrium/core/robstoll/lib/checking/ThrowingAssertionChecker" sourcefilename="ThrowingAssertionChecker.kt"><method name="check" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;Ljava/util/List;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/reporting/Reporter;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="check" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Lkotlin/jvm/functions/Function0;Ljava/util/List;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/checking/FeatureAssertionChecker" sourcefilename="FeatureAssertionChecker.kt"><method name="check" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;Ljava/util/List;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/creating/AssertionHolder;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="check" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Lkotlin/jvm/functions/Function0;Ljava/util/List;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="ch/tutteli/atrium/core/robstoll/lib/checking/DelegatingAssertionChecker" sourcefilename="DelegatingAssertionChecker.kt"><method name="check" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;Ljava/util/List;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/creating/AssertionHolder;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="check" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Lkotlin/jvm/functions/Function0;Ljava/util/List;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ThrowingAssertionChecker.kt"><line nr="22" mi="0" ci="12" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="2"/><line nr="43" mi="0" ci="12" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FeatureAssertionChecker.kt"><line nr="30" mi="0" ci="12" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="8" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DelegatingAssertionChecker.kt"><line nr="10" mi="0" ci="12" mb="0" cb="0"/><line nr="13" mi="0" ci="10" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="159"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="3"/></package><package name="ch/tutteli/atrium/domain/robstoll/lib/creating/basic/contains/builders"><class name="ch/tutteli/atrium/domain/robstoll/lib/creating/basic/contains/builders/ContainsBuilder" sourcefilename="ContainsBuilder.kt"><method name="getSubjectProvider" desc="()Lch/tutteli/atrium/creating/SubjectProvider;" line="7"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSearchBehaviour" desc="()Lch/tutteli/atrium/domain/creating/basic/contains/Contains$SearchBehaviour;" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lch/tutteli/atrium/creating/SubjectProvider;Lch/tutteli/atrium/domain/creating/basic/contains/Contains$SearchBehaviour;)V" line="6"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ContainsBuilder.kt"><line nr="6" mi="0" ci="9" mb="0" cb="0"/><line nr="7" mi="0" ci="3" mb="0" cb="0"/><line nr="8" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></package><package name="ch/tutteli/atrium/domain/robstoll/lib/assertions/composers"><class name="ch/tutteli/atrium/domain/robstoll/lib/assertions/composers/DescriptiveWithFailureHintKt$_createDescriptiveWithFailureHint$1" sourcefilename="descriptiveWithFailureHint.kt"><method name="invoke" desc="()Z" line="22"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="ch/tutteli/atrium/domain/robstoll/lib/assertions/composers/DescriptiveWithFailureHintKt" sourcefilename="descriptiveWithFailureHint.kt"><method name="_createDescriptiveWithFailureHint" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;)Lch/tutteli/atrium/assertions/Assertion;" line="16"><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="descriptiveWithFailureHint.kt"><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="17" mi="6" ci="0" mb="0" cb="0"/><line nr="18" mi="1" ci="0" mb="0" cb="0"/><line nr="19" mi="2" ci="0" mb="0" cb="0"/><line nr="21" mi="8" ci="0" mb="4" cb="0"/><line nr="22" mi="17" ci="0" mb="0" cb="0"/><line nr="24" mi="4" ci="0" mb="0" cb="0"/><line nr="27" mi="4" ci="0" mb="0" cb="0"/><line nr="28" mi="5" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="2" covered="0"/></package><package name="ch/tutteli/atrium/domain/robstoll/creating/throwable/thrown/providers"><class name="ch/tutteli/atrium/domain/robstoll/creating/throwable/thrown/providers/AbsentThrowableMessageProviderFactoryImpl" sourcefilename="AbsentThrowableMessageProviderFactoryImpl.kt"><method name="translatableBased" desc="(Lch/tutteli/atrium/reporting/translating/Translatable;)Lch/tutteli/atrium/domain/creating/throwable/thrown/ThrowableThrown$AbsentThrowableMessageProvider;" line="14"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="AbsentThrowableMessageProviderFactoryImpl.kt"><line nr="11" mi="3" ci="0" mb="0" cb="0"/><line nr="14" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><counter type="INSTRUCTION" missed="9161" covered="16403"/><counter type="BRANCH" missed="250" covered="300"/><counter type="LINE" missed="990" covered="1952"/><counter type="COMPLEXITY" missed="701" covered="1242"/><counter type="METHOD" missed="559" covered="1107"/><counter type="CLASS" missed="154" covered="439"/></report>